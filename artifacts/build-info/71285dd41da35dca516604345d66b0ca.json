{"id":"71285dd41da35dca516604345d66b0ca","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC1155Pausable is ERC1155, Pausable {\n    /**\n     * @dev See {ERC1155-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override whenNotPaused {\n        super._update(from, to, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/RoguesItems.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.22;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC1155} from \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport {ERC1155Burnable} from \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport {ERC1155Pausable} from \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract RoguesItems is ERC1155, AccessControl, ERC1155Pausable, ERC1155Burnable {\n  bytes32 public constant URI_SETTER_ROLE = keccak256(\"URI_SETTER_ROLE\");\n  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n  using Strings for uint256;\n\n  constructor(address defaultAdmin, address pauser, address minter) ERC1155(\"\") {\n    _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n    _grantRole(PAUSER_ROLE, pauser);\n    _grantRole(MINTER_ROLE, minter);\n  }\n\n  function balanceOfBatchOneAddr(address account, uint256[] memory ids) public view returns (uint256[] memory) {\n    uint256[] memory batchBalances = new uint256[](ids.length);\n    for (uint256 i = 0; i < ids.length; ++i) {\n      batchBalances[i] = balanceOf(account, ids[i]);\n    }\n    return batchBalances;\n  }\n\n  function setURI(string memory newuri) public onlyRole(URI_SETTER_ROLE) {\n    _setURI(newuri);\n  }\n\n  function uri(uint256 tokenId) public view override returns (string memory) {\n    string memory baseURI = ERC1155.uri(tokenId);\n    return string(abi.encodePacked(baseURI, tokenId.toString()));\n  }\n\n  function pause() public onlyRole(PAUSER_ROLE) {\n    _pause();\n  }\n\n  function unpause() public onlyRole(PAUSER_ROLE) {\n    _unpause();\n  }\n\n  function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyRole(MINTER_ROLE) {\n    _mint(account, id, amount, data);\n  }\n\n  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public onlyRole(MINTER_ROLE) {\n    _mintBatch(to, ids, amounts, data);\n  }\n\n  function mintBatchAddr(address[] memory accounts, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public onlyRole(MINTER_ROLE) {\n    for (uint256 i = 0; i < accounts.length; ++i) {\n      _mint(accounts[i], ids[i], amounts[i], data);\n    }\n  }\n\n  // The following functions are overrides required by Solidity.\n  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal override(ERC1155, ERC1155Pausable) {\n    super._update(from, to, ids, values);\n  }\n\n  function supportsInterface(bytes4 interfaceId) public view override(ERC1155, AccessControl) returns (bool) {\n    return super.supportsInterface(interfaceId);\n  }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[2826],"ERC165":[3593],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2827,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3594,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2826,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,3593,3605,378,2826],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3592],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3592,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[515],"IERC20Errors":[420],"IERC721Errors":[468]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":420,"linearizedBaseContracts":[420],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":390,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":390,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":390,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":390,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":395,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":395,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":400,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":400,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":409,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":409,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":409,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":409,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":414,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":414,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":419,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":419,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":516,"src":"280:1764:2","usedErrors":[390,395,400,409,414,419],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":468,"linearizedBaseContracts":[468],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":426,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":426,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":431,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":431,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":440,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":440,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":440,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":440,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":445,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":445,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":450,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":450,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":457,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":457,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":457,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":462,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":462,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":467,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":467,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":516,"src":"2190:2092:2","usedErrors":[426,431,440,445,450,457,462,467],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":515,"linearizedBaseContracts":[515],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":480,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":485,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":485,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":490,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":490,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":497,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":497,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":497,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":502,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":502,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":507,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":507,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":514,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":514,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":514,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":516,"src":"4430:2107:2","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[2764],"Context":[2826],"ERC1155":[1432],"ERC1155Utils":[1886],"ERC165":[3593],"IERC1155":[1555],"IERC1155Errors":[515],"IERC1155MetadataURI":[1732],"IERC165":[3605]},"id":1433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":1556,"src":"135:40:3","symbolAliases":[{"foreign":{"id":518,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":1733,"src":"176:73:3","symbolAliases":[{"foreign":{"id":520,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"184:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":1887,"src":"250:54:3","symbolAliases":[{"foreign":{"id":522,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"258:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":2827,"src":"305:48:3","symbolAliases":[{"foreign":{"id":524,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"313:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":3594,"src":"354:69:3","symbolAliases":[{"foreign":{"id":526,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"362:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":527,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"371:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":2765,"src":"424:46:3","symbolAliases":[{"foreign":{"id":529,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"432:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":516,"src":"471:67:3","symbolAliases":[{"foreign":{"id":531,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"479:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":534,"name":"Context","nameLocations":["754:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2826,"src":"754:7:3"},"id":535,"nodeType":"InheritanceSpecifier","src":"754:7:3"},{"baseName":{"id":536,"name":"ERC165","nameLocations":["763:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"763:6:3"},"id":537,"nodeType":"InheritanceSpecifier","src":"763:6:3"},{"baseName":{"id":538,"name":"IERC1155","nameLocations":["771:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1555,"src":"771:8:3"},"id":539,"nodeType":"InheritanceSpecifier","src":"771:8:3"},{"baseName":{"id":540,"name":"IERC1155MetadataURI","nameLocations":["781:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"781:19:3"},"id":541,"nodeType":"InheritanceSpecifier","src":"781:19:3"},{"baseName":{"id":542,"name":"IERC1155Errors","nameLocations":["802:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"802:14:3"},"id":543,"nodeType":"InheritanceSpecifier","src":"802:14:3"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"540:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1432,"linearizedBaseContracts":[1432,515,1732,1555,3593,3605,2826],"name":"ERC1155","nameLocation":"743:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":547,"libraryName":{"id":544,"name":"Arrays","nameLocations":["829:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"829:6:3"},"nodeType":"UsingForDirective","src":"823:27:3","typeName":{"baseType":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"nodeType":"ArrayTypeName","src":"840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":551,"libraryName":{"id":548,"name":"Arrays","nameLocations":["861:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"861:6:3"},"nodeType":"UsingForDirective","src":"855:27:3","typeName":{"baseType":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":550,"nodeType":"ArrayTypeName","src":"872:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":557,"mutability":"mutable","name":"_balances","nameLocation":"955:9:3","nodeType":"VariableDeclaration","scope":1432,"src":"888:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":556,"keyName":"id","keyNameLocation":"904:2:3","keyType":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":555,"keyName":"account","keyNameLocation":"926:7:3","keyType":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":563,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:3","nodeType":"VariableDeclaration","scope":1432,"src":"971:88:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":562,"keyName":"account","keyNameLocation":"987:7:3","keyType":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":561,"keyName":"operator","keyNameLocation":"1014:8:3","keyType":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":560,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":565,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:3","nodeType":"VariableDeclaration","scope":1432,"src":"1180:19:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":575,"nodeType":"Block","src":"1281:30:3","statements":[{"expression":{"arguments":[{"id":572,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1299:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":571,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1291:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"ExpressionStatement","src":"1291:13:3"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1206:38:3","text":" @dev See {_setURI}."},"id":576,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:3","nodeType":"VariableDeclaration","scope":576,"src":"1261:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":567,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:3"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1281:0:3"},"scope":1432,"src":"1249:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3592,3604],"body":{"id":606,"nodeType":"Block","src":"1486:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1515:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":589,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1535:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1555_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1555_$","typeString":"type(contract IERC1155)"}],"id":588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1555","typeString":"type(contract IERC1155)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":593,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1572:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":595,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"1592:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1732_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1732_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1732","typeString":"type(contract IERC1155MetadataURI)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":602,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":600,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1432_$","typeString":"type(contract super ERC1155)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3592,"src":"1640:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":586,"id":605,"nodeType":"Return","src":"1496:180:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"1317:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":607,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:3","nodeType":"FunctionDefinition","overrides":{"id":583,"nodeType":"OverrideSpecifier","overrides":[{"id":581,"name":"ERC165","nameLocations":["1454:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3593,"src":"1454:6:3"},{"id":582,"name":"IERC165","nameLocations":["1462:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"1462:7:3"}],"src":"1445:25:3"},"parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:3","nodeType":"VariableDeclaration","scope":607,"src":"1405:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":578,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:3"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"1480:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:3"},"scope":1432,"src":"1378:305:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1731],"body":{"id":617,"nodeType":"Block","src":"2157:28:3","statements":[{"expression":{"id":615,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"2174:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":614,"id":616,"nodeType":"Return","src":"2167:11:3"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"1689:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":618,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:3","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"2095:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:3"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"2142:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":612,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:3"},"scope":1432,"src":"2082:103:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1493],"body":{"id":634,"nodeType":"Block","src":"2331:46:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":628,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"2348:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":630,"indexExpression":{"id":629,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2358:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":632,"indexExpression":{"id":631,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"2362:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":627,"id":633,"nodeType":"Return","src":"2341:29:3"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"2191:49:3","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":635,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:3","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"account","nameLocation":"2272:7:3","nodeType":"VariableDeclaration","scope":635,"src":"2264:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"id","nameLocation":"2289:2:3","nodeType":"VariableDeclaration","scope":635,"src":"2281:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:3"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"2322:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:3"},"scope":1432,"src":"2245:132:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1506],"body":{"id":704,"nodeType":"Block","src":"2676:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":648,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2690:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:3","memberName":"length","nodeType":"MemberAccess","src":"2690:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":650,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2709:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:3","memberName":"length","nodeType":"MemberAccess","src":"2709:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"2686:121:3","trueBody":{"id":660,"nodeType":"Block","src":"2721:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":654,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2768:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:3","memberName":"length","nodeType":"MemberAccess","src":"2768:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":656,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2780:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:3","memberName":"length","nodeType":"MemberAccess","src":"2780:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2742:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":659,"nodeType":"RevertStatement","src":"2735:61:3"}]}},{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:3","nodeType":"VariableDeclaration","scope":704,"src":"2817:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":665,"nodeType":"ArrayTypeName","src":"2817:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":673,"initialValue":{"arguments":[{"expression":{"id":670,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2864:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:3","memberName":"length","nodeType":"MemberAccess","src":"2864:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":668,"nodeType":"ArrayTypeName","src":"2854:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:3"},{"body":{"id":700,"nodeType":"Block","src":"2937:112:3","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":685,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"2951:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":687,"indexExpression":{"id":686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2965:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3008:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":689,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2980:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2704,"src":"2980:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3035:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":693,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3012:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"3012:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"2970:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":699,"nodeType":"ExpressionStatement","src":"2951:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2911:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":679,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2915:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:3","memberName":"length","nodeType":"MemberAccess","src":"2915:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":701,"initializationExpression":{"assignments":[675],"declarations":[{"constant":false,"id":675,"mutability":"mutable","name":"i","nameLocation":"2904:1:3","nodeType":"VariableDeclaration","scope":701,"src":"2896:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":677,"initialValue":{"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:3","subExpression":{"id":682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ExpressionStatement","src":"2932:3:3"},"nodeType":"ForStatement","src":"2891:158:3"},{"expression":{"id":702,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3066:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":647,"id":703,"nodeType":"Return","src":"3059:20:3"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"2383:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:3","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:3","nodeType":"VariableDeclaration","scope":705,"src":"2567:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":638,"nodeType":"ArrayTypeName","src":"2567:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"ids","nameLocation":"2619:3:3","nodeType":"VariableDeclaration","scope":705,"src":"2602:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":641,"nodeType":"ArrayTypeName","src":"2602:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"2658:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ArrayTypeName","src":"2658:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:3"},"scope":1432,"src":"2534:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1514],"body":{"id":720,"nodeType":"Block","src":"3229:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":714,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3258:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3272:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"3282:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":713,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3239:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"3239:52:3"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"3092:57:3","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":721,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:3","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"operator","nameLocation":"3189:8:3","nodeType":"VariableDeclaration","scope":721,"src":"3181:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"approved","nameLocation":"3204:8:3","nodeType":"VariableDeclaration","scope":721,"src":"3199:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:3"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"3229:0:3"},"scope":1432,"src":"3154:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1524],"body":{"id":737,"nodeType":"Block","src":"3461:61:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":731,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3478:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":733,"indexExpression":{"id":732,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3497:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":735,"indexExpression":{"id":734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3506:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":730,"id":736,"nodeType":"Return","src":"3471:44:3"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"3304:56:3","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":738,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"3399:7:3","nodeType":"VariableDeclaration","scope":738,"src":"3391:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"operator","nameLocation":"3416:8:3","nodeType":"VariableDeclaration","scope":738,"src":"3408:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"3455:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":728,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:3"},"scope":1432,"src":"3365:157:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1538],"body":{"id":781,"nodeType":"Block","src":"3702:238:3","statements":[{"assignments":[753],"declarations":[{"constant":false,"id":753,"mutability":"mutable","name":"sender","nameLocation":"3720:6:3","nodeType":"VariableDeclaration","scope":781,"src":"3712:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":756,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":754,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3729:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":757,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":758,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3763:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:3","subExpression":{"arguments":[{"id":761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3791:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3797:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3774:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":772,"nodeType":"IfStatement","src":"3751:129:3","trueBody":{"id":771,"nodeType":"Block","src":"3806:74:3","statements":[{"errorCall":{"arguments":[{"id":767,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3856:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3864:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":766,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3827:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":770,"nodeType":"RevertStatement","src":"3820:49:3"}]}},{"expression":{"arguments":[{"id":774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"3907:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3913:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3917:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"3921:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3928:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":773,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3889:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"3889:44:3"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3528:56:3","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"from","nameLocation":"3623:4:3","nodeType":"VariableDeclaration","scope":782,"src":"3615:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"to","nameLocation":"3637:2:3","nodeType":"VariableDeclaration","scope":782,"src":"3629:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"id","nameLocation":"3649:2:3","nodeType":"VariableDeclaration","scope":782,"src":"3641:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"value","nameLocation":"3661:5:3","nodeType":"VariableDeclaration","scope":782,"src":"3653:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"data","nameLocation":"3681:4:3","nodeType":"VariableDeclaration","scope":782,"src":"3668:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:3"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"3702:0:3"},"scope":1432,"src":"3589:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1554],"body":{"id":827,"nodeType":"Block","src":"4196:245:3","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"sender","nameLocation":"4214:6:3","nodeType":"VariableDeclaration","scope":827,"src":"4206:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":802,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":800,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"4223:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":803,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4249:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":804,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4257:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:3","subExpression":{"arguments":[{"id":807,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4285:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4291:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":806,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4268:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"4245:129:3","trueBody":{"id":817,"nodeType":"Block","src":"4300:74:3","statements":[{"errorCall":{"arguments":[{"id":813,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4350:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4358:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":812,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"4321:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":816,"nodeType":"RevertStatement","src":"4314:49:3"}]}},{"expression":{"arguments":[{"id":820,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4406:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"4412:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4416:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":823,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4421:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4429:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":819,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4383:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"ExpressionStatement","src":"4383:51:3"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"3946:61:3","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:3","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"from","nameLocation":"4060:4:3","nodeType":"VariableDeclaration","scope":828,"src":"4052:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"4082:2:3","nodeType":"VariableDeclaration","scope":828,"src":"4074:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"ids","nameLocation":"4111:3:3","nodeType":"VariableDeclaration","scope":828,"src":"4094:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ArrayTypeName","src":"4094:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"values","nameLocation":"4141:6:3","nodeType":"VariableDeclaration","scope":828,"src":"4124:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":792,"nodeType":"ArrayTypeName","src":"4124:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"data","nameLocation":"4170:4:3","nodeType":"VariableDeclaration","scope":828,"src":"4157:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:3"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"4196:0:3"},"scope":1432,"src":"4012:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":980,"nodeType":"Block","src":"5249:1174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":842,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5263:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:3","memberName":"length","nodeType":"MemberAccess","src":"5263:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":844,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5277:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:3","memberName":"length","nodeType":"MemberAccess","src":"5277:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":855,"nodeType":"IfStatement","src":"5259:117:3","trueBody":{"id":854,"nodeType":"Block","src":"5292:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":848,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5339:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:3","memberName":"length","nodeType":"MemberAccess","src":"5339:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":850,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5351:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:3","memberName":"length","nodeType":"MemberAccess","src":"5351:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5313:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":853,"nodeType":"RevertStatement","src":"5306:59:3"}]}},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"operator","nameLocation":"5394:8:3","nodeType":"VariableDeclaration","scope":980,"src":"5386:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":860,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":858,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"5405:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:3"},{"body":{"id":941,"nodeType":"Block","src":"5469:650:3","statements":[{"assignments":[873],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"id","nameLocation":"5491:2:3","nodeType":"VariableDeclaration","scope":941,"src":"5483:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":878,"initialValue":{"arguments":[{"id":876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5519:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5496:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"5496:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:3"},{"assignments":[880],"declarations":[{"constant":false,"id":880,"mutability":"mutable","name":"value","nameLocation":"5543:5:3","nodeType":"VariableDeclaration","scope":941,"src":"5535:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":885,"initialValue":{"arguments":[{"id":883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5577:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":881,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5551:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"5551:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5598:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:3","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":924,"nodeType":"IfStatement","src":"5594:420:3","trueBody":{"id":923,"nodeType":"Block","src":"5618:396:3","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:3","nodeType":"VariableDeclaration","scope":923,"src":"5636:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":899,"initialValue":{"baseExpression":{"baseExpression":{"id":894,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"5658:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":896,"indexExpression":{"id":895,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5668:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":898,"indexExpression":{"id":897,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5672:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":900,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5699:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5713:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"5695:129:3","trueBody":{"id":910,"nodeType":"Block","src":"5720:104:3","statements":[{"errorCall":{"arguments":[{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5776:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5782:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5795:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":907,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5802:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5749:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":909,"nodeType":"RevertStatement","src":"5742:63:3"}]}},{"id":922,"nodeType":"UncheckedBlock","src":"5841:159:3","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":912,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"5940:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":915,"indexExpression":{"id":913,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5950:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":916,"indexExpression":{"id":914,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5954:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5962:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"5976:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"5940:41:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6032:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:3","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"6028:81:3","trueBody":{"id":939,"nodeType":"Block","src":"6050:59:3","statements":[{"expression":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":931,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6068:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":934,"indexExpression":{"id":932,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6078:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":935,"indexExpression":{"id":933,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6082:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":938,"nodeType":"ExpressionStatement","src":"6068:26:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5448:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5452:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:3","memberName":"length","nodeType":"MemberAccess","src":"5452:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":942,"initializationExpression":{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"i","nameLocation":"5441:1:3","nodeType":"VariableDeclaration","scope":942,"src":"5433:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":864,"initialValue":{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:3","subExpression":{"id":869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5466:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":871,"nodeType":"ExpressionStatement","src":"5464:3:3"},"nodeType":"ForStatement","src":"5428:691:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":943,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6133:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:3","memberName":"length","nodeType":"MemberAccess","src":"6133:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":978,"nodeType":"Block","src":"6341:76:3","statements":[{"eventCall":{"arguments":[{"id":971,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6374:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6390:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6394:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":975,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6399:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":970,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"6360:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"EmitStatement","src":"6355:51:3"}]},"id":979,"nodeType":"IfStatement","src":"6129:288:3","trueBody":{"id":969,"nodeType":"Block","src":"6150:185:3","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"id","nameLocation":"6172:2:3","nodeType":"VariableDeclaration","scope":969,"src":"6164:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":953,"initialValue":{"arguments":[{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":949,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6177:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"6177:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:3"},{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"value","nameLocation":"6224:5:3","nodeType":"VariableDeclaration","scope":969,"src":"6216:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"initialValue":{"arguments":[{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":956,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6232:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"6232:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:3"},{"eventCall":{"arguments":[{"id":962,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6294:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6304:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"6310:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6314:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6318:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6279:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"EmitStatement","src":"6274:50:3"}]}}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"4447:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"from","nameLocation":"5167:4:3","nodeType":"VariableDeclaration","scope":981,"src":"5159:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"to","nameLocation":"5181:2:3","nodeType":"VariableDeclaration","scope":981,"src":"5173:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"ids","nameLocation":"5202:3:3","nodeType":"VariableDeclaration","scope":981,"src":"5185:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ArrayTypeName","src":"5185:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"values","nameLocation":"5224:6:3","nodeType":"VariableDeclaration","scope":981,"src":"5207:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ArrayTypeName","src":"5207:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:3"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"5249:0:3"},"scope":1432,"src":"5142:1281:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"7193:509:3","statements":[{"expression":{"arguments":[{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7211:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7217:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7221:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1001,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7226:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":997,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"7203:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"7203:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7247:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:3","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"7243:453:3","trueBody":{"id":1058,"nodeType":"Block","src":"7265:431:3","statements":[{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"operator","nameLocation":"7287:8:3","nodeType":"VariableDeclaration","scope":1058,"src":"7279:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1014,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1012,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7298:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1015,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7328:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:3","memberName":"length","nodeType":"MemberAccess","src":"7328:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1056,"nodeType":"Block","src":"7574:112:3","statements":[{"expression":{"arguments":[{"id":1048,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7633:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7643:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7649:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7653:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1052,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7658:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1053,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7666:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1045,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"7592:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1886_$","typeString":"type(library ERC1155Utils)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1885,"src":"7592:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"7592:79:3"}]},"id":1057,"nodeType":"IfStatement","src":"7324:362:3","trueBody":{"id":1044,"nodeType":"Block","src":"7345:223:3","statements":[{"assignments":[1020],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"id","nameLocation":"7371:2:3","nodeType":"VariableDeclaration","scope":1044,"src":"7363:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1025,"initialValue":{"arguments":[{"hexValue":"30","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1021,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7376:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"7376:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:3"},{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"value","nameLocation":"7427:5:3","nodeType":"VariableDeclaration","scope":1044,"src":"7419:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1032,"initialValue":{"arguments":[{"hexValue":"30","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1028,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7435:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"7435:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:3"},{"expression":{"arguments":[{"id":1036,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7517:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1037,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7527:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7533:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7537:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"7541:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1041,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7548:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1033,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"7481:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1886_$","typeString":"type(library ERC1155Utils)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1811,"src":"7481:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"7481:72:3"}]}}]}}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"6429:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:3","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"from","nameLocation":"7055:4:3","nodeType":"VariableDeclaration","scope":1061,"src":"7047:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"to","nameLocation":"7077:2:3","nodeType":"VariableDeclaration","scope":1061,"src":"7069:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"ids","nameLocation":"7106:3:3","nodeType":"VariableDeclaration","scope":1061,"src":"7089:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ArrayTypeName","src":"7089:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"values","nameLocation":"7136:6:3","nodeType":"VariableDeclaration","scope":1061,"src":"7119:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ArrayTypeName","src":"7119:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"data","nameLocation":"7165:4:3","nodeType":"VariableDeclaration","scope":1061,"src":"7152:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":993,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:3"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"7193:0:3"},"scope":1432,"src":"7002:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1126,"nodeType":"Block","src":"8267:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"8281:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:3","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1089,"nodeType":"IfStatement","src":"8277:88:3","trueBody":{"id":1088,"nodeType":"Block","src":"8299:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:3","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"8320:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1087,"nodeType":"RevertStatement","src":"8313:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"8378:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:3","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"8374:88:3","trueBody":{"id":1103,"nodeType":"Block","src":"8398:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:3","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"8419:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1102,"nodeType":"RevertStatement","src":"8412:39:3"}]}},{"assignments":[1109,1112],"declarations":[{"constant":false,"id":1109,"mutability":"mutable","name":"ids","nameLocation":"8489:3:3","nodeType":"VariableDeclaration","scope":1126,"src":"8472:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ArrayTypeName","src":"8472:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"values","nameLocation":"8511:6:3","nodeType":"VariableDeclaration","scope":1126,"src":"8494:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ArrayTypeName","src":"8494:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1114,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8540:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8544:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"8521:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:3"},{"expression":{"arguments":[{"id":1119,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"8587:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"8593:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"8597:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1122,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8602:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1123,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"8610:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1118,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"8560:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"8560:55:3"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"7708:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:3","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"from","nameLocation":"8194:4:3","nodeType":"VariableDeclaration","scope":1127,"src":"8186:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"to","nameLocation":"8208:2:3","nodeType":"VariableDeclaration","scope":1127,"src":"8200:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"id","nameLocation":"8220:2:3","nodeType":"VariableDeclaration","scope":1127,"src":"8212:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"value","nameLocation":"8232:5:3","nodeType":"VariableDeclaration","scope":1127,"src":"8224:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"data","nameLocation":"8252:4:3","nodeType":"VariableDeclaration","scope":1127,"src":"8239:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:3"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"8267:0:3"},"scope":1432,"src":"8159:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"9202:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9216:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:3","typeDescriptions":{}}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1157,"nodeType":"IfStatement","src":"9212:88:3","trueBody":{"id":1156,"nodeType":"Block","src":"9234:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:3","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1149,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"9255:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1155,"nodeType":"RevertStatement","src":"9248:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9313:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:3","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1172,"nodeType":"IfStatement","src":"9309:88:3","trueBody":{"id":1171,"nodeType":"Block","src":"9333:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:3","typeDescriptions":{}}},"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"9354:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1170,"nodeType":"RevertStatement","src":"9347:39:3"}]}},{"expression":{"arguments":[{"id":1174,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"9433:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9439:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9443:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1177,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"9448:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1178,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"9456:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1173,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9406:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"9406:55:3"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"8628:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1182,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:3","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"from","nameLocation":"9072:4:3","nodeType":"VariableDeclaration","scope":1182,"src":"9064:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"to","nameLocation":"9094:2:3","nodeType":"VariableDeclaration","scope":1182,"src":"9086:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"ids","nameLocation":"9123:3:3","nodeType":"VariableDeclaration","scope":1182,"src":"9106:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ArrayTypeName","src":"9106:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"values","nameLocation":"9153:6:3","nodeType":"VariableDeclaration","scope":1182,"src":"9136:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ArrayTypeName","src":"9136:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"data","nameLocation":"9182:4:3","nodeType":"VariableDeclaration","scope":1182,"src":"9169:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:3"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"9202:0:3"},"scope":1432,"src":"9023:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"10346:30:3","statements":[{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1188,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"10356:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1189,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"10363:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1191,"nodeType":"ExpressionStatement","src":"10356:13:3"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"9474:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:3","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:3","nodeType":"VariableDeclaration","scope":1193,"src":"10307:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1184,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:3"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[],"src":"10346:0:3"},"scope":1432,"src":"10290:86:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"10836:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"10850:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:3","typeDescriptions":{}}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"10846:88:3","trueBody":{"id":1218,"nodeType":"Block","src":"10868:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:3","typeDescriptions":{}}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1211,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"10889:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1217,"nodeType":"RevertStatement","src":"10882:41:3"}]}},{"assignments":[1224,1227],"declarations":[{"constant":false,"id":1224,"mutability":"mutable","name":"ids","nameLocation":"10961:3:3","nodeType":"VariableDeclaration","scope":1244,"src":"10944:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ArrayTypeName","src":"10944:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"values","nameLocation":"10983:6:3","nodeType":"VariableDeclaration","scope":1244,"src":"10966:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1226,"nodeType":"ArrayTypeName","src":"10966:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[{"id":1229,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"11012:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"11016:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1228,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10993:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:3","typeDescriptions":{}}},"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"11071:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"11075:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1240,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"11080:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"11088:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"11032:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"11032:61:3"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"10382:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:3","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"to","nameLocation":"10777:2:3","nodeType":"VariableDeclaration","scope":1245,"src":"10769:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"id","nameLocation":"10789:2:3","nodeType":"VariableDeclaration","scope":1245,"src":"10781:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"value","nameLocation":"10801:5:3","nodeType":"VariableDeclaration","scope":1245,"src":"10793:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"data","nameLocation":"10821:4:3","nodeType":"VariableDeclaration","scope":1245,"src":"10808:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1201,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:3"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"10836:0:3"},"scope":1432,"src":"10754:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"11638:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"11652:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:3","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"11648:88:3","trueBody":{"id":1272,"nodeType":"Block","src":"11670:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:3","typeDescriptions":{}}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1265,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"11691:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1271,"nodeType":"RevertStatement","src":"11684:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:3","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"11784:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11788:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1281,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"11793:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1282,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"11801:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1274,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"11745:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"11745:61:3"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"11106:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:3","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"to","nameLocation":"11559:2:3","nodeType":"VariableDeclaration","scope":1286,"src":"11551:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"ids","nameLocation":"11580:3:3","nodeType":"VariableDeclaration","scope":1286,"src":"11563:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"11563:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"values","nameLocation":"11602:6:3","nodeType":"VariableDeclaration","scope":1286,"src":"11585:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ArrayTypeName","src":"11585:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"data","nameLocation":"11623:4:3","nodeType":"VariableDeclaration","scope":1286,"src":"11610:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:3"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"11638:0:3"},"scope":1432,"src":"11531:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"12172:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"12186:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:3","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1310,"nodeType":"IfStatement","src":"12182:88:3","trueBody":{"id":1309,"nodeType":"Block","src":"12206:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:3","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1302,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12227:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1308,"nodeType":"RevertStatement","src":"12220:39:3"}]}},{"assignments":[1315,1318],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"12297:3:3","nodeType":"VariableDeclaration","scope":1335,"src":"12280:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"12280:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"12319:6:3","nodeType":"VariableDeclaration","scope":1335,"src":"12302:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"12302:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1323,"initialValue":{"arguments":[{"id":1320,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"12348:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"12352:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"12329:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:3"},{"expression":{"arguments":[{"id":1325,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"12395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:3","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"12413:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1331,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12418:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1324,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12368:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"12368:61:3"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"11819:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:3","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"from","nameLocation":"12130:4:3","nodeType":"VariableDeclaration","scope":1336,"src":"12122:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"id","nameLocation":"12144:2:3","nodeType":"VariableDeclaration","scope":1336,"src":"12136:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"value","nameLocation":"12156:5:3","nodeType":"VariableDeclaration","scope":1336,"src":"12148:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:3"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"12172:0:3"},"scope":1432,"src":"12107:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"12882:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"12896:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:3","typeDescriptions":{}}},"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1362,"nodeType":"IfStatement","src":"12892:88:3","trueBody":{"id":1361,"nodeType":"Block","src":"12916:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:3","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1354,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12937:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1360,"nodeType":"RevertStatement","src":"12930:39:3"}]}},{"expression":{"arguments":[{"id":1364,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"13016:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:3","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"13034:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1370,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"13039:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1363,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12989:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"12989:61:3"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"12442:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:3","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"from","nameLocation":"12820:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"12812:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"ids","nameLocation":"12843:3:3","nodeType":"VariableDeclaration","scope":1375,"src":"12826:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1341,"nodeType":"ArrayTypeName","src":"12826:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"values","nameLocation":"12865:6:3","nodeType":"VariableDeclaration","scope":1375,"src":"12848:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ArrayTypeName","src":"12848:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:3"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"12882:0:3"},"scope":1432,"src":"12792:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"13369:222:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13383:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:3","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"IfStatement","src":"13379:94:3","trueBody":{"id":1398,"nodeType":"Block","src":"13407:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:3","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1391,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"13428:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1397,"nodeType":"RevertStatement","src":"13421:41:3"}]}},{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1400,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"13482:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1403,"indexExpression":{"id":1401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13501:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1404,"indexExpression":{"id":1402,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13508:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1405,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"13520:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"ExpressionStatement","src":"13482:46:3"},{"eventCall":{"arguments":[{"id":1409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13565:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"13575:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1408,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"13543:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"EmitStatement","src":"13538:46:3"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"13063:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:3","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"owner","nameLocation":"13312:5:3","nodeType":"VariableDeclaration","scope":1415,"src":"13304:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"operator","nameLocation":"13327:8:3","nodeType":"VariableDeclaration","scope":1415,"src":"13319:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"approved","nameLocation":"13342:8:3","nodeType":"VariableDeclaration","scope":1415,"src":"13337:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1381,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:3"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"13369:0:3"},"scope":1432,"src":"13276:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"13865:664:3","statements":[{"AST":{"nativeSrc":"13900:623:3","nodeType":"YulBlock","src":"13900:623:3","statements":[{"nativeSrc":"13958:21:3","nodeType":"YulAssignment","src":"13958:21:3","value":{"arguments":[{"kind":"number","nativeSrc":"13974:4:3","nodeType":"YulLiteral","src":"13974:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13968:5:3","nodeType":"YulIdentifier","src":"13968:5:3"},"nativeSrc":"13968:11:3","nodeType":"YulFunctionCall","src":"13968:11:3"},"variableNames":[{"name":"array1","nativeSrc":"13958:6:3","nodeType":"YulIdentifier","src":"13958:6:3"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"14036:6:3","nodeType":"YulIdentifier","src":"14036:6:3"},{"kind":"number","nativeSrc":"14044:1:3","nodeType":"YulLiteral","src":"14044:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14029:6:3","nodeType":"YulIdentifier","src":"14029:6:3"},"nativeSrc":"14029:17:3","nodeType":"YulFunctionCall","src":"14029:17:3"},"nativeSrc":"14029:17:3","nodeType":"YulExpressionStatement","src":"14029:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"14167:6:3","nodeType":"YulIdentifier","src":"14167:6:3"},{"kind":"number","nativeSrc":"14175:4:3","nodeType":"YulLiteral","src":"14175:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14163:3:3","nodeType":"YulIdentifier","src":"14163:3:3"},"nativeSrc":"14163:17:3","nodeType":"YulFunctionCall","src":"14163:17:3"},{"name":"element1","nativeSrc":"14182:8:3","nodeType":"YulIdentifier","src":"14182:8:3"}],"functionName":{"name":"mstore","nativeSrc":"14156:6:3","nodeType":"YulIdentifier","src":"14156:6:3"},"nativeSrc":"14156:35:3","nodeType":"YulFunctionCall","src":"14156:35:3"},"nativeSrc":"14156:35:3","nodeType":"YulExpressionStatement","src":"14156:35:3"},{"nativeSrc":"14282:27:3","nodeType":"YulAssignment","src":"14282:27:3","value":{"arguments":[{"name":"array1","nativeSrc":"14296:6:3","nodeType":"YulIdentifier","src":"14296:6:3"},{"kind":"number","nativeSrc":"14304:4:3","nodeType":"YulLiteral","src":"14304:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14292:3:3","nodeType":"YulIdentifier","src":"14292:3:3"},"nativeSrc":"14292:17:3","nodeType":"YulFunctionCall","src":"14292:17:3"},"variableNames":[{"name":"array2","nativeSrc":"14282:6:3","nodeType":"YulIdentifier","src":"14282:6:3"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"14329:6:3","nodeType":"YulIdentifier","src":"14329:6:3"},{"kind":"number","nativeSrc":"14337:1:3","nodeType":"YulLiteral","src":"14337:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14322:6:3","nodeType":"YulIdentifier","src":"14322:6:3"},"nativeSrc":"14322:17:3","nodeType":"YulFunctionCall","src":"14322:17:3"},"nativeSrc":"14322:17:3","nodeType":"YulExpressionStatement","src":"14322:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"14363:6:3","nodeType":"YulIdentifier","src":"14363:6:3"},{"kind":"number","nativeSrc":"14371:4:3","nodeType":"YulLiteral","src":"14371:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14359:3:3","nodeType":"YulIdentifier","src":"14359:3:3"},"nativeSrc":"14359:17:3","nodeType":"YulFunctionCall","src":"14359:17:3"},{"name":"element2","nativeSrc":"14378:8:3","nodeType":"YulIdentifier","src":"14378:8:3"}],"functionName":{"name":"mstore","nativeSrc":"14352:6:3","nodeType":"YulIdentifier","src":"14352:6:3"},"nativeSrc":"14352:35:3","nodeType":"YulFunctionCall","src":"14352:35:3"},"nativeSrc":"14352:35:3","nodeType":"YulExpressionStatement","src":"14352:35:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14489:4:3","nodeType":"YulLiteral","src":"14489:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"14499:6:3","nodeType":"YulIdentifier","src":"14499:6:3"},{"kind":"number","nativeSrc":"14507:4:3","nodeType":"YulLiteral","src":"14507:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14495:3:3","nodeType":"YulIdentifier","src":"14495:3:3"},"nativeSrc":"14495:17:3","nodeType":"YulFunctionCall","src":"14495:17:3"}],"functionName":{"name":"mstore","nativeSrc":"14482:6:3","nodeType":"YulIdentifier","src":"14482:6:3"},"nativeSrc":"14482:31:3","nodeType":"YulFunctionCall","src":"14482:31:3"},"nativeSrc":"14482:31:3","nodeType":"YulExpressionStatement","src":"14482:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1424,"isOffset":false,"isSlot":false,"src":"13958:6:3","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"14036:6:3","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"14167:6:3","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"14296:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14282:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14329:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14363:6:3","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"14499:6:3","valueSize":1},{"declaration":1418,"isOffset":false,"isSlot":false,"src":"14182:8:3","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":false,"src":"14378:8:3","valueSize":1}],"flags":["memory-safe"],"id":1429,"nodeType":"InlineAssembly","src":"13875:648:3"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"13597:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:3","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"element1","nameLocation":"13752:8:3","nodeType":"VariableDeclaration","scope":1431,"src":"13744:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"element2","nameLocation":"13778:8:3","nodeType":"VariableDeclaration","scope":1431,"src":"13770:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:3"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"array1","nameLocation":"13832:6:3","nodeType":"VariableDeclaration","scope":1431,"src":"13815:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ArrayTypeName","src":"13815:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"array2","nameLocation":"13857:6:3","nodeType":"VariableDeclaration","scope":1431,"src":"13840:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ArrayTypeName","src":"13840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:3"},"scope":1432,"src":"13707:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1433,"src":"725:13806:3","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[1452,1467,1476,1483]}],"src":"109:14423:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1555],"IERC165":[3605]},"id":1556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1434,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1556,"sourceUnit":3606,"src":"136:62:4","symbolAliases":[{"foreign":{"id":1435,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"144:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1438,"name":"IERC165","nameLocations":["359:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"359:7:4"},"id":1439,"nodeType":"InheritanceSpecifier","src":"359:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"200:136:4","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1555,"linearizedBaseContracts":[1555,3605],"name":"IERC1155","nameLocation":"347:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"373:125:4","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1452,"name":"TransferSingle","nameLocation":"509:14:4","nodeType":"EventDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:4","nodeType":"VariableDeclaration","scope":1452,"src":"524:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:4","nodeType":"VariableDeclaration","scope":1452,"src":"550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:4","nodeType":"VariableDeclaration","scope":1452,"src":"572:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:4","nodeType":"VariableDeclaration","scope":1452,"src":"592:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:4","nodeType":"VariableDeclaration","scope":1452,"src":"604:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:4"},"src":"503:116:4"},{"anonymous":false,"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"625:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1467,"name":"TransferBatch","nameLocation":"780:13:4","nodeType":"EventDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:4","nodeType":"VariableDeclaration","scope":1467,"src":"803:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1457,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":1467,"src":"837:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:4","nodeType":"VariableDeclaration","scope":1467,"src":"867:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:4","nodeType":"VariableDeclaration","scope":1467,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ArrayTypeName","src":"895:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1465,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:4","nodeType":"VariableDeclaration","scope":1467,"src":"918:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ArrayTypeName","src":"918:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:4"},"src":"774:167:4"},{"anonymous":false,"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"947:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1476,"name":"ApprovalForAll","nameLocation":"1105:14:4","nodeType":"EventDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:4","nodeType":"VariableDeclaration","scope":1476,"src":"1120:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":1476,"src":"1145:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:4","nodeType":"VariableDeclaration","scope":1476,"src":"1171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1473,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:4"},"src":"1099:87:4"},{"anonymous":false,"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"1192:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1483,"name":"URI","nameLocation":"1546:3:4","nodeType":"EventDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:4","nodeType":"VariableDeclaration","scope":1483,"src":"1550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1481,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:4","nodeType":"VariableDeclaration","scope":1483,"src":"1564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:4"},"src":"1540:44:4"},{"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"1590:90:4","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1493,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:4","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"account","nameLocation":"1712:7:4","nodeType":"VariableDeclaration","scope":1493,"src":"1704:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"id","nameLocation":"1729:2:4","nodeType":"VariableDeclaration","scope":1493,"src":"1721:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:4"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"1756:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:4"},"scope":1555,"src":"1685:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"1771:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1506,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:4","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:4","nodeType":"VariableDeclaration","scope":1506,"src":"1997:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1496,"nodeType":"ArrayTypeName","src":"1997:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"ids","nameLocation":"2053:3:4","nodeType":"VariableDeclaration","scope":1506,"src":"2034:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ArrayTypeName","src":"2034:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:4"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"2086:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ArrayTypeName","src":"2086:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:4"},"scope":1555,"src":"1964:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"2110:254:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:4","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"operator","nameLocation":"2404:8:4","nodeType":"VariableDeclaration","scope":1514,"src":"2396:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"approved","nameLocation":"2419:8:4","nodeType":"VariableDeclaration","scope":1514,"src":"2414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:4"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"2437:0:4"},"scope":1555,"src":"2369:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"2444:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:4","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"account","nameLocation":"2618:7:4","nodeType":"VariableDeclaration","scope":1524,"src":"2610:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"operator","nameLocation":"2635:8:4","nodeType":"VariableDeclaration","scope":1524,"src":"2627:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:4"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"2668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:4"},"scope":1555,"src":"2584:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"2680:910:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1538,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:4","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"from","nameLocation":"3629:4:4","nodeType":"VariableDeclaration","scope":1538,"src":"3621:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"to","nameLocation":"3643:2:4","nodeType":"VariableDeclaration","scope":1538,"src":"3635:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"id","nameLocation":"3655:2:4","nodeType":"VariableDeclaration","scope":1538,"src":"3647:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"value","nameLocation":"3667:5:4","nodeType":"VariableDeclaration","scope":1538,"src":"3659:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"data","nameLocation":"3689:4:4","nodeType":"VariableDeclaration","scope":1538,"src":"3674:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1534,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:4"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[],"src":"3703:0:4"},"scope":1555,"src":"3595:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"3710:814:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1554,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:4","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"from","nameLocation":"4577:4:4","nodeType":"VariableDeclaration","scope":1554,"src":"4569:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"to","nameLocation":"4599:2:4","nodeType":"VariableDeclaration","scope":1554,"src":"4591:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"ids","nameLocation":"4630:3:4","nodeType":"VariableDeclaration","scope":1554,"src":"4611:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ArrayTypeName","src":"4611:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"values","nameLocation":"4662:6:4","nodeType":"VariableDeclaration","scope":1554,"src":"4643:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ArrayTypeName","src":"4643:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"data","nameLocation":"4693:4:4","nodeType":"VariableDeclaration","scope":1554,"src":"4678:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1550,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:4"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"4712:0:4"},"scope":1555,"src":"4529:184:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1556,"src":"337:4378:4","usedErrors":[],"usedEvents":[1452,1467,1476,1483]}],"src":"110:4606:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1597],"IERC165":[3605]},"id":1598,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1557,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1598,"sourceUnit":3606,"src":"144:62:5","symbolAliases":[{"foreign":{"id":1558,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"152:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1561,"name":"IERC165","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"357:7:5"},"id":1562,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"208:118:5","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1597,"linearizedBaseContracts":[1597,3605],"name":"IERC1155Receiver","nameLocation":"337:16:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"371:827:5","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1578,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:5","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"operator","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":1578,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"from","nameLocation":"1273:4:5","nodeType":"VariableDeclaration","scope":1578,"src":"1265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"id","nameLocation":"1295:2:5","nodeType":"VariableDeclaration","scope":1578,"src":"1287:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"value","nameLocation":"1315:5:5","nodeType":"VariableDeclaration","scope":1578,"src":"1307:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"data","nameLocation":"1345:4:5","nodeType":"VariableDeclaration","scope":1578,"src":"1330:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:5"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"1374:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1575,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:5"},"scope":1597,"src":"1203:179:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"1388:995:5","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1596,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:5","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"operator","nameLocation":"2437:8:5","nodeType":"VariableDeclaration","scope":1596,"src":"2429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"from","nameLocation":"2463:4:5","nodeType":"VariableDeclaration","scope":1596,"src":"2455:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"ids","nameLocation":"2496:3:5","nodeType":"VariableDeclaration","scope":1596,"src":"2477:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"nodeType":"ArrayTypeName","src":"2477:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"values","nameLocation":"2528:6:5","nodeType":"VariableDeclaration","scope":1596,"src":"2509:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1588,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"data","nameLocation":"2559:4:5","nodeType":"VariableDeclaration","scope":1596,"src":"2544:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1590,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:5"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1596,"src":"2588:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1593,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:5"},"scope":1597,"src":"2388:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1598,"src":"327:2271:5","usedErrors":[],"usedEvents":[]}],"src":"118:2481:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"ERC1155":[1432],"ERC1155Burnable":[1677]},"id":1678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1599,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1678,"sourceUnit":1433,"src":"154:39:6","symbolAliases":[{"foreign":{"id":1600,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"162:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1603,"name":"ERC1155","nameLocations":["380:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"380:7:6"},"id":1604,"nodeType":"InheritanceSpecifier","src":"380:7:6"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"195:147:6","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."},"fullyImplemented":true,"id":1677,"linearizedBaseContracts":[1677,1432,515,1732,1555,3593,3605,2826],"name":"ERC1155Burnable","nameLocation":"361:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1638,"nodeType":"Block","src":"467:208:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"481:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1614,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"492:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"481:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"508:40:6","subExpression":{"arguments":[{"id":1618,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"526:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1619,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"535:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"535:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1617,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"509:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"509:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"481:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"477:156:6","trueBody":{"id":1630,"nodeType":"Block","src":"550:83:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1625,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"600:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"614:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1624,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"571:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1629,"nodeType":"RevertStatement","src":"564:58:6"}]}},{"expression":{"arguments":[{"id":1633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"649:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1634,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"658:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"662:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1632,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"643:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"643:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"643:25:6"}]},"functionSelector":"f5298aca","id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"403:4:6","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"account","nameLocation":"416:7:6","nodeType":"VariableDeclaration","scope":1639,"src":"408:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"id","nameLocation":"433:2:6","nodeType":"VariableDeclaration","scope":1639,"src":"425:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"value","nameLocation":"445:5:6","nodeType":"VariableDeclaration","scope":1639,"src":"437:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:44:6"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"467:0:6"},"scope":1677,"src":"394:281:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1675,"nodeType":"Block","src":"779:215:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"793:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1651,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"804:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"804:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"793:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"820:40:6","subExpression":{"arguments":[{"id":1655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"838:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1656,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"847:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1654,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"821:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"793:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"789:156:6","trueBody":{"id":1667,"nodeType":"Block","src":"862:83:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"912:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1664,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1661,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"883:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1666,"nodeType":"RevertStatement","src":"876:58:6"}]}},{"expression":{"arguments":[{"id":1670,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"966:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"975:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1672,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"980:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1669,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"955:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"ExpressionStatement","src":"955:32:6"}]},"functionSelector":"6b20c454","id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"690:9:6","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"account","nameLocation":"708:7:6","nodeType":"VariableDeclaration","scope":1676,"src":"700:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"ids","nameLocation":"734:3:6","nodeType":"VariableDeclaration","scope":1676,"src":"717:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1643,"nodeType":"ArrayTypeName","src":"717:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"values","nameLocation":"756:6:6","nodeType":"VariableDeclaration","scope":1676,"src":"739:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"nodeType":"ArrayTypeName","src":"739:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"699:64:6"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[],"src":"779:0:6"},"scope":1677,"src":"681:313:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1678,"src":"343:653:6","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[1452,1467,1476,1483]}],"src":"128:869:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","exportedSymbols":{"ERC1155":[1432],"ERC1155Pausable":[1716],"Pausable":[2995]},"id":1717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1679,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1717,"sourceUnit":1433,"src":"154:39:7","symbolAliases":[{"foreign":{"id":1680,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"162:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1717,"sourceUnit":2996,"src":"194:53:7","symbolAliases":[{"foreign":{"id":1682,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"202:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1685,"name":"ERC1155","nameLocations":["977:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"977:7:7"},"id":1686,"nodeType":"InheritanceSpecifier","src":"977:7:7"},{"baseName":{"id":1687,"name":"Pausable","nameLocations":["986:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":2995,"src":"986:8:7"},"id":1688,"nodeType":"InheritanceSpecifier","src":"986:8:7"}],"canonicalName":"ERC1155Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"249:690:7","text":" @dev ERC-1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1716,"linearizedBaseContracts":[1716,2995,1432,515,1732,1555,3593,3605,2826],"name":"ERC1155Pausable","nameLocation":"958:15:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[981],"body":{"id":1714,"nodeType":"Block","src":"1297:53:7","statements":[{"expression":{"arguments":[{"id":1708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1321:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1327:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1331:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1711,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1336:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1705,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1307:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Pausable_$1716_$","typeString":"type(contract super ERC1155Pausable)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1313:7:7","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":981,"src":"1307:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1307:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"1307:36:7"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"1001:123:7","text":" @dev See {ERC1155-_update}.\n Requirements:\n - the contract must not be paused."},"id":1715,"implemented":true,"kind":"function","modifiers":[{"id":1703,"kind":"modifierInvocation","modifierName":{"id":1702,"name":"whenNotPaused","nameLocations":["1283:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":2920,"src":"1283:13:7"},"nodeType":"ModifierInvocation","src":"1283:13:7"}],"name":"_update","nameLocation":"1138:7:7","nodeType":"FunctionDefinition","overrides":{"id":1701,"nodeType":"OverrideSpecifier","overrides":[],"src":"1274:8:7"},"parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"from","nameLocation":"1163:4:7","nodeType":"VariableDeclaration","scope":1715,"src":"1155:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"to","nameLocation":"1185:2:7","nodeType":"VariableDeclaration","scope":1715,"src":"1177:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"ids","nameLocation":"1214:3:7","nodeType":"VariableDeclaration","scope":1715,"src":"1197:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ArrayTypeName","src":"1197:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"values","nameLocation":"1244:6:7","nodeType":"VariableDeclaration","scope":1715,"src":"1227:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ArrayTypeName","src":"1227:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1145:111:7"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"1297:0:7"},"scope":1716,"src":"1129:221:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1717,"src":"940:412:7","usedErrors":[480,485,490,497,502,507,514,2900,2903],"usedEvents":[1452,1467,1476,1483,2892,2897]}],"src":"128:1225:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1555],"IERC1155MetadataURI":[1732]},"id":1733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":1556,"src":"158:41:8","symbolAliases":[{"foreign":{"id":1719,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"166:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1722,"name":"IERC1155","nameLocations":["399:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1555,"src":"399:8:8"},"id":1723,"nodeType":"InheritanceSpecifier","src":"399:8:8"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"201:164:8","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1732,"linearizedBaseContracts":[1732,1555,3605],"name":"IERC1155MetadataURI","nameLocation":"376:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"414:192:8","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1731,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:8","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"id","nameLocation":"632:2:8","nodeType":"VariableDeclaration","scope":1731,"src":"624:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:8"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"659:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1728,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:8"},"scope":1732,"src":"611:63:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1733,"src":"366:310:8","usedErrors":[],"usedEvents":[1452,1467,1476,1483]}],"src":"132:545:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1886],"IERC1155Errors":[515],"IERC1155Receiver":[1597]},"id":1887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1734,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1887,"sourceUnit":1598,"src":"146:57:9","symbolAliases":[{"foreign":{"id":1735,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"154:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1887,"sourceUnit":516,"src":"204:70:9","symbolAliases":[{"foreign":{"id":1737,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"212:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"276:162:9","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1886,"linearizedBaseContracts":[1886],"name":"ERC1155Utils","nameLocation":"447:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1810,"nodeType":"Block","src":"1183:774:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1197:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:9","memberName":"code","nodeType":"MemberAccess","src":"1197:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:9","memberName":"length","nodeType":"MemberAccess","src":"1197:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1809,"nodeType":"IfStatement","src":"1193:758:9","trueBody":{"id":1808,"nodeType":"Block","src":"1217:734:9","statements":[{"clauses":[{"block":{"id":1786,"nodeType":"Block","src":"1333:221:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1355:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1774,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1367:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"1367:34:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"IfStatement","src":"1351:189:9","trueBody":{"id":1784,"nodeType":"Block","src":"1412:128:9","statements":[{"errorCall":{"arguments":[{"id":1781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1518:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1778,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"1480:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"1480:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1783,"nodeType":"RevertStatement","src":"1473:48:9"}]}}]},"errorName":"","id":1787,"nodeType":"TryCatchClause","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"response","nameLocation":"1323:8:9","nodeType":"VariableDeclaration","scope":1787,"src":"1316:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1770,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:9"},"src":"1307:247:9"},{"block":{"id":1805,"nodeType":"Block","src":"1583:358:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1791,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1605:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:9","memberName":"length","nodeType":"MemberAccess","src":"1605:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1803,"nodeType":"Block","src":"1776:151:9","statements":[{"AST":{"nativeSrc":"1823:86:9","nodeType":"YulBlock","src":"1823:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1860:2:9","nodeType":"YulLiteral","src":"1860:2:9","type":"","value":"32"},{"name":"reason","nativeSrc":"1864:6:9","nodeType":"YulIdentifier","src":"1864:6:9"}],"functionName":{"name":"add","nativeSrc":"1856:3:9","nodeType":"YulIdentifier","src":"1856:3:9"},"nativeSrc":"1856:15:9","nodeType":"YulFunctionCall","src":"1856:15:9"},{"arguments":[{"name":"reason","nativeSrc":"1879:6:9","nodeType":"YulIdentifier","src":"1879:6:9"}],"functionName":{"name":"mload","nativeSrc":"1873:5:9","nodeType":"YulIdentifier","src":"1873:5:9"},"nativeSrc":"1873:13:9","nodeType":"YulFunctionCall","src":"1873:13:9"}],"functionName":{"name":"revert","nativeSrc":"1849:6:9","nodeType":"YulIdentifier","src":"1849:6:9"},"nativeSrc":"1849:38:9","nodeType":"YulFunctionCall","src":"1849:38:9"},"nativeSrc":"1849:38:9","nodeType":"YulExpressionStatement","src":"1849:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1789,"isOffset":false,"isSlot":false,"src":"1864:6:9","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"1879:6:9","valueSize":1}],"flags":["memory-safe"],"id":1802,"nodeType":"InlineAssembly","src":"1798:111:9"}]},"id":1804,"nodeType":"IfStatement","src":"1601:326:9","trueBody":{"id":1801,"nodeType":"Block","src":"1625:145:9","statements":[{"errorCall":{"arguments":[{"id":1798,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1748:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1795,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"1710:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"1710:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1800,"nodeType":"RevertStatement","src":"1703:48:9"}]}}]},"errorName":"","id":1806,"nodeType":"TryCatchClause","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"reason","nameLocation":"1575:6:9","nodeType":"VariableDeclaration","scope":1806,"src":"1562:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:9"},"src":"1555:386:9"}],"externalCall":{"arguments":[{"id":1764,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"1274:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1284:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1766,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1290:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"1294:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1768,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"1301:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1252:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1760,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1235:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1597","typeString":"contract IERC1155Receiver"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"1235:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1807,"nodeType":"TryStatement","src":"1231:710:9"}]}}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"466:527:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:9","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"operator","nameLocation":"1047:8:9","nodeType":"VariableDeclaration","scope":1811,"src":"1039:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"from","nameLocation":"1073:4:9","nodeType":"VariableDeclaration","scope":1811,"src":"1065:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"to","nameLocation":"1095:2:9","nodeType":"VariableDeclaration","scope":1811,"src":"1087:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"id","nameLocation":"1115:2:9","nodeType":"VariableDeclaration","scope":1811,"src":"1107:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"value","nameLocation":"1135:5:9","nodeType":"VariableDeclaration","scope":1811,"src":"1127:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"data","nameLocation":"1163:4:9","nodeType":"VariableDeclaration","scope":1811,"src":"1150:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1751,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:9"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"1183:0:9"},"scope":1886,"src":"998:959:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"2715:816:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2729:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:9","memberName":"code","nodeType":"MemberAccess","src":"2729:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:9","memberName":"length","nodeType":"MemberAccess","src":"2729:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1883,"nodeType":"IfStatement","src":"2725:800:9","trueBody":{"id":1882,"nodeType":"Block","src":"2749:776:9","statements":[{"clauses":[{"block":{"id":1860,"nodeType":"Block","src":"2902:226:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2924:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1848,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2936:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1596,"src":"2936:39:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1859,"nodeType":"IfStatement","src":"2920:194:9","trueBody":{"id":1858,"nodeType":"Block","src":"2986:128:9","statements":[{"errorCall":{"arguments":[{"id":1855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"3092:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1852,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3054:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"3054:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1857,"nodeType":"RevertStatement","src":"3047:48:9"}]}}]},"errorName":"","id":1861,"nodeType":"TryCatchClause","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"response","nameLocation":"2879:8:9","nodeType":"VariableDeclaration","scope":1861,"src":"2872:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1844,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:9"},"src":"2846:282:9"},{"block":{"id":1879,"nodeType":"Block","src":"3157:358:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1865,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"3179:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:9","memberName":"length","nodeType":"MemberAccess","src":"3179:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1877,"nodeType":"Block","src":"3350:151:9","statements":[{"AST":{"nativeSrc":"3397:86:9","nodeType":"YulBlock","src":"3397:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3434:2:9","nodeType":"YulLiteral","src":"3434:2:9","type":"","value":"32"},{"name":"reason","nativeSrc":"3438:6:9","nodeType":"YulIdentifier","src":"3438:6:9"}],"functionName":{"name":"add","nativeSrc":"3430:3:9","nodeType":"YulIdentifier","src":"3430:3:9"},"nativeSrc":"3430:15:9","nodeType":"YulFunctionCall","src":"3430:15:9"},{"arguments":[{"name":"reason","nativeSrc":"3453:6:9","nodeType":"YulIdentifier","src":"3453:6:9"}],"functionName":{"name":"mload","nativeSrc":"3447:5:9","nodeType":"YulIdentifier","src":"3447:5:9"},"nativeSrc":"3447:13:9","nodeType":"YulFunctionCall","src":"3447:13:9"}],"functionName":{"name":"revert","nativeSrc":"3423:6:9","nodeType":"YulIdentifier","src":"3423:6:9"},"nativeSrc":"3423:38:9","nodeType":"YulFunctionCall","src":"3423:38:9"},"nativeSrc":"3423:38:9","nodeType":"YulExpressionStatement","src":"3423:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1863,"isOffset":false,"isSlot":false,"src":"3438:6:9","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"3453:6:9","valueSize":1}],"flags":["memory-safe"],"id":1876,"nodeType":"InlineAssembly","src":"3372:111:9"}]},"id":1878,"nodeType":"IfStatement","src":"3175:326:9","trueBody":{"id":1875,"nodeType":"Block","src":"3199:145:9","statements":[{"errorCall":{"arguments":[{"id":1872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"3322:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1869,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3284:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$515_$","typeString":"type(contract IERC1155Errors)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":490,"src":"3284:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1874,"nodeType":"RevertStatement","src":"3277:48:9"}]}}]},"errorName":"","id":1880,"nodeType":"TryCatchClause","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"reason","nameLocation":"3149:6:9","nodeType":"VariableDeclaration","scope":1880,"src":"3136:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1862,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:9"},"src":"3129:386:9"}],"externalCall":{"arguments":[{"id":1838,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2811:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1839,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2821:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"2827:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1841,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2832:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1842,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2840:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2784:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1834,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2767:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1597_$","typeString":"type(contract IERC1155Receiver)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1597","typeString":"contract IERC1155Receiver"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1596,"src":"2767:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1881,"nodeType":"TryStatement","src":"2763:752:9"}]}}]},"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"1963:537:9","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:9","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"operator","nameLocation":"2559:8:9","nodeType":"VariableDeclaration","scope":1885,"src":"2551:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"from","nameLocation":"2585:4:9","nodeType":"VariableDeclaration","scope":1885,"src":"2577:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"to","nameLocation":"2607:2:9","nodeType":"VariableDeclaration","scope":1885,"src":"2599:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"ids","nameLocation":"2636:3:9","nodeType":"VariableDeclaration","scope":1885,"src":"2619:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ArrayTypeName","src":"2619:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"values","nameLocation":"2666:6:9","nodeType":"VariableDeclaration","scope":1885,"src":"2649:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1823,"nodeType":"ArrayTypeName","src":"2649:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"data","nameLocation":"2695:4:9","nodeType":"VariableDeclaration","scope":1885,"src":"2682:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1825,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:9"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"2715:0:9"},"scope":1886,"src":"2505:1026:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1887,"src":"439:3094:9","usedErrors":[],"usedEvents":[]}],"src":"120:3414:9"},"id":9},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2764],"Comparators":[2796],"Math":[5211],"SlotDerivation":[3125],"StorageSlot":[3249]},"id":2765,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1888,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":2797,"src":"209:46:10","symbolAliases":[{"foreign":{"id":1889,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"217:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":3126,"src":"256:52:10","symbolAliases":[{"foreign":{"id":1891,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"264:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":3250,"src":"309:46:10","symbolAliases":[{"foreign":{"id":1893,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"317:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":5212,"src":"356:37:10","symbolAliases":[{"foreign":{"id":1895,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"364:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"395:63:10","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2764,"linearizedBaseContracts":[2764],"name":"Arrays","nameLocation":"467:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1900,"libraryName":{"id":1898,"name":"SlotDerivation","nameLocations":["486:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":3125,"src":"486:14:10"},"nodeType":"UsingForDirective","src":"480:33:10","typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1903,"libraryName":{"id":1901,"name":"StorageSlot","nameLocations":["524:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3249,"src":"524:11:10"},"nodeType":"UsingForDirective","src":"518:30:10","typeName":{"id":1902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1935,"nodeType":"Block","src":"1628:83:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1925,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"1656:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1924,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"1649:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1928,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"1669:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1927,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"1664:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1930,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1677:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1923,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1638:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"ExpressionStatement","src":"1638:44:10"},{"expression":{"id":1933,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"1699:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1922,"id":1934,"nodeType":"Return","src":"1692:12:10"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"554:915:10","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:10","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"array","nameLocation":"1514:5:10","nodeType":"VariableDeclaration","scope":1936,"src":"1497:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"nodeType":"ArrayTypeName","src":"1497:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"comp","nameLocation":"1576:4:10","nodeType":"VariableDeclaration","scope":1936,"src":"1529:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1916,"nodeType":"FunctionTypeName","parameterTypes":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"1538:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"1547:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:10"},"returnParameterTypes":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"1570:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1913,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:10"},"src":"1529:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:10"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"1610:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ArrayTypeName","src":"1610:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:10"},"scope":2764,"src":"1474:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1954,"nodeType":"Block","src":"1894:66:10","statements":[{"expression":{"arguments":[{"id":1947,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1909:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1948,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"1916:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2796_$","typeString":"type(library Comparators)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:10","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"1916:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1946,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1936,1955,1987,2008,2040,2061],"referencedDeclaration":1936,"src":"1904:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1951,"nodeType":"ExpressionStatement","src":"1904:27:10"},{"expression":{"id":1952,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1948:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1945,"id":1953,"nodeType":"Return","src":"1941:12:10"}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"1717:93:10","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1955,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:10","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"array","nameLocation":"1846:5:10","nodeType":"VariableDeclaration","scope":1955,"src":"1829:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1939,"nodeType":"ArrayTypeName","src":"1829:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:10"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1955,"src":"1876:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1943,"nodeType":"ArrayTypeName","src":"1876:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:10"},"scope":2764,"src":"1815:145:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1986,"nodeType":"Block","src":"3040:97:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1977,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3075:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1976,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2212,2224],"referencedDeclaration":2212,"src":"3055:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1980,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"3102:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":1979,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2250,2276],"referencedDeclaration":2250,"src":"3083:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1975,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1936,1955,1987,2008,2040,2061],"referencedDeclaration":1936,"src":"3050:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1983,"nodeType":"ExpressionStatement","src":"3050:58:10"},{"expression":{"id":1984,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3125:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1974,"id":1985,"nodeType":"Return","src":"3118:12:10"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"1966:915:10","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:10","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"array","nameLocation":"2926:5:10","nodeType":"VariableDeclaration","scope":1987,"src":"2909:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1958,"nodeType":"ArrayTypeName","src":"2909:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"comp","nameLocation":"2988:4:10","nodeType":"VariableDeclaration","scope":1987,"src":"2941:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1968,"nodeType":"FunctionTypeName","parameterTypes":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"2950:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"2959:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:10"},"returnParameterTypes":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"2982:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:10"},"src":"2941:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:10"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"3022:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1972,"nodeType":"ArrayTypeName","src":"3022:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:10"},"scope":2764,"src":"2886:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"3320:87:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1999,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"3355:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1998,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2212,2224],"referencedDeclaration":2212,"src":"3335:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2001,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3363:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2796_$","typeString":"type(library Comparators)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:10","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"3363:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1997,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1936,1955,1987,2008,2040,2061],"referencedDeclaration":1936,"src":"3330:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2004,"nodeType":"ExpressionStatement","src":"3330:48:10"},{"expression":{"id":2005,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"3395:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1996,"id":2006,"nodeType":"Return","src":"3388:12:10"}]},"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"3143:93:10","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:10","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"array","nameLocation":"3272:5:10","nodeType":"VariableDeclaration","scope":2008,"src":"3255:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1990,"nodeType":"ArrayTypeName","src":"3255:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:10"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"3302:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1994,"nodeType":"ArrayTypeName","src":"3302:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:10"},"scope":2764,"src":"3241:166:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2039,"nodeType":"Block","src":"4487:97:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2030,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4522:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2029,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2212,2224],"referencedDeclaration":2224,"src":"4502:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2033,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"4549:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2032,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2250,2276],"referencedDeclaration":2276,"src":"4530:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2028,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1936,1955,1987,2008,2040,2061],"referencedDeclaration":1936,"src":"4497:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2036,"nodeType":"ExpressionStatement","src":"4497:58:10"},{"expression":{"id":2037,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4572:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2027,"id":2038,"nodeType":"Return","src":"4565:12:10"}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"3413:915:10","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:10","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"array","nameLocation":"4373:5:10","nodeType":"VariableDeclaration","scope":2040,"src":"4356:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2011,"nodeType":"ArrayTypeName","src":"4356:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"comp","nameLocation":"4435:4:10","nodeType":"VariableDeclaration","scope":2040,"src":"4388:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2021,"nodeType":"FunctionTypeName","parameterTypes":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2021,"src":"4397:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2021,"src":"4406:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:10"},"returnParameterTypes":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2021,"src":"4429:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:10"},"src":"4388:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:10"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"4469:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2025,"nodeType":"ArrayTypeName","src":"4469:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:10"},"scope":2764,"src":"4333:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2060,"nodeType":"Block","src":"4767:87:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2052,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4802:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2051,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2212,2224],"referencedDeclaration":2224,"src":"4782:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2054,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"4810:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2796_$","typeString":"type(library Comparators)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:10","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"4810:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2050,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1936,1955,1987,2008,2040,2061],"referencedDeclaration":1936,"src":"4777:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2057,"nodeType":"ExpressionStatement","src":"4777:48:10"},{"expression":{"id":2058,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4842:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2049,"id":2059,"nodeType":"Return","src":"4835:12:10"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"4590:93:10","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:10","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"array","nameLocation":"4719:5:10","nodeType":"VariableDeclaration","scope":2061,"src":"4702:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2043,"nodeType":"ArrayTypeName","src":"4702:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:10"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"4749:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2047,"nodeType":"ArrayTypeName","src":"4749:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:10"},"scope":2764,"src":"4688:166:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"5470:889:10","statements":[{"id":2147,"nodeType":"UncheckedBlock","src":"5480:873:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2079,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"5508:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2080,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5514:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2085,"nodeType":"IfStatement","src":"5504:31:10","trueBody":{"functionReturnParameters":2078,"id":2084,"nodeType":"Return","src":"5528:7:10"}},{"assignments":[2087],"declarations":[{"constant":false,"id":2087,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:10","nodeType":"VariableDeclaration","scope":2147,"src":"5591:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2091,"initialValue":{"arguments":[{"id":2089,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5614:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2088,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5607:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:10"},{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"pos","nameLocation":"5715:3:10","nodeType":"VariableDeclaration","scope":2147,"src":"5707:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2095,"initialValue":{"id":2094,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5721:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:10"},{"body":{"id":2126,"nodeType":"Block","src":"5795:331:10","statements":[{"condition":{"arguments":[{"arguments":[{"id":2111,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5829:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2110,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5822:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2113,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"5834:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"5817:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2125,"nodeType":"IfStatement","src":"5813:299:10","trueBody":{"id":2124,"nodeType":"Block","src":"5842:270:10","statements":[{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6046:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"6046:11:10"},{"expression":{"arguments":[{"id":2120,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6085:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2121,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6090:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2119,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"6079:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"6079:14:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5773:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2103,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"5778:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"initializationExpression":{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"mutability":"mutable","name":"it","nameLocation":"5754:2:10","nodeType":"VariableDeclaration","scope":2127,"src":"5746:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2101,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5759:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5783:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"5783:10:10"},"nodeType":"ForStatement","src":"5741:385:10"},{"expression":{"arguments":[{"id":2129,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"6146:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2130,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6153:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2128,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"6140:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"ExpressionStatement","src":"6140:17:10"},{"expression":{"arguments":[{"id":2134,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"6207:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2135,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6214:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2136,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"6219:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2133,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6196:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"ExpressionStatement","src":"6196:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6284:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2143,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"6296:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2144,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"6301:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2139,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6273:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"6273:33:10"}]}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"4860:491:10","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:10","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"begin","nameLocation":"5384:5:10","nodeType":"VariableDeclaration","scope":2149,"src":"5376:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"end","nameLocation":"5399:3:10","nodeType":"VariableDeclaration","scope":2149,"src":"5391:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"comp","nameLocation":"5451:4:10","nodeType":"VariableDeclaration","scope":2149,"src":"5404:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2075,"nodeType":"FunctionTypeName","parameterTypes":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"5413:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"5422:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:10"},"returnParameterTypes":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"5445:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2072,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:10"},"src":"5404:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:10"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"5470:0:10"},"scope":2764,"src":"5356:1003:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2159,"nodeType":"Block","src":"6532:88:10","statements":[{"AST":{"nativeSrc":"6567:47:10","nodeType":"YulBlock","src":"6567:47:10","statements":[{"nativeSrc":"6581:23:10","nodeType":"YulAssignment","src":"6581:23:10","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:10","nodeType":"YulIdentifier","src":"6592:5:10"},{"kind":"number","nativeSrc":"6599:4:10","nodeType":"YulLiteral","src":"6599:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:10","nodeType":"YulIdentifier","src":"6588:3:10"},"nativeSrc":"6588:16:10","nodeType":"YulFunctionCall","src":"6588:16:10"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:10","nodeType":"YulIdentifier","src":"6581:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2153,"isOffset":false,"isSlot":false,"src":"6592:5:10","valueSize":1},{"declaration":2156,"isOffset":false,"isSlot":false,"src":"6581:3:10","valueSize":1}],"flags":["memory-safe"],"id":2158,"nodeType":"InlineAssembly","src":"6542:72:10"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"6365:87:10","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:10","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"array","nameLocation":"6490:5:10","nodeType":"VariableDeclaration","scope":2160,"src":"6473:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ArrayTypeName","src":"6473:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:10"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:10","nodeType":"VariableDeclaration","scope":2160,"src":"6519:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:10"},"scope":2764,"src":"6457:163:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2179,"nodeType":"Block","src":"6892:93:10","statements":[{"id":2178,"nodeType":"UncheckedBlock","src":"6902:77:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2170,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"6940:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2169,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"6933:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2172,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"6949:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:10","memberName":"length","nodeType":"MemberAccess","src":"6949:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2168,"id":2177,"nodeType":"Return","src":"6926:42:10"}]}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"6626:188:10","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:10","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"array","nameLocation":"6850:5:10","nodeType":"VariableDeclaration","scope":2180,"src":"6833:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"nodeType":"ArrayTypeName","src":"6833:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:10"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:10","nodeType":"VariableDeclaration","scope":2180,"src":"6879:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:10"},"scope":2764,"src":"6819:166:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2189,"nodeType":"Block","src":"7136:68:10","statements":[{"AST":{"nativeSrc":"7155:43:10","nodeType":"YulBlock","src":"7155:43:10","statements":[{"nativeSrc":"7169:19:10","nodeType":"YulAssignment","src":"7169:19:10","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:10","nodeType":"YulIdentifier","src":"7184:3:10"}],"functionName":{"name":"mload","nativeSrc":"7178:5:10","nodeType":"YulIdentifier","src":"7178:5:10"},"nativeSrc":"7178:10:10","nodeType":"YulFunctionCall","src":"7178:10:10"},"variableNames":[{"name":"value","nativeSrc":"7169:5:10","nodeType":"YulIdentifier","src":"7169:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2183,"isOffset":false,"isSlot":false,"src":"7184:3:10","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":false,"src":"7169:5:10","valueSize":1}],"id":2188,"nodeType":"InlineAssembly","src":"7146:52:10"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"6991:74:10","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:10","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:10","nodeType":"VariableDeclaration","scope":2190,"src":"7086:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:10"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"value","nameLocation":"7129:5:10","nodeType":"VariableDeclaration","scope":2190,"src":"7121:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:10"},"scope":2764,"src":"7070:134:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2199,"nodeType":"Block","src":"7348:178:10","statements":[{"AST":{"nativeSrc":"7367:153:10","nodeType":"YulBlock","src":"7367:153:10","statements":[{"nativeSrc":"7381:25:10","nodeType":"YulVariableDeclaration","src":"7381:25:10","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:10","nodeType":"YulIdentifier","src":"7401:4:10"}],"functionName":{"name":"mload","nativeSrc":"7395:5:10","nodeType":"YulIdentifier","src":"7395:5:10"},"nativeSrc":"7395:11:10","nodeType":"YulFunctionCall","src":"7395:11:10"},"variables":[{"name":"value1","nativeSrc":"7385:6:10","nodeType":"YulTypedName","src":"7385:6:10","type":""}]},{"nativeSrc":"7419:25:10","nodeType":"YulVariableDeclaration","src":"7419:25:10","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:10","nodeType":"YulIdentifier","src":"7439:4:10"}],"functionName":{"name":"mload","nativeSrc":"7433:5:10","nodeType":"YulIdentifier","src":"7433:5:10"},"nativeSrc":"7433:11:10","nodeType":"YulFunctionCall","src":"7433:11:10"},"variables":[{"name":"value2","nativeSrc":"7423:6:10","nodeType":"YulTypedName","src":"7423:6:10","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:10","nodeType":"YulIdentifier","src":"7464:4:10"},{"name":"value2","nativeSrc":"7470:6:10","nodeType":"YulIdentifier","src":"7470:6:10"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:10","nodeType":"YulIdentifier","src":"7457:6:10"},"nativeSrc":"7457:20:10","nodeType":"YulFunctionCall","src":"7457:20:10"},"nativeSrc":"7457:20:10","nodeType":"YulExpressionStatement","src":"7457:20:10"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:10","nodeType":"YulIdentifier","src":"7497:4:10"},{"name":"value1","nativeSrc":"7503:6:10","nodeType":"YulIdentifier","src":"7503:6:10"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:10","nodeType":"YulIdentifier","src":"7490:6:10"},"nativeSrc":"7490:20:10","nodeType":"YulFunctionCall","src":"7490:20:10"},"nativeSrc":"7490:20:10","nodeType":"YulExpressionStatement","src":"7490:20:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2193,"isOffset":false,"isSlot":false,"src":"7401:4:10","valueSize":1},{"declaration":2193,"isOffset":false,"isSlot":false,"src":"7464:4:10","valueSize":1},{"declaration":2195,"isOffset":false,"isSlot":false,"src":"7439:4:10","valueSize":1},{"declaration":2195,"isOffset":false,"isSlot":false,"src":"7497:4:10","valueSize":1}],"id":2198,"nodeType":"InlineAssembly","src":"7358:162:10"}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"7210:77:10","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:10","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:10","nodeType":"VariableDeclaration","scope":2200,"src":"7307:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:10","nodeType":"VariableDeclaration","scope":2200,"src":"7321:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:10"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[],"src":"7348:0:10"},"scope":2764,"src":"7292:234:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2211,"nodeType":"Block","src":"7713:64:10","statements":[{"AST":{"nativeSrc":"7732:39:10","nodeType":"YulBlock","src":"7732:39:10","statements":[{"nativeSrc":"7746:15:10","nodeType":"YulAssignment","src":"7746:15:10","value":{"name":"input","nativeSrc":"7756:5:10","nodeType":"YulIdentifier","src":"7756:5:10"},"variableNames":[{"name":"output","nativeSrc":"7746:6:10","nodeType":"YulIdentifier","src":"7746:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2204,"isOffset":false,"isSlot":false,"src":"7756:5:10","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":false,"src":"7746:6:10","valueSize":1}],"id":2210,"nodeType":"InlineAssembly","src":"7723:48:10"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"7532:76:10","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2212,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:10","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"input","nameLocation":"7659:5:10","nodeType":"VariableDeclaration","scope":2212,"src":"7642:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2203,"nodeType":"ArrayTypeName","src":"7642:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:10"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"output","nameLocation":"7705:6:10","nodeType":"VariableDeclaration","scope":2212,"src":"7688:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2207,"nodeType":"ArrayTypeName","src":"7688:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:10"},"scope":2764,"src":"7613:164:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2223,"nodeType":"Block","src":"7964:64:10","statements":[{"AST":{"nativeSrc":"7983:39:10","nodeType":"YulBlock","src":"7983:39:10","statements":[{"nativeSrc":"7997:15:10","nodeType":"YulAssignment","src":"7997:15:10","value":{"name":"input","nativeSrc":"8007:5:10","nodeType":"YulIdentifier","src":"8007:5:10"},"variableNames":[{"name":"output","nativeSrc":"7997:6:10","nodeType":"YulIdentifier","src":"7997:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2216,"isOffset":false,"isSlot":false,"src":"8007:5:10","valueSize":1},{"declaration":2220,"isOffset":false,"isSlot":false,"src":"7997:6:10","valueSize":1}],"id":2222,"nodeType":"InlineAssembly","src":"7974:48:10"}]},"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"7783:76:10","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:10","nodeType":"FunctionDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"input","nameLocation":"7910:5:10","nodeType":"VariableDeclaration","scope":2224,"src":"7893:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2215,"nodeType":"ArrayTypeName","src":"7893:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:10"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"output","nameLocation":"7956:6:10","nodeType":"VariableDeclaration","scope":2224,"src":"7939:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2219,"nodeType":"ArrayTypeName","src":"7939:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:10"},"scope":2764,"src":"7864:164:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2249,"nodeType":"Block","src":"8290:64:10","statements":[{"AST":{"nativeSrc":"8309:39:10","nodeType":"YulBlock","src":"8309:39:10","statements":[{"nativeSrc":"8323:15:10","nodeType":"YulAssignment","src":"8323:15:10","value":{"name":"input","nativeSrc":"8333:5:10","nodeType":"YulIdentifier","src":"8333:5:10"},"variableNames":[{"name":"output","nativeSrc":"8323:6:10","nodeType":"YulIdentifier","src":"8323:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2235,"isOffset":false,"isSlot":false,"src":"8333:5:10","valueSize":1},{"declaration":2246,"isOffset":false,"isSlot":false,"src":"8323:6:10","valueSize":1}],"id":2248,"nodeType":"InlineAssembly","src":"8300:48:10"}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"8034:78:10","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:10","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"input","nameLocation":"8201:5:10","nodeType":"VariableDeclaration","scope":2250,"src":"8154:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2234,"nodeType":"FunctionTypeName","parameterTypes":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2234,"src":"8163:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2234,"src":"8172:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:10"},"returnParameterTypes":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2234,"src":"8195:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2231,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:10"},"src":"8154:52:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:10"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"output","nameLocation":"8282:6:10","nodeType":"VariableDeclaration","scope":2250,"src":"8235:53:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2245,"nodeType":"FunctionTypeName","parameterTypes":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2245,"src":"8244:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2245,"src":"8253:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:10"},"returnParameterTypes":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2245,"src":"8276:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2242,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:10"},"src":"8235:53:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:10"},"scope":2764,"src":"8117:237:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2275,"nodeType":"Block","src":"8616:64:10","statements":[{"AST":{"nativeSrc":"8635:39:10","nodeType":"YulBlock","src":"8635:39:10","statements":[{"nativeSrc":"8649:15:10","nodeType":"YulAssignment","src":"8649:15:10","value":{"name":"input","nativeSrc":"8659:5:10","nodeType":"YulIdentifier","src":"8659:5:10"},"variableNames":[{"name":"output","nativeSrc":"8649:6:10","nodeType":"YulIdentifier","src":"8649:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2261,"isOffset":false,"isSlot":false,"src":"8659:5:10","valueSize":1},{"declaration":2272,"isOffset":false,"isSlot":false,"src":"8649:6:10","valueSize":1}],"id":2274,"nodeType":"InlineAssembly","src":"8626:48:10"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"8360:78:10","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:10","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"input","nameLocation":"8527:5:10","nodeType":"VariableDeclaration","scope":2276,"src":"8480:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2260,"nodeType":"FunctionTypeName","parameterTypes":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"8489:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"8498:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:10"},"returnParameterTypes":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"8521:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:10"},"src":"8480:52:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:10"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"output","nameLocation":"8608:6:10","nodeType":"VariableDeclaration","scope":2276,"src":"8561:53:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2271,"nodeType":"FunctionTypeName","parameterTypes":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"8570:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"8579:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:10"},"returnParameterTypes":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"8602:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:10"},"src":"8561:53:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:10"},"scope":2764,"src":"8443:237:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2358,"nodeType":"Block","src":"9405:834:10","statements":[{"assignments":[2288],"declarations":[{"constant":false,"id":2288,"mutability":"mutable","name":"low","nameLocation":"9423:3:10","nodeType":"VariableDeclaration","scope":2358,"src":"9415:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2290,"initialValue":{"hexValue":"30","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:10"},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"high","nameLocation":"9448:4:10","nodeType":"VariableDeclaration","scope":2358,"src":"9440:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2295,"initialValue":{"expression":{"id":2293,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"9455:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:10","memberName":"length","nodeType":"MemberAccess","src":"9455:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"9482:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2302,"nodeType":"IfStatement","src":"9478:48:10","trueBody":{"id":2301,"nodeType":"Block","src":"9493:33:10","statements":[{"expression":{"hexValue":"30","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2286,"id":2300,"nodeType":"Return","src":"9507:8:10"}]}},{"body":{"id":2334,"nodeType":"Block","src":"9555:423:10","statements":[{"assignments":[2307],"declarations":[{"constant":false,"id":2307,"mutability":"mutable","name":"mid","nameLocation":"9577:3:10","nodeType":"VariableDeclaration","scope":2334,"src":"9569:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2313,"initialValue":{"arguments":[{"id":2310,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"9596:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2311,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"9601:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2308,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"9583:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"9583:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2315,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"9844:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2316,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"9851:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2314,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2639,2665,2691],"referencedDeclaration":2691,"src":"9831:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3140_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3139,"src":"9831:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2319,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"9864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2332,"nodeType":"Block","src":"9922:46:10","statements":[{"expression":{"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"9940:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"9946:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ExpressionStatement","src":"9940:13:10"}]},"id":2333,"nodeType":"IfStatement","src":"9827:141:10","trueBody":{"id":2325,"nodeType":"Block","src":"9873:43:10","statements":[{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2321,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"9891:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2322,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"9898:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"9891:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"9543:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2304,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"9549:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2335,"nodeType":"WhileStatement","src":"9536:442:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2336,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10095:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2340,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"10119:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10126:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2339,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2639,2665,2691],"referencedDeclaration":2691,"src":"10106:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3140_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3139,"src":"10106:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2346,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"10144:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2356,"nodeType":"Block","src":"10198:35:10","statements":[{"expression":{"id":2354,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10219:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2286,"id":2355,"nodeType":"Return","src":"10212:10:10"}]},"id":2357,"nodeType":"IfStatement","src":"10091:142:10","trueBody":{"id":2353,"nodeType":"Block","src":"10153:39:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10174:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2286,"id":2352,"nodeType":"Return","src":"10167:14:10"}]}}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"8686:616:10","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:10","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"array","nameLocation":"9349:5:10","nodeType":"VariableDeclaration","scope":2359,"src":"9331:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ArrayTypeName","src":"9331:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"element","nameLocation":"9364:7:10","nodeType":"VariableDeclaration","scope":2359,"src":"9356:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:10"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"9396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:10"},"scope":2764,"src":"9307:932:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2422,"nodeType":"Block","src":"10756:709:10","statements":[{"assignments":[2371],"declarations":[{"constant":false,"id":2371,"mutability":"mutable","name":"low","nameLocation":"10774:3:10","nodeType":"VariableDeclaration","scope":2422,"src":"10766:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2373,"initialValue":{"hexValue":"30","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:10"},{"assignments":[2375],"declarations":[{"constant":false,"id":2375,"mutability":"mutable","name":"high","nameLocation":"10799:4:10","nodeType":"VariableDeclaration","scope":2422,"src":"10791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2378,"initialValue":{"expression":{"id":2376,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"10806:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:10","memberName":"length","nodeType":"MemberAccess","src":"10806:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"10833:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"nodeType":"IfStatement","src":"10829:48:10","trueBody":{"id":2384,"nodeType":"Block","src":"10844:33:10","statements":[{"expression":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2369,"id":2383,"nodeType":"Return","src":"10858:8:10"}]}},{"body":{"id":2418,"nodeType":"Block","src":"10906:532:10","statements":[{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"mid","nameLocation":"10928:3:10","nodeType":"VariableDeclaration","scope":2418,"src":"10920:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"initialValue":{"arguments":[{"id":2393,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"10947:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2394,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"10952:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2391,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"10934:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"10934:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2398,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"11195:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2399,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"11202:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2397,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2639,2665,2691],"referencedDeclaration":2691,"src":"11182:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3140_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3139,"src":"11182:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2402,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"11215:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2416,"nodeType":"Block","src":"11385:43:10","statements":[{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2412,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"11403:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2413,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"11410:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"nodeType":"ExpressionStatement","src":"11403:10:10"}]},"id":2417,"nodeType":"IfStatement","src":"11178:250:10","trueBody":{"id":2411,"nodeType":"Block","src":"11224:155:10","statements":[{"id":2410,"nodeType":"UncheckedBlock","src":"11301:64:10","statements":[{"expression":{"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"11333:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"11339:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2409,"nodeType":"ExpressionStatement","src":"11333:13:10"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"10894:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2387,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"10900:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"WhileStatement","src":"10887:551:10"},{"expression":{"id":2420,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"11455:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2369,"id":2421,"nodeType":"Return","src":"11448:10:10"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"10245:412:10","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:10","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"array","nameLocation":"10700:5:10","nodeType":"VariableDeclaration","scope":2423,"src":"10682:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ArrayTypeName","src":"10682:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"element","nameLocation":"10715:7:10","nodeType":"VariableDeclaration","scope":2423,"src":"10707:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:10"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"10747:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:10"},"scope":2764,"src":"10662:803:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2486,"nodeType":"Block","src":"11982:709:10","statements":[{"assignments":[2435],"declarations":[{"constant":false,"id":2435,"mutability":"mutable","name":"low","nameLocation":"12000:3:10","nodeType":"VariableDeclaration","scope":2486,"src":"11992:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2437,"initialValue":{"hexValue":"30","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:10"},{"assignments":[2439],"declarations":[{"constant":false,"id":2439,"mutability":"mutable","name":"high","nameLocation":"12025:4:10","nodeType":"VariableDeclaration","scope":2486,"src":"12017:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2442,"initialValue":{"expression":{"id":2440,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"12032:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:10","memberName":"length","nodeType":"MemberAccess","src":"12032:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"12059:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2449,"nodeType":"IfStatement","src":"12055:48:10","trueBody":{"id":2448,"nodeType":"Block","src":"12070:33:10","statements":[{"expression":{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2433,"id":2447,"nodeType":"Return","src":"12084:8:10"}]}},{"body":{"id":2482,"nodeType":"Block","src":"12132:532:10","statements":[{"assignments":[2454],"declarations":[{"constant":false,"id":2454,"mutability":"mutable","name":"mid","nameLocation":"12154:3:10","nodeType":"VariableDeclaration","scope":2482,"src":"12146:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2460,"initialValue":{"arguments":[{"id":2457,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"12173:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2458,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"12178:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2455,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"12160:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"12160:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2462,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"12421:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2463,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"12428:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2639,2665,2691],"referencedDeclaration":2691,"src":"12408:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3140_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3139,"src":"12408:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2466,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"12441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2480,"nodeType":"Block","src":"12499:155:10","statements":[{"id":2479,"nodeType":"UncheckedBlock","src":"12576:64:10","statements":[{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2473,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"12608:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2474,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"12614:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ExpressionStatement","src":"12608:13:10"}]}]},"id":2481,"nodeType":"IfStatement","src":"12404:250:10","trueBody":{"id":2472,"nodeType":"Block","src":"12450:43:10","statements":[{"expression":{"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2468,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"12468:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2469,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"12475:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2471,"nodeType":"ExpressionStatement","src":"12468:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"12120:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2451,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"12126:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2483,"nodeType":"WhileStatement","src":"12113:551:10"},{"expression":{"id":2484,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"12681:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2433,"id":2485,"nodeType":"Return","src":"12674:10:10"}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"11471:412:10","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:10","nodeType":"FunctionDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"array","nameLocation":"11926:5:10","nodeType":"VariableDeclaration","scope":2487,"src":"11908:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ArrayTypeName","src":"11908:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"element","nameLocation":"11941:7:10","nodeType":"VariableDeclaration","scope":2487,"src":"11933:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:10"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2487,"src":"11973:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:10"},"scope":2764,"src":"11888:803:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2549,"nodeType":"Block","src":"12875:709:10","statements":[{"assignments":[2499],"declarations":[{"constant":false,"id":2499,"mutability":"mutable","name":"low","nameLocation":"12893:3:10","nodeType":"VariableDeclaration","scope":2549,"src":"12885:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2501,"initialValue":{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:10"},{"assignments":[2503],"declarations":[{"constant":false,"id":2503,"mutability":"mutable","name":"high","nameLocation":"12918:4:10","nodeType":"VariableDeclaration","scope":2549,"src":"12910:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2506,"initialValue":{"expression":{"id":2504,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"12925:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:10","memberName":"length","nodeType":"MemberAccess","src":"12925:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"12952:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"12948:48:10","trueBody":{"id":2512,"nodeType":"Block","src":"12963:33:10","statements":[{"expression":{"hexValue":"30","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2497,"id":2511,"nodeType":"Return","src":"12977:8:10"}]}},{"body":{"id":2545,"nodeType":"Block","src":"13025:532:10","statements":[{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"mid","nameLocation":"13047:3:10","nodeType":"VariableDeclaration","scope":2545,"src":"13039:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2524,"initialValue":{"arguments":[{"id":2521,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13066:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2522,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"13071:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2519,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"13053:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"13053:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2526,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"13320:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2527,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"13327:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2704,2717,2730],"referencedDeclaration":2730,"src":"13301:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2529,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"13334:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2543,"nodeType":"Block","src":"13504:43:10","statements":[{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2539,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"13522:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2540,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"13529:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2542,"nodeType":"ExpressionStatement","src":"13522:10:10"}]},"id":2544,"nodeType":"IfStatement","src":"13297:250:10","trueBody":{"id":2538,"nodeType":"Block","src":"13343:155:10","statements":[{"id":2537,"nodeType":"UncheckedBlock","src":"13420:64:10","statements":[{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2531,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13452:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"13458:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"13452:13:10"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13013:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2515,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"13019:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"nodeType":"WhileStatement","src":"13006:551:10"},{"expression":{"id":2547,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13574:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2497,"id":2548,"nodeType":"Return","src":"13567:10:10"}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"12697:74:10","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:10","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"array","nameLocation":"12819:5:10","nodeType":"VariableDeclaration","scope":2550,"src":"12802:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ArrayTypeName","src":"12802:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"element","nameLocation":"12834:7:10","nodeType":"VariableDeclaration","scope":2550,"src":"12826:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:10"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"12866:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:10"},"scope":2764,"src":"12776:808:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2612,"nodeType":"Block","src":"13768:709:10","statements":[{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"low","nameLocation":"13786:3:10","nodeType":"VariableDeclaration","scope":2612,"src":"13778:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2564,"initialValue":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:10"},{"assignments":[2566],"declarations":[{"constant":false,"id":2566,"mutability":"mutable","name":"high","nameLocation":"13811:4:10","nodeType":"VariableDeclaration","scope":2612,"src":"13803:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"initialValue":{"expression":{"id":2567,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"13818:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:10","memberName":"length","nodeType":"MemberAccess","src":"13818:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2570,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"13845:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"IfStatement","src":"13841:48:10","trueBody":{"id":2575,"nodeType":"Block","src":"13856:33:10","statements":[{"expression":{"hexValue":"30","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2560,"id":2574,"nodeType":"Return","src":"13870:8:10"}]}},{"body":{"id":2608,"nodeType":"Block","src":"13918:532:10","statements":[{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"mid","nameLocation":"13940:3:10","nodeType":"VariableDeclaration","scope":2608,"src":"13932:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2587,"initialValue":{"arguments":[{"id":2584,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"13959:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2585,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"13964:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2582,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"13946:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"13946:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2589,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14213:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2590,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"14220:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2588,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2704,2717,2730],"referencedDeclaration":2730,"src":"14194:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2592,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"14227:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2606,"nodeType":"Block","src":"14285:155:10","statements":[{"id":2605,"nodeType":"UncheckedBlock","src":"14362:64:10","statements":[{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2599,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"14394:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"14400:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2604,"nodeType":"ExpressionStatement","src":"14394:13:10"}]}]},"id":2607,"nodeType":"IfStatement","src":"14190:250:10","trueBody":{"id":2598,"nodeType":"Block","src":"14236:43:10","statements":[{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2594,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"14254:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2595,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"14261:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ExpressionStatement","src":"14254:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"13906:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2578,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"13912:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2609,"nodeType":"WhileStatement","src":"13899:551:10"},{"expression":{"id":2610,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"14467:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2560,"id":2611,"nodeType":"Return","src":"14460:10:10"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"13590:74:10","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:10","nodeType":"FunctionDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"array","nameLocation":"13712:5:10","nodeType":"VariableDeclaration","scope":2613,"src":"13695:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2553,"nodeType":"ArrayTypeName","src":"13695:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"element","nameLocation":"13727:7:10","nodeType":"VariableDeclaration","scope":2613,"src":"13719:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:10"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2613,"src":"13759:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:10"},"scope":2764,"src":"13669:808:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2638,"nodeType":"Block","src":"14793:167:10","statements":[{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"slot","nameLocation":"14811:4:10","nodeType":"VariableDeclaration","scope":2638,"src":"14803:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2627,"nodeType":"VariableDeclarationStatement","src":"14803:12:10"},{"AST":{"nativeSrc":"14850:40:10","nodeType":"YulBlock","src":"14850:40:10","statements":[{"nativeSrc":"14864:16:10","nodeType":"YulAssignment","src":"14864:16:10","value":{"name":"arr.slot","nativeSrc":"14872:8:10","nodeType":"YulIdentifier","src":"14872:8:10"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:10","nodeType":"YulIdentifier","src":"14864:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2617,"isOffset":false,"isSlot":true,"src":"14872:8:10","suffix":"slot","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"14864:4:10","valueSize":1}],"flags":["memory-safe"],"id":2628,"nodeType":"InlineAssembly","src":"14825:65:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2633,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"14932:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2629,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"14906:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:10","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"14906:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:10","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"14906:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"14906:45:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3131_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3131_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2624,"id":2637,"nodeType":"Return","src":"14899:54:10"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"14483:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:10","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"arr","nameLocation":"14719:3:10","nodeType":"VariableDeclaration","scope":2639,"src":"14701:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2616,"nodeType":"ArrayTypeName","src":"14701:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"pos","nameLocation":"14732:3:10","nodeType":"VariableDeclaration","scope":2639,"src":"14724:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:10"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"14760:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3131_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2622,"nodeType":"UserDefinedTypeName","pathNode":{"id":2621,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:10","14772:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3131,"src":"14760:23:10"},"referencedDeclaration":3131,"src":"14760:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3131_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:10"},"scope":2764,"src":"14679:281:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"15276:167:10","statements":[{"assignments":[2652],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"slot","nameLocation":"15294:4:10","nodeType":"VariableDeclaration","scope":2664,"src":"15286:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2653,"nodeType":"VariableDeclarationStatement","src":"15286:12:10"},{"AST":{"nativeSrc":"15333:40:10","nodeType":"YulBlock","src":"15333:40:10","statements":[{"nativeSrc":"15347:16:10","nodeType":"YulAssignment","src":"15347:16:10","value":{"name":"arr.slot","nativeSrc":"15355:8:10","nodeType":"YulIdentifier","src":"15355:8:10"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:10","nodeType":"YulIdentifier","src":"15347:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2643,"isOffset":false,"isSlot":true,"src":"15355:8:10","suffix":"slot","valueSize":1},{"declaration":2652,"isOffset":false,"isSlot":false,"src":"15347:4:10","valueSize":1}],"flags":["memory-safe"],"id":2654,"nodeType":"InlineAssembly","src":"15308:65:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2659,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"15415:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2655,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"15389:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:10","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"15389:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:10","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"15389:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:10","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"15389:45:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3137_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3137_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2650,"id":2663,"nodeType":"Return","src":"15382:54:10"}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"14966:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:10","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"arr","nameLocation":"15202:3:10","nodeType":"VariableDeclaration","scope":2665,"src":"15184:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2642,"nodeType":"ArrayTypeName","src":"15184:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"pos","nameLocation":"15215:3:10","nodeType":"VariableDeclaration","scope":2665,"src":"15207:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:10"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"15243:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3137_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2648,"nodeType":"UserDefinedTypeName","pathNode":{"id":2647,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:10","15255:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3137,"src":"15243:23:10"},"referencedDeclaration":3137,"src":"15243:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3137_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:10"},"scope":2764,"src":"15162:281:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2690,"nodeType":"Block","src":"15759:167:10","statements":[{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"slot","nameLocation":"15777:4:10","nodeType":"VariableDeclaration","scope":2690,"src":"15769:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2679,"nodeType":"VariableDeclarationStatement","src":"15769:12:10"},{"AST":{"nativeSrc":"15816:40:10","nodeType":"YulBlock","src":"15816:40:10","statements":[{"nativeSrc":"15830:16:10","nodeType":"YulAssignment","src":"15830:16:10","value":{"name":"arr.slot","nativeSrc":"15838:8:10","nodeType":"YulIdentifier","src":"15838:8:10"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:10","nodeType":"YulIdentifier","src":"15830:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2669,"isOffset":false,"isSlot":true,"src":"15838:8:10","suffix":"slot","valueSize":1},{"declaration":2678,"isOffset":false,"isSlot":false,"src":"15830:4:10","valueSize":1}],"flags":["memory-safe"],"id":2680,"nodeType":"InlineAssembly","src":"15791:65:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2685,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"15898:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2681,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"15872:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:10","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"15872:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:10","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"15872:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:10","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3193,"src":"15872:45:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3140_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2676,"id":2689,"nodeType":"Return","src":"15865:54:10"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"15449:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:10","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"arr","nameLocation":"15685:3:10","nodeType":"VariableDeclaration","scope":2691,"src":"15667:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ArrayTypeName","src":"15667:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"pos","nameLocation":"15698:3:10","nodeType":"VariableDeclaration","scope":2691,"src":"15690:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:10"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2691,"src":"15726:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2674,"nodeType":"UserDefinedTypeName","pathNode":{"id":2673,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:10","15738:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3140,"src":"15726:23:10"},"referencedDeclaration":3140,"src":"15726:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:10"},"scope":2764,"src":"15645:281:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"16227:98:10","statements":[{"AST":{"nativeSrc":"16246:73:10","nodeType":"YulBlock","src":"16246:73:10","statements":[{"nativeSrc":"16260:49:10","nodeType":"YulAssignment","src":"16260:49:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:10","nodeType":"YulIdentifier","src":"16281:3:10"},{"kind":"number","nativeSrc":"16286:4:10","nodeType":"YulLiteral","src":"16286:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:10","nodeType":"YulIdentifier","src":"16277:3:10"},"nativeSrc":"16277:14:10","nodeType":"YulFunctionCall","src":"16277:14:10"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:10","nodeType":"YulIdentifier","src":"16297:3:10"},{"kind":"number","nativeSrc":"16302:4:10","nodeType":"YulLiteral","src":"16302:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:10","nodeType":"YulIdentifier","src":"16293:3:10"},"nativeSrc":"16293:14:10","nodeType":"YulFunctionCall","src":"16293:14:10"}],"functionName":{"name":"add","nativeSrc":"16273:3:10","nodeType":"YulIdentifier","src":"16273:3:10"},"nativeSrc":"16273:35:10","nodeType":"YulFunctionCall","src":"16273:35:10"}],"functionName":{"name":"mload","nativeSrc":"16267:5:10","nodeType":"YulIdentifier","src":"16267:5:10"},"nativeSrc":"16267:42:10","nodeType":"YulFunctionCall","src":"16267:42:10"},"variableNames":[{"name":"res","nativeSrc":"16260:3:10","nodeType":"YulIdentifier","src":"16260:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2695,"isOffset":false,"isSlot":false,"src":"16281:3:10","valueSize":1},{"declaration":2697,"isOffset":false,"isSlot":false,"src":"16297:3:10","valueSize":1},{"declaration":2700,"isOffset":false,"isSlot":false,"src":"16260:3:10","valueSize":1}],"id":2702,"nodeType":"InlineAssembly","src":"16237:82:10"}]},"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"15932:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:10","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"arr","nameLocation":"16173:3:10","nodeType":"VariableDeclaration","scope":2704,"src":"16156:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2694,"nodeType":"ArrayTypeName","src":"16156:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"pos","nameLocation":"16186:3:10","nodeType":"VariableDeclaration","scope":2704,"src":"16178:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:10"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"res","nameLocation":"16222:3:10","nodeType":"VariableDeclaration","scope":2704,"src":"16214:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:10"},"scope":2764,"src":"16128:197:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"16626:98:10","statements":[{"AST":{"nativeSrc":"16645:73:10","nodeType":"YulBlock","src":"16645:73:10","statements":[{"nativeSrc":"16659:49:10","nodeType":"YulAssignment","src":"16659:49:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:10","nodeType":"YulIdentifier","src":"16680:3:10"},{"kind":"number","nativeSrc":"16685:4:10","nodeType":"YulLiteral","src":"16685:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:10","nodeType":"YulIdentifier","src":"16676:3:10"},"nativeSrc":"16676:14:10","nodeType":"YulFunctionCall","src":"16676:14:10"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:10","nodeType":"YulIdentifier","src":"16696:3:10"},{"kind":"number","nativeSrc":"16701:4:10","nodeType":"YulLiteral","src":"16701:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:10","nodeType":"YulIdentifier","src":"16692:3:10"},"nativeSrc":"16692:14:10","nodeType":"YulFunctionCall","src":"16692:14:10"}],"functionName":{"name":"add","nativeSrc":"16672:3:10","nodeType":"YulIdentifier","src":"16672:3:10"},"nativeSrc":"16672:35:10","nodeType":"YulFunctionCall","src":"16672:35:10"}],"functionName":{"name":"mload","nativeSrc":"16666:5:10","nodeType":"YulIdentifier","src":"16666:5:10"},"nativeSrc":"16666:42:10","nodeType":"YulFunctionCall","src":"16666:42:10"},"variableNames":[{"name":"res","nativeSrc":"16659:3:10","nodeType":"YulIdentifier","src":"16659:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2708,"isOffset":false,"isSlot":false,"src":"16680:3:10","valueSize":1},{"declaration":2710,"isOffset":false,"isSlot":false,"src":"16696:3:10","valueSize":1},{"declaration":2713,"isOffset":false,"isSlot":false,"src":"16659:3:10","valueSize":1}],"id":2715,"nodeType":"InlineAssembly","src":"16636:82:10"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"16331:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:10","nodeType":"FunctionDefinition","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"arr","nameLocation":"16572:3:10","nodeType":"VariableDeclaration","scope":2717,"src":"16555:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2707,"nodeType":"ArrayTypeName","src":"16555:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"pos","nameLocation":"16585:3:10","nodeType":"VariableDeclaration","scope":2717,"src":"16577:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:10"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"res","nameLocation":"16621:3:10","nodeType":"VariableDeclaration","scope":2717,"src":"16613:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:10"},"scope":2764,"src":"16527:197:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"17025:98:10","statements":[{"AST":{"nativeSrc":"17044:73:10","nodeType":"YulBlock","src":"17044:73:10","statements":[{"nativeSrc":"17058:49:10","nodeType":"YulAssignment","src":"17058:49:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:10","nodeType":"YulIdentifier","src":"17079:3:10"},{"kind":"number","nativeSrc":"17084:4:10","nodeType":"YulLiteral","src":"17084:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:10","nodeType":"YulIdentifier","src":"17075:3:10"},"nativeSrc":"17075:14:10","nodeType":"YulFunctionCall","src":"17075:14:10"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:10","nodeType":"YulIdentifier","src":"17095:3:10"},{"kind":"number","nativeSrc":"17100:4:10","nodeType":"YulLiteral","src":"17100:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:10","nodeType":"YulIdentifier","src":"17091:3:10"},"nativeSrc":"17091:14:10","nodeType":"YulFunctionCall","src":"17091:14:10"}],"functionName":{"name":"add","nativeSrc":"17071:3:10","nodeType":"YulIdentifier","src":"17071:3:10"},"nativeSrc":"17071:35:10","nodeType":"YulFunctionCall","src":"17071:35:10"}],"functionName":{"name":"mload","nativeSrc":"17065:5:10","nodeType":"YulIdentifier","src":"17065:5:10"},"nativeSrc":"17065:42:10","nodeType":"YulFunctionCall","src":"17065:42:10"},"variableNames":[{"name":"res","nativeSrc":"17058:3:10","nodeType":"YulIdentifier","src":"17058:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2721,"isOffset":false,"isSlot":false,"src":"17079:3:10","valueSize":1},{"declaration":2723,"isOffset":false,"isSlot":false,"src":"17095:3:10","valueSize":1},{"declaration":2726,"isOffset":false,"isSlot":false,"src":"17058:3:10","valueSize":1}],"id":2728,"nodeType":"InlineAssembly","src":"17035:82:10"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"16730:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:10","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"arr","nameLocation":"16971:3:10","nodeType":"VariableDeclaration","scope":2730,"src":"16954:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ArrayTypeName","src":"16954:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"pos","nameLocation":"16984:3:10","nodeType":"VariableDeclaration","scope":2730,"src":"16976:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:10"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"res","nameLocation":"17020:3:10","nodeType":"VariableDeclaration","scope":2730,"src":"17012:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:10"},"scope":2764,"src":"16926:197:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2740,"nodeType":"Block","src":"17440:88:10","statements":[{"AST":{"nativeSrc":"17475:47:10","nodeType":"YulBlock","src":"17475:47:10","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17496:10:10","nodeType":"YulIdentifier","src":"17496:10:10"},{"name":"len","nativeSrc":"17508:3:10","nodeType":"YulIdentifier","src":"17508:3:10"}],"functionName":{"name":"sstore","nativeSrc":"17489:6:10","nodeType":"YulIdentifier","src":"17489:6:10"},"nativeSrc":"17489:23:10","nodeType":"YulFunctionCall","src":"17489:23:10"},"nativeSrc":"17489:23:10","nodeType":"YulExpressionStatement","src":"17489:23:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2734,"isOffset":false,"isSlot":true,"src":"17496:10:10","suffix":"slot","valueSize":1},{"declaration":2736,"isOffset":false,"isSlot":false,"src":"17508:3:10","valueSize":1}],"flags":["memory-safe"],"id":2739,"nodeType":"InlineAssembly","src":"17450:72:10"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"17129:234:10","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:10","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"array","nameLocation":"17411:5:10","nodeType":"VariableDeclaration","scope":2741,"src":"17393:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2733,"nodeType":"ArrayTypeName","src":"17393:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"len","nameLocation":"17426:3:10","nodeType":"VariableDeclaration","scope":2741,"src":"17418:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:10"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[],"src":"17440:0:10"},"scope":2764,"src":"17368:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"17845:88:10","statements":[{"AST":{"nativeSrc":"17880:47:10","nodeType":"YulBlock","src":"17880:47:10","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17901:10:10","nodeType":"YulIdentifier","src":"17901:10:10"},{"name":"len","nativeSrc":"17913:3:10","nodeType":"YulIdentifier","src":"17913:3:10"}],"functionName":{"name":"sstore","nativeSrc":"17894:6:10","nodeType":"YulIdentifier","src":"17894:6:10"},"nativeSrc":"17894:23:10","nodeType":"YulFunctionCall","src":"17894:23:10"},"nativeSrc":"17894:23:10","nodeType":"YulExpressionStatement","src":"17894:23:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2745,"isOffset":false,"isSlot":true,"src":"17901:10:10","suffix":"slot","valueSize":1},{"declaration":2747,"isOffset":false,"isSlot":false,"src":"17913:3:10","valueSize":1}],"flags":["memory-safe"],"id":2750,"nodeType":"InlineAssembly","src":"17855:72:10"}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"17534:234:10","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:10","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"array","nameLocation":"17816:5:10","nodeType":"VariableDeclaration","scope":2752,"src":"17798:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2744,"nodeType":"ArrayTypeName","src":"17798:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"len","nameLocation":"17831:3:10","nodeType":"VariableDeclaration","scope":2752,"src":"17823:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:10"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[],"src":"17845:0:10"},"scope":2764,"src":"17773:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2762,"nodeType":"Block","src":"18250:88:10","statements":[{"AST":{"nativeSrc":"18285:47:10","nodeType":"YulBlock","src":"18285:47:10","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18306:10:10","nodeType":"YulIdentifier","src":"18306:10:10"},{"name":"len","nativeSrc":"18318:3:10","nodeType":"YulIdentifier","src":"18318:3:10"}],"functionName":{"name":"sstore","nativeSrc":"18299:6:10","nodeType":"YulIdentifier","src":"18299:6:10"},"nativeSrc":"18299:23:10","nodeType":"YulFunctionCall","src":"18299:23:10"},"nativeSrc":"18299:23:10","nodeType":"YulExpressionStatement","src":"18299:23:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2756,"isOffset":false,"isSlot":true,"src":"18306:10:10","suffix":"slot","valueSize":1},{"declaration":2758,"isOffset":false,"isSlot":false,"src":"18318:3:10","valueSize":1}],"flags":["memory-safe"],"id":2761,"nodeType":"InlineAssembly","src":"18260:72:10"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"17939:234:10","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2763,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:10","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"array","nameLocation":"18221:5:10","nodeType":"VariableDeclaration","scope":2763,"src":"18203:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ArrayTypeName","src":"18203:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"len","nameLocation":"18236:3:10","nodeType":"VariableDeclaration","scope":2763,"src":"18228:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:10"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"18250:0:10"},"scope":2764,"src":"18178:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2765,"src":"459:17881:10","usedErrors":[],"usedEvents":[]}],"src":"183:18158:10"},"id":10},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2796]},"id":2797,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2766,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"131:92:11","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2796,"linearizedBaseContracts":[2796],"name":"Comparators","nameLocation":"232:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2780,"nodeType":"Block","src":"313:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"330:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"334:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2775,"id":2779,"nodeType":"Return","src":"323:12:11"}]},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:11","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"a","nameLocation":"270:1:11","nodeType":"VariableDeclaration","scope":2781,"src":"262:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"b","nameLocation":"281:1:11","nodeType":"VariableDeclaration","scope":2781,"src":"273:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:11"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"307:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2773,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:11"},"scope":2796,"src":"250:92:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2794,"nodeType":"Block","src":"411:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"428:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"432:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2789,"id":2793,"nodeType":"Return","src":"421:12:11"}]},"id":2795,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:11","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"a","nameLocation":"368:1:11","nodeType":"VariableDeclaration","scope":2795,"src":"360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"b","nameLocation":"379:1:11","nodeType":"VariableDeclaration","scope":2795,"src":"371:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:11"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2795,"src":"405:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2787,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:11"},"scope":2796,"src":"348:92:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2797,"src":"224:218:11","usedErrors":[],"usedEvents":[]}],"src":"105:338:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2826]},"id":2827,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2798,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2826,"linearizedBaseContracts":[2826],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2807,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2803,"id":2806,"nodeType":"Return","src":"728:17:12"}]},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2826,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2812,"id":2815,"nodeType":"Return","src":"835:15:12"}]},"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2810,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2826,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2824,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2821,"id":2823,"nodeType":"Return","src":"945:8:12"}]},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2826,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2827,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2878]},"id":2879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2828,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2878,"linearizedBaseContracts":[2878],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":2833,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":2878,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":2837,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":2878,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":2841,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":2878,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":2845,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":2878,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":2849,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":2878,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":2853,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":2878,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2854,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":2857,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":2878,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":2861,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":2878,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":2865,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":2878,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":2869,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":2878,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nativeSrc":"1854:110:13","nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:13","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:13","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:13","nodeType":"YulIdentifier","src":"1868:6:13"},"nativeSrc":"1868:24:13","nodeType":"YulFunctionCall","src":"1868:24:13"},"nativeSrc":"1868:24:13","nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:13","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:13","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:13","nodeType":"YulIdentifier","src":"1905:6:13"},"nativeSrc":"1905:18:13","nodeType":"YulFunctionCall","src":"1905:18:13"},"nativeSrc":"1905:18:13","nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:13","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:13","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:13","nodeType":"YulIdentifier","src":"1936:6:13"},"nativeSrc":"1936:18:13","nodeType":"YulFunctionCall","src":"1936:18:13"},"nativeSrc":"1936:18:13","nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2872,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":2875,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":2877,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":2878,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2879,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2826],"Pausable":[2995]},"id":2996,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2880,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2882,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2996,"sourceUnit":2827,"src":"128:45:14","symbolAliases":[{"foreign":{"id":2881,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"136:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2884,"name":"Context","nameLocations":["645:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2826,"src":"645:7:14"},"id":2885,"nodeType":"InheritanceSpecifier","src":"645:7:14"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"175:439:14","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2995,"linearizedBaseContracts":[2995,2826],"name":"Pausable","nameLocation":"633:8:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2887,"mutability":"mutable","name":"_paused","nameLocation":"672:7:14","nodeType":"VariableDeclaration","scope":2995,"src":"659:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2886,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"686:73:14","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2892,"name":"Paused","nameLocation":"770:6:14","nodeType":"EventDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:14","nodeType":"VariableDeclaration","scope":2892,"src":"777:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:14"},"src":"764:30:14"},{"anonymous":false,"documentation":{"id":2893,"nodeType":"StructuredDocumentation","src":"800:70:14","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2897,"name":"Unpaused","nameLocation":"881:8:14","nodeType":"EventDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:14","nodeType":"VariableDeclaration","scope":2897,"src":"890:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:14"},"src":"875:32:14"},{"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"913:76:14","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2900,"name":"EnforcedPause","nameLocation":"1000:13:14","nodeType":"ErrorDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[],"src":"1013:2:14"},"src":"994:22:14"},{"documentation":{"id":2901,"nodeType":"StructuredDocumentation","src":"1022:80:14","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2903,"name":"ExpectedPause","nameLocation":"1113:13:14","nodeType":"ErrorDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[],"src":"1126:2:14"},"src":"1107:22:14"},{"body":{"id":2911,"nodeType":"Block","src":"1221:32:14","statements":[{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2907,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"1231:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"ExpressionStatement","src":"1231:15:14"}]},"documentation":{"id":2904,"nodeType":"StructuredDocumentation","src":"1135:67:14","text":" @dev Initializes the contract in unpaused state."},"id":2912,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[],"src":"1218:2:14"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[],"src":"1221:0:14"},"scope":2995,"src":"1207:46:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"1464:47:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2915,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"1474:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"1474:19:14"},{"id":2918,"nodeType":"PlaceholderStatement","src":"1503:1:14"}]},"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"1259:175:14","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2920,"name":"whenNotPaused","nameLocation":"1448:13:14","nodeType":"ModifierDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[],"src":"1461:2:14"},"src":"1439:72:14","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"1711:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2923,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"1721:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2925,"nodeType":"ExpressionStatement","src":"1721:16:14"},{"id":2926,"nodeType":"PlaceholderStatement","src":"1747:1:14"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"1517:167:14","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2928,"name":"whenPaused","nameLocation":"1698:10:14","nodeType":"ModifierDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"1708:2:14"},"src":"1689:66:14","virtual":false,"visibility":"internal"},{"body":{"id":2936,"nodeType":"Block","src":"1903:31:14","statements":[{"expression":{"id":2934,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"1920:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2933,"id":2935,"nodeType":"Return","src":"1913:14:14"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"1761:84:14","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:14","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[],"src":"1865:2:14"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2937,"src":"1897:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2931,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:14"},"scope":2995,"src":"1850:84:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2948,"nodeType":"Block","src":"2053:77:14","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2941,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"2067:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"2063:61:14","trueBody":{"id":2946,"nodeType":"Block","src":"2077:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2943,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2098:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2945,"nodeType":"RevertStatement","src":"2091:22:14"}]}}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"1940:57:14","text":" @dev Throws if the contract is paused."},"id":2949,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:14","nodeType":"FunctionDefinition","parameters":{"id":2939,"nodeType":"ParameterList","parameters":[],"src":"2028:2:14"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[],"src":"2053:0:14"},"scope":2995,"src":"2002:128:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2961,"nodeType":"Block","src":"2250:78:14","statements":[{"condition":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2953,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"2265:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"nodeType":"IfStatement","src":"2260:62:14","trueBody":{"id":2959,"nodeType":"Block","src":"2275:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2956,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"2296:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2958,"nodeType":"RevertStatement","src":"2289:22:14"}]}}]},"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"2136:61:14","text":" @dev Throws if the contract is not paused."},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:14","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[],"src":"2225:2:14"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[],"src":"2250:0:14"},"scope":2995,"src":"2202:126:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"2512:66:14","statements":[{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2968,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"2522:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2971,"nodeType":"ExpressionStatement","src":"2522:14:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2973,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2558:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2972,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"2551:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"EmitStatement","src":"2546:25:14"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"2334:124:14","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2978,"implemented":true,"kind":"function","modifiers":[{"id":2966,"kind":"modifierInvocation","modifierName":{"id":2965,"name":"whenNotPaused","nameLocations":["2498:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2920,"src":"2498:13:14"},"nodeType":"ModifierInvocation","src":"2498:13:14"}],"name":"_pause","nameLocation":"2472:6:14","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[],"src":"2478:2:14"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[],"src":"2512:0:14"},"scope":2995,"src":"2463:115:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"2758:69:14","statements":[{"expression":{"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2984,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"2768:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2987,"nodeType":"ExpressionStatement","src":"2768:15:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2989,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2807:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2988,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"2798:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"EmitStatement","src":"2793:27:14"}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"2584:121:14","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2994,"implemented":true,"kind":"function","modifiers":[{"id":2982,"kind":"modifierInvocation","modifierName":{"id":2981,"name":"whenPaused","nameLocations":["2747:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2928,"src":"2747:10:14"},"nodeType":"ModifierInvocation","src":"2747:10:14"}],"name":"_unpause","nameLocation":"2719:8:14","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"2727:2:14"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[],"src":"2758:0:14"},"scope":2995,"src":"2710:117:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2996,"src":"615:2214:14","usedErrors":[2900,2903],"usedEvents":[2892,2897]}],"src":"102:2728:14"},"id":14},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3125]},"id":3126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2997,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"225:1372:15","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3125,"linearizedBaseContracts":[3125],"name":"SlotDerivation","nameLocation":"1606:14:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3007,"nodeType":"Block","src":"1789:194:15","statements":[{"AST":{"nativeSrc":"1824:153:15","nodeType":"YulBlock","src":"1824:153:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1845:4:15","nodeType":"YulLiteral","src":"1845:4:15","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1869:9:15","nodeType":"YulIdentifier","src":"1869:9:15"},{"kind":"number","nativeSrc":"1880:4:15","nodeType":"YulLiteral","src":"1880:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1865:3:15","nodeType":"YulIdentifier","src":"1865:3:15"},"nativeSrc":"1865:20:15","nodeType":"YulFunctionCall","src":"1865:20:15"},{"arguments":[{"name":"namespace","nativeSrc":"1893:9:15","nodeType":"YulIdentifier","src":"1893:9:15"}],"functionName":{"name":"mload","nativeSrc":"1887:5:15","nodeType":"YulIdentifier","src":"1887:5:15"},"nativeSrc":"1887:16:15","nodeType":"YulFunctionCall","src":"1887:16:15"}],"functionName":{"name":"keccak256","nativeSrc":"1855:9:15","nodeType":"YulIdentifier","src":"1855:9:15"},"nativeSrc":"1855:49:15","nodeType":"YulFunctionCall","src":"1855:49:15"},{"kind":"number","nativeSrc":"1906:1:15","nodeType":"YulLiteral","src":"1906:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1851:3:15","nodeType":"YulIdentifier","src":"1851:3:15"},"nativeSrc":"1851:57:15","nodeType":"YulFunctionCall","src":"1851:57:15"}],"functionName":{"name":"mstore","nativeSrc":"1838:6:15","nodeType":"YulIdentifier","src":"1838:6:15"},"nativeSrc":"1838:71:15","nodeType":"YulFunctionCall","src":"1838:71:15"},"nativeSrc":"1838:71:15","nodeType":"YulExpressionStatement","src":"1838:71:15"},{"nativeSrc":"1922:45:15","nodeType":"YulAssignment","src":"1922:45:15","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1944:4:15","nodeType":"YulLiteral","src":"1944:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1950:4:15","nodeType":"YulLiteral","src":"1950:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1934:9:15","nodeType":"YulIdentifier","src":"1934:9:15"},"nativeSrc":"1934:21:15","nodeType":"YulFunctionCall","src":"1934:21:15"},{"arguments":[{"kind":"number","nativeSrc":"1961:4:15","nodeType":"YulLiteral","src":"1961:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1957:3:15","nodeType":"YulIdentifier","src":"1957:3:15"},"nativeSrc":"1957:9:15","nodeType":"YulFunctionCall","src":"1957:9:15"}],"functionName":{"name":"and","nativeSrc":"1930:3:15","nodeType":"YulIdentifier","src":"1930:3:15"},"nativeSrc":"1930:37:15","nodeType":"YulFunctionCall","src":"1930:37:15"},"variableNames":[{"name":"slot","nativeSrc":"1922:4:15","nodeType":"YulIdentifier","src":"1922:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3001,"isOffset":false,"isSlot":false,"src":"1869:9:15","valueSize":1},{"declaration":3001,"isOffset":false,"isSlot":false,"src":"1893:9:15","valueSize":1},{"declaration":3004,"isOffset":false,"isSlot":false,"src":"1922:4:15","valueSize":1}],"flags":["memory-safe"],"id":3006,"nodeType":"InlineAssembly","src":"1799:178:15"}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"1627:74:15","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3008,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:15","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:15","nodeType":"VariableDeclaration","scope":3008,"src":"1727:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3000,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:15"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"slot","nameLocation":"1783:4:15","nodeType":"VariableDeclaration","scope":3008,"src":"1775:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:15"},"scope":3125,"src":"1706:277:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"2175:86:15","statements":[{"id":3028,"nodeType":"UncheckedBlock","src":"2185:70:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3022,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"2232:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:15","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3024,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"2240:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:15","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3017,"id":3027,"nodeType":"Return","src":"2209:35:15"}]}]},"documentation":{"id":3009,"nodeType":"StructuredDocumentation","src":"1989:99:15","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:15","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"slot","nameLocation":"2117:4:15","nodeType":"VariableDeclaration","scope":3030,"src":"2109:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"pos","nameLocation":"2131:3:15","nodeType":"VariableDeclaration","scope":3030,"src":"2123:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:15"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"result","nameLocation":"2167:6:15","nodeType":"VariableDeclaration","scope":3030,"src":"2159:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:15"},"scope":3125,"src":"2093:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3039,"nodeType":"Block","src":"2464:127:15","statements":[{"AST":{"nativeSrc":"2499:86:15","nodeType":"YulBlock","src":"2499:86:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2520:4:15","nodeType":"YulLiteral","src":"2520:4:15","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2526:4:15","nodeType":"YulIdentifier","src":"2526:4:15"}],"functionName":{"name":"mstore","nativeSrc":"2513:6:15","nodeType":"YulIdentifier","src":"2513:6:15"},"nativeSrc":"2513:18:15","nodeType":"YulFunctionCall","src":"2513:18:15"},"nativeSrc":"2513:18:15","nodeType":"YulExpressionStatement","src":"2513:18:15"},{"nativeSrc":"2544:31:15","nodeType":"YulAssignment","src":"2544:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"2564:4:15","nodeType":"YulLiteral","src":"2564:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2570:4:15","nodeType":"YulLiteral","src":"2570:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2554:9:15","nodeType":"YulIdentifier","src":"2554:9:15"},"nativeSrc":"2554:21:15","nodeType":"YulFunctionCall","src":"2554:21:15"},"variableNames":[{"name":"result","nativeSrc":"2544:6:15","nodeType":"YulIdentifier","src":"2544:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3036,"isOffset":false,"isSlot":false,"src":"2544:6:15","valueSize":1},{"declaration":3033,"isOffset":false,"isSlot":false,"src":"2526:4:15","valueSize":1}],"flags":["memory-safe"],"id":3038,"nodeType":"InlineAssembly","src":"2474:111:15"}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"2267:118:15","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3040,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:15","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"slot","nameLocation":"2419:4:15","nodeType":"VariableDeclaration","scope":3040,"src":"2411:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:15"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"result","nameLocation":"2456:6:15","nodeType":"VariableDeclaration","scope":3040,"src":"2448:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:15"},"scope":3125,"src":"2390:201:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3051,"nodeType":"Block","src":"2769:179:15","statements":[{"AST":{"nativeSrc":"2804:138:15","nodeType":"YulBlock","src":"2804:138:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2825:4:15","nodeType":"YulLiteral","src":"2825:4:15","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2835:3:15","nodeType":"YulIdentifier","src":"2835:3:15"},{"arguments":[{"kind":"number","nativeSrc":"2844:2:15","nodeType":"YulLiteral","src":"2844:2:15","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2852:1:15","nodeType":"YulLiteral","src":"2852:1:15","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2848:3:15","nodeType":"YulIdentifier","src":"2848:3:15"},"nativeSrc":"2848:6:15","nodeType":"YulFunctionCall","src":"2848:6:15"}],"functionName":{"name":"shr","nativeSrc":"2840:3:15","nodeType":"YulIdentifier","src":"2840:3:15"},"nativeSrc":"2840:15:15","nodeType":"YulFunctionCall","src":"2840:15:15"}],"functionName":{"name":"and","nativeSrc":"2831:3:15","nodeType":"YulIdentifier","src":"2831:3:15"},"nativeSrc":"2831:25:15","nodeType":"YulFunctionCall","src":"2831:25:15"}],"functionName":{"name":"mstore","nativeSrc":"2818:6:15","nodeType":"YulIdentifier","src":"2818:6:15"},"nativeSrc":"2818:39:15","nodeType":"YulFunctionCall","src":"2818:39:15"},"nativeSrc":"2818:39:15","nodeType":"YulExpressionStatement","src":"2818:39:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2877:4:15","nodeType":"YulLiteral","src":"2877:4:15","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2883:4:15","nodeType":"YulIdentifier","src":"2883:4:15"}],"functionName":{"name":"mstore","nativeSrc":"2870:6:15","nodeType":"YulIdentifier","src":"2870:6:15"},"nativeSrc":"2870:18:15","nodeType":"YulFunctionCall","src":"2870:18:15"},"nativeSrc":"2870:18:15","nodeType":"YulExpressionStatement","src":"2870:18:15"},{"nativeSrc":"2901:31:15","nodeType":"YulAssignment","src":"2901:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"2921:4:15","nodeType":"YulLiteral","src":"2921:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2927:4:15","nodeType":"YulLiteral","src":"2927:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2911:9:15","nodeType":"YulIdentifier","src":"2911:9:15"},"nativeSrc":"2911:21:15","nodeType":"YulFunctionCall","src":"2911:21:15"},"variableNames":[{"name":"result","nativeSrc":"2901:6:15","nodeType":"YulIdentifier","src":"2901:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3045,"isOffset":false,"isSlot":false,"src":"2835:3:15","valueSize":1},{"declaration":3048,"isOffset":false,"isSlot":false,"src":"2901:6:15","valueSize":1},{"declaration":3043,"isOffset":false,"isSlot":false,"src":"2883:4:15","valueSize":1}],"flags":["memory-safe"],"id":3050,"nodeType":"InlineAssembly","src":"2779:163:15"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"2597:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3052,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:15","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":3052,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"key","nameLocation":"2725:3:15","nodeType":"VariableDeclaration","scope":3052,"src":"2717:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:15"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"result","nameLocation":"2761:6:15","nodeType":"VariableDeclaration","scope":3052,"src":"2753:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:15"},"scope":3125,"src":"2680:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3063,"nodeType":"Block","src":"3123:173:15","statements":[{"AST":{"nativeSrc":"3158:132:15","nodeType":"YulBlock","src":"3158:132:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3179:4:15","nodeType":"YulLiteral","src":"3179:4:15","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3199:3:15","nodeType":"YulIdentifier","src":"3199:3:15"}],"functionName":{"name":"iszero","nativeSrc":"3192:6:15","nodeType":"YulIdentifier","src":"3192:6:15"},"nativeSrc":"3192:11:15","nodeType":"YulFunctionCall","src":"3192:11:15"}],"functionName":{"name":"iszero","nativeSrc":"3185:6:15","nodeType":"YulIdentifier","src":"3185:6:15"},"nativeSrc":"3185:19:15","nodeType":"YulFunctionCall","src":"3185:19:15"}],"functionName":{"name":"mstore","nativeSrc":"3172:6:15","nodeType":"YulIdentifier","src":"3172:6:15"},"nativeSrc":"3172:33:15","nodeType":"YulFunctionCall","src":"3172:33:15"},"nativeSrc":"3172:33:15","nodeType":"YulExpressionStatement","src":"3172:33:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3225:4:15","nodeType":"YulLiteral","src":"3225:4:15","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3231:4:15","nodeType":"YulIdentifier","src":"3231:4:15"}],"functionName":{"name":"mstore","nativeSrc":"3218:6:15","nodeType":"YulIdentifier","src":"3218:6:15"},"nativeSrc":"3218:18:15","nodeType":"YulFunctionCall","src":"3218:18:15"},"nativeSrc":"3218:18:15","nodeType":"YulExpressionStatement","src":"3218:18:15"},{"nativeSrc":"3249:31:15","nodeType":"YulAssignment","src":"3249:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"3269:4:15","nodeType":"YulLiteral","src":"3269:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3275:4:15","nodeType":"YulLiteral","src":"3275:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3259:9:15","nodeType":"YulIdentifier","src":"3259:9:15"},"nativeSrc":"3259:21:15","nodeType":"YulFunctionCall","src":"3259:21:15"},"variableNames":[{"name":"result","nativeSrc":"3249:6:15","nodeType":"YulIdentifier","src":"3249:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3057,"isOffset":false,"isSlot":false,"src":"3199:3:15","valueSize":1},{"declaration":3060,"isOffset":false,"isSlot":false,"src":"3249:6:15","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3231:4:15","valueSize":1}],"flags":["memory-safe"],"id":3062,"nodeType":"InlineAssembly","src":"3133:157:15"}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"2954:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:15","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"slot","nameLocation":"3068:4:15","nodeType":"VariableDeclaration","scope":3064,"src":"3060:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"key","nameLocation":"3079:3:15","nodeType":"VariableDeclaration","scope":3064,"src":"3074:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3056,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:15"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"result","nameLocation":"3115:6:15","nodeType":"VariableDeclaration","scope":3064,"src":"3107:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:15"},"scope":3125,"src":"3037:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3075,"nodeType":"Block","src":"3474:157:15","statements":[{"AST":{"nativeSrc":"3509:116:15","nodeType":"YulBlock","src":"3509:116:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3530:4:15","nodeType":"YulLiteral","src":"3530:4:15","type":"","value":"0x00"},{"name":"key","nativeSrc":"3536:3:15","nodeType":"YulIdentifier","src":"3536:3:15"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:15","nodeType":"YulIdentifier","src":"3523:6:15"},"nativeSrc":"3523:17:15","nodeType":"YulFunctionCall","src":"3523:17:15"},"nativeSrc":"3523:17:15","nodeType":"YulExpressionStatement","src":"3523:17:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3560:4:15","nodeType":"YulLiteral","src":"3560:4:15","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3566:4:15","nodeType":"YulIdentifier","src":"3566:4:15"}],"functionName":{"name":"mstore","nativeSrc":"3553:6:15","nodeType":"YulIdentifier","src":"3553:6:15"},"nativeSrc":"3553:18:15","nodeType":"YulFunctionCall","src":"3553:18:15"},"nativeSrc":"3553:18:15","nodeType":"YulExpressionStatement","src":"3553:18:15"},{"nativeSrc":"3584:31:15","nodeType":"YulAssignment","src":"3584:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"3604:4:15","nodeType":"YulLiteral","src":"3604:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3610:4:15","nodeType":"YulLiteral","src":"3610:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3594:9:15","nodeType":"YulIdentifier","src":"3594:9:15"},"nativeSrc":"3594:21:15","nodeType":"YulFunctionCall","src":"3594:21:15"},"variableNames":[{"name":"result","nativeSrc":"3584:6:15","nodeType":"YulIdentifier","src":"3584:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3536:3:15","valueSize":1},{"declaration":3072,"isOffset":false,"isSlot":false,"src":"3584:6:15","valueSize":1},{"declaration":3067,"isOffset":false,"isSlot":false,"src":"3566:4:15","valueSize":1}],"flags":["memory-safe"],"id":3074,"nodeType":"InlineAssembly","src":"3484:141:15"}]},"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"3302:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3076,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:15","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"slot","nameLocation":"3416:4:15","nodeType":"VariableDeclaration","scope":3076,"src":"3408:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"key","nameLocation":"3430:3:15","nodeType":"VariableDeclaration","scope":3076,"src":"3422:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:15"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"result","nameLocation":"3466:6:15","nodeType":"VariableDeclaration","scope":3076,"src":"3458:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:15"},"scope":3125,"src":"3385:246:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"3809:157:15","statements":[{"AST":{"nativeSrc":"3844:116:15","nodeType":"YulBlock","src":"3844:116:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3865:4:15","nodeType":"YulLiteral","src":"3865:4:15","type":"","value":"0x00"},{"name":"key","nativeSrc":"3871:3:15","nodeType":"YulIdentifier","src":"3871:3:15"}],"functionName":{"name":"mstore","nativeSrc":"3858:6:15","nodeType":"YulIdentifier","src":"3858:6:15"},"nativeSrc":"3858:17:15","nodeType":"YulFunctionCall","src":"3858:17:15"},"nativeSrc":"3858:17:15","nodeType":"YulExpressionStatement","src":"3858:17:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3895:4:15","nodeType":"YulLiteral","src":"3895:4:15","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3901:4:15","nodeType":"YulIdentifier","src":"3901:4:15"}],"functionName":{"name":"mstore","nativeSrc":"3888:6:15","nodeType":"YulIdentifier","src":"3888:6:15"},"nativeSrc":"3888:18:15","nodeType":"YulFunctionCall","src":"3888:18:15"},"nativeSrc":"3888:18:15","nodeType":"YulExpressionStatement","src":"3888:18:15"},{"nativeSrc":"3919:31:15","nodeType":"YulAssignment","src":"3919:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"3939:4:15","nodeType":"YulLiteral","src":"3939:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3945:4:15","nodeType":"YulLiteral","src":"3945:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:15","nodeType":"YulIdentifier","src":"3929:9:15"},"nativeSrc":"3929:21:15","nodeType":"YulFunctionCall","src":"3929:21:15"},"variableNames":[{"name":"result","nativeSrc":"3919:6:15","nodeType":"YulIdentifier","src":"3919:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3081,"isOffset":false,"isSlot":false,"src":"3871:3:15","valueSize":1},{"declaration":3084,"isOffset":false,"isSlot":false,"src":"3919:6:15","valueSize":1},{"declaration":3079,"isOffset":false,"isSlot":false,"src":"3901:4:15","valueSize":1}],"flags":["memory-safe"],"id":3086,"nodeType":"InlineAssembly","src":"3819:141:15"}]},"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"3637:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:15","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"slot","nameLocation":"3751:4:15","nodeType":"VariableDeclaration","scope":3088,"src":"3743:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"key","nameLocation":"3765:3:15","nodeType":"VariableDeclaration","scope":3088,"src":"3757:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:15"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"result","nameLocation":"3801:6:15","nodeType":"VariableDeclaration","scope":3088,"src":"3793:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:15"},"scope":3125,"src":"3720:246:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"4143:157:15","statements":[{"AST":{"nativeSrc":"4178:116:15","nodeType":"YulBlock","src":"4178:116:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4199:4:15","nodeType":"YulLiteral","src":"4199:4:15","type":"","value":"0x00"},{"name":"key","nativeSrc":"4205:3:15","nodeType":"YulIdentifier","src":"4205:3:15"}],"functionName":{"name":"mstore","nativeSrc":"4192:6:15","nodeType":"YulIdentifier","src":"4192:6:15"},"nativeSrc":"4192:17:15","nodeType":"YulFunctionCall","src":"4192:17:15"},"nativeSrc":"4192:17:15","nodeType":"YulExpressionStatement","src":"4192:17:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4229:4:15","nodeType":"YulLiteral","src":"4229:4:15","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4235:4:15","nodeType":"YulIdentifier","src":"4235:4:15"}],"functionName":{"name":"mstore","nativeSrc":"4222:6:15","nodeType":"YulIdentifier","src":"4222:6:15"},"nativeSrc":"4222:18:15","nodeType":"YulFunctionCall","src":"4222:18:15"},"nativeSrc":"4222:18:15","nodeType":"YulExpressionStatement","src":"4222:18:15"},{"nativeSrc":"4253:31:15","nodeType":"YulAssignment","src":"4253:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"4273:4:15","nodeType":"YulLiteral","src":"4273:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4279:4:15","nodeType":"YulLiteral","src":"4279:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4263:9:15","nodeType":"YulIdentifier","src":"4263:9:15"},"nativeSrc":"4263:21:15","nodeType":"YulFunctionCall","src":"4263:21:15"},"variableNames":[{"name":"result","nativeSrc":"4253:6:15","nodeType":"YulIdentifier","src":"4253:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3093,"isOffset":false,"isSlot":false,"src":"4205:3:15","valueSize":1},{"declaration":3096,"isOffset":false,"isSlot":false,"src":"4253:6:15","valueSize":1},{"declaration":3091,"isOffset":false,"isSlot":false,"src":"4235:4:15","valueSize":1}],"flags":["memory-safe"],"id":3098,"nodeType":"InlineAssembly","src":"4153:141:15"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"3972:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:15","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"slot","nameLocation":"4086:4:15","nodeType":"VariableDeclaration","scope":3100,"src":"4078:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"key","nameLocation":"4099:3:15","nodeType":"VariableDeclaration","scope":3100,"src":"4092:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3092,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:15"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"result","nameLocation":"4135:6:15","nodeType":"VariableDeclaration","scope":3100,"src":"4127:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:15"},"scope":3125,"src":"4055:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"4484:326:15","statements":[{"AST":{"nativeSrc":"4519:285:15","nodeType":"YulBlock","src":"4519:285:15","statements":[{"nativeSrc":"4533:24:15","nodeType":"YulVariableDeclaration","src":"4533:24:15","value":{"arguments":[{"name":"key","nativeSrc":"4553:3:15","nodeType":"YulIdentifier","src":"4553:3:15"}],"functionName":{"name":"mload","nativeSrc":"4547:5:15","nodeType":"YulIdentifier","src":"4547:5:15"},"nativeSrc":"4547:10:15","nodeType":"YulFunctionCall","src":"4547:10:15"},"variables":[{"name":"length","nativeSrc":"4537:6:15","nodeType":"YulTypedName","src":"4537:6:15","type":""}]},{"nativeSrc":"4570:27:15","nodeType":"YulVariableDeclaration","src":"4570:27:15","value":{"arguments":[{"name":"key","nativeSrc":"4587:3:15","nodeType":"YulIdentifier","src":"4587:3:15"},{"kind":"number","nativeSrc":"4592:4:15","nodeType":"YulLiteral","src":"4592:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4583:3:15","nodeType":"YulIdentifier","src":"4583:3:15"},"nativeSrc":"4583:14:15","nodeType":"YulFunctionCall","src":"4583:14:15"},"variables":[{"name":"begin","nativeSrc":"4574:5:15","nodeType":"YulTypedName","src":"4574:5:15","type":""}]},{"nativeSrc":"4610:29:15","nodeType":"YulVariableDeclaration","src":"4610:29:15","value":{"arguments":[{"name":"begin","nativeSrc":"4625:5:15","nodeType":"YulIdentifier","src":"4625:5:15"},{"name":"length","nativeSrc":"4632:6:15","nodeType":"YulIdentifier","src":"4632:6:15"}],"functionName":{"name":"add","nativeSrc":"4621:3:15","nodeType":"YulIdentifier","src":"4621:3:15"},"nativeSrc":"4621:18:15","nodeType":"YulFunctionCall","src":"4621:18:15"},"variables":[{"name":"end","nativeSrc":"4614:3:15","nodeType":"YulTypedName","src":"4614:3:15","type":""}]},{"nativeSrc":"4652:23:15","nodeType":"YulVariableDeclaration","src":"4652:23:15","value":{"arguments":[{"name":"end","nativeSrc":"4671:3:15","nodeType":"YulIdentifier","src":"4671:3:15"}],"functionName":{"name":"mload","nativeSrc":"4665:5:15","nodeType":"YulIdentifier","src":"4665:5:15"},"nativeSrc":"4665:10:15","nodeType":"YulFunctionCall","src":"4665:10:15"},"variables":[{"name":"cache","nativeSrc":"4656:5:15","nodeType":"YulTypedName","src":"4656:5:15","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4695:3:15","nodeType":"YulIdentifier","src":"4695:3:15"},{"name":"slot","nativeSrc":"4700:4:15","nodeType":"YulIdentifier","src":"4700:4:15"}],"functionName":{"name":"mstore","nativeSrc":"4688:6:15","nodeType":"YulIdentifier","src":"4688:6:15"},"nativeSrc":"4688:17:15","nodeType":"YulFunctionCall","src":"4688:17:15"},"nativeSrc":"4688:17:15","nodeType":"YulExpressionStatement","src":"4688:17:15"},{"nativeSrc":"4718:45:15","nodeType":"YulAssignment","src":"4718:45:15","value":{"arguments":[{"name":"begin","nativeSrc":"4738:5:15","nodeType":"YulIdentifier","src":"4738:5:15"},{"arguments":[{"name":"length","nativeSrc":"4749:6:15","nodeType":"YulIdentifier","src":"4749:6:15"},{"kind":"number","nativeSrc":"4757:4:15","nodeType":"YulLiteral","src":"4757:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4745:3:15","nodeType":"YulIdentifier","src":"4745:3:15"},"nativeSrc":"4745:17:15","nodeType":"YulFunctionCall","src":"4745:17:15"}],"functionName":{"name":"keccak256","nativeSrc":"4728:9:15","nodeType":"YulIdentifier","src":"4728:9:15"},"nativeSrc":"4728:35:15","nodeType":"YulFunctionCall","src":"4728:35:15"},"variableNames":[{"name":"result","nativeSrc":"4718:6:15","nodeType":"YulIdentifier","src":"4718:6:15"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4783:3:15","nodeType":"YulIdentifier","src":"4783:3:15"},{"name":"cache","nativeSrc":"4788:5:15","nodeType":"YulIdentifier","src":"4788:5:15"}],"functionName":{"name":"mstore","nativeSrc":"4776:6:15","nodeType":"YulIdentifier","src":"4776:6:15"},"nativeSrc":"4776:18:15","nodeType":"YulFunctionCall","src":"4776:18:15"},"nativeSrc":"4776:18:15","nodeType":"YulExpressionStatement","src":"4776:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3105,"isOffset":false,"isSlot":false,"src":"4553:3:15","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"4587:3:15","valueSize":1},{"declaration":3108,"isOffset":false,"isSlot":false,"src":"4718:6:15","valueSize":1},{"declaration":3103,"isOffset":false,"isSlot":false,"src":"4700:4:15","valueSize":1}],"flags":["memory-safe"],"id":3110,"nodeType":"InlineAssembly","src":"4494:310:15"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"4306:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:15","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"slot","nameLocation":"4420:4:15","nodeType":"VariableDeclaration","scope":3112,"src":"4412:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"key","nameLocation":"4440:3:15","nodeType":"VariableDeclaration","scope":3112,"src":"4426:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3104,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:15"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"result","nameLocation":"4476:6:15","nodeType":"VariableDeclaration","scope":3112,"src":"4468:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:15"},"scope":3125,"src":"4389:421:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"4993:326:15","statements":[{"AST":{"nativeSrc":"5028:285:15","nodeType":"YulBlock","src":"5028:285:15","statements":[{"nativeSrc":"5042:24:15","nodeType":"YulVariableDeclaration","src":"5042:24:15","value":{"arguments":[{"name":"key","nativeSrc":"5062:3:15","nodeType":"YulIdentifier","src":"5062:3:15"}],"functionName":{"name":"mload","nativeSrc":"5056:5:15","nodeType":"YulIdentifier","src":"5056:5:15"},"nativeSrc":"5056:10:15","nodeType":"YulFunctionCall","src":"5056:10:15"},"variables":[{"name":"length","nativeSrc":"5046:6:15","nodeType":"YulTypedName","src":"5046:6:15","type":""}]},{"nativeSrc":"5079:27:15","nodeType":"YulVariableDeclaration","src":"5079:27:15","value":{"arguments":[{"name":"key","nativeSrc":"5096:3:15","nodeType":"YulIdentifier","src":"5096:3:15"},{"kind":"number","nativeSrc":"5101:4:15","nodeType":"YulLiteral","src":"5101:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5092:3:15","nodeType":"YulIdentifier","src":"5092:3:15"},"nativeSrc":"5092:14:15","nodeType":"YulFunctionCall","src":"5092:14:15"},"variables":[{"name":"begin","nativeSrc":"5083:5:15","nodeType":"YulTypedName","src":"5083:5:15","type":""}]},{"nativeSrc":"5119:29:15","nodeType":"YulVariableDeclaration","src":"5119:29:15","value":{"arguments":[{"name":"begin","nativeSrc":"5134:5:15","nodeType":"YulIdentifier","src":"5134:5:15"},{"name":"length","nativeSrc":"5141:6:15","nodeType":"YulIdentifier","src":"5141:6:15"}],"functionName":{"name":"add","nativeSrc":"5130:3:15","nodeType":"YulIdentifier","src":"5130:3:15"},"nativeSrc":"5130:18:15","nodeType":"YulFunctionCall","src":"5130:18:15"},"variables":[{"name":"end","nativeSrc":"5123:3:15","nodeType":"YulTypedName","src":"5123:3:15","type":""}]},{"nativeSrc":"5161:23:15","nodeType":"YulVariableDeclaration","src":"5161:23:15","value":{"arguments":[{"name":"end","nativeSrc":"5180:3:15","nodeType":"YulIdentifier","src":"5180:3:15"}],"functionName":{"name":"mload","nativeSrc":"5174:5:15","nodeType":"YulIdentifier","src":"5174:5:15"},"nativeSrc":"5174:10:15","nodeType":"YulFunctionCall","src":"5174:10:15"},"variables":[{"name":"cache","nativeSrc":"5165:5:15","nodeType":"YulTypedName","src":"5165:5:15","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5204:3:15","nodeType":"YulIdentifier","src":"5204:3:15"},{"name":"slot","nativeSrc":"5209:4:15","nodeType":"YulIdentifier","src":"5209:4:15"}],"functionName":{"name":"mstore","nativeSrc":"5197:6:15","nodeType":"YulIdentifier","src":"5197:6:15"},"nativeSrc":"5197:17:15","nodeType":"YulFunctionCall","src":"5197:17:15"},"nativeSrc":"5197:17:15","nodeType":"YulExpressionStatement","src":"5197:17:15"},{"nativeSrc":"5227:45:15","nodeType":"YulAssignment","src":"5227:45:15","value":{"arguments":[{"name":"begin","nativeSrc":"5247:5:15","nodeType":"YulIdentifier","src":"5247:5:15"},{"arguments":[{"name":"length","nativeSrc":"5258:6:15","nodeType":"YulIdentifier","src":"5258:6:15"},{"kind":"number","nativeSrc":"5266:4:15","nodeType":"YulLiteral","src":"5266:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5254:3:15","nodeType":"YulIdentifier","src":"5254:3:15"},"nativeSrc":"5254:17:15","nodeType":"YulFunctionCall","src":"5254:17:15"}],"functionName":{"name":"keccak256","nativeSrc":"5237:9:15","nodeType":"YulIdentifier","src":"5237:9:15"},"nativeSrc":"5237:35:15","nodeType":"YulFunctionCall","src":"5237:35:15"},"variableNames":[{"name":"result","nativeSrc":"5227:6:15","nodeType":"YulIdentifier","src":"5227:6:15"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5292:3:15","nodeType":"YulIdentifier","src":"5292:3:15"},{"name":"cache","nativeSrc":"5297:5:15","nodeType":"YulIdentifier","src":"5297:5:15"}],"functionName":{"name":"mstore","nativeSrc":"5285:6:15","nodeType":"YulIdentifier","src":"5285:6:15"},"nativeSrc":"5285:18:15","nodeType":"YulFunctionCall","src":"5285:18:15"},"nativeSrc":"5285:18:15","nodeType":"YulExpressionStatement","src":"5285:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3117,"isOffset":false,"isSlot":false,"src":"5062:3:15","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"5096:3:15","valueSize":1},{"declaration":3120,"isOffset":false,"isSlot":false,"src":"5227:6:15","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"5209:4:15","valueSize":1}],"flags":["memory-safe"],"id":3122,"nodeType":"InlineAssembly","src":"5003:310:15"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"4816:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:15","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"slot","nameLocation":"4930:4:15","nodeType":"VariableDeclaration","scope":3124,"src":"4922:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"key","nameLocation":"4949:3:15","nodeType":"VariableDeclaration","scope":3124,"src":"4936:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3116,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:15"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"result","nameLocation":"4985:6:15","nodeType":"VariableDeclaration","scope":3124,"src":"4977:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:15"},"scope":3125,"src":"4899:420:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3126,"src":"1598:3723:15","usedErrors":[],"usedEvents":[]}],"src":"199:5123:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3249]},"id":3250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3127,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"219:1187:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3249,"linearizedBaseContracts":[3249],"name":"StorageSlot","nameLocation":"1415:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3131,"members":[{"constant":false,"id":3130,"mutability":"mutable","name":"value","nameLocation":"1470:5:16","nodeType":"VariableDeclaration","scope":3131,"src":"1462:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:16","nodeType":"StructDefinition","scope":3249,"src":"1433:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3134,"members":[{"constant":false,"id":3133,"mutability":"mutable","name":"value","nameLocation":"1522:5:16","nodeType":"VariableDeclaration","scope":3134,"src":"1517:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3132,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:16","nodeType":"StructDefinition","scope":3249,"src":"1488:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3137,"members":[{"constant":false,"id":3136,"mutability":"mutable","name":"value","nameLocation":"1577:5:16","nodeType":"VariableDeclaration","scope":3137,"src":"1569:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:16","nodeType":"StructDefinition","scope":3249,"src":"1540:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3140,"members":[{"constant":false,"id":3139,"mutability":"mutable","name":"value","nameLocation":"1632:5:16","nodeType":"VariableDeclaration","scope":3140,"src":"1624:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:16","nodeType":"StructDefinition","scope":3249,"src":"1595:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3143,"members":[{"constant":false,"id":3142,"mutability":"mutable","name":"value","nameLocation":"1685:5:16","nodeType":"VariableDeclaration","scope":3143,"src":"1678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3141,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:16","nodeType":"StructDefinition","scope":3249,"src":"1650:47:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3146,"members":[{"constant":false,"id":3145,"mutability":"mutable","name":"value","nameLocation":"1738:5:16","nodeType":"VariableDeclaration","scope":3146,"src":"1731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3144,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:16","nodeType":"StructDefinition","scope":3249,"src":"1703:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3149,"members":[{"constant":false,"id":3148,"mutability":"mutable","name":"value","nameLocation":"1789:5:16","nodeType":"VariableDeclaration","scope":3149,"src":"1783:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3147,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:16","nodeType":"StructDefinition","scope":3249,"src":"1756:45:16","visibility":"public"},{"body":{"id":3159,"nodeType":"Block","src":"1983:79:16","statements":[{"AST":{"nativeSrc":"2018:38:16","nodeType":"YulBlock","src":"2018:38:16","statements":[{"nativeSrc":"2032:14:16","nodeType":"YulAssignment","src":"2032:14:16","value":{"name":"slot","nativeSrc":"2042:4:16","nodeType":"YulIdentifier","src":"2042:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:16","nodeType":"YulIdentifier","src":"2032:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3156,"isOffset":false,"isSlot":true,"src":"2032:6:16","suffix":"slot","valueSize":1},{"declaration":3152,"isOffset":false,"isSlot":false,"src":"2042:4:16","valueSize":1}],"flags":["memory-safe"],"id":3158,"nodeType":"InlineAssembly","src":"1993:63:16"}]},"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"1807:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:16","nodeType":"FunctionDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"slot","nameLocation":"1931:4:16","nodeType":"VariableDeclaration","scope":3160,"src":"1923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:16"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"r","nameLocation":"1980:1:16","nodeType":"VariableDeclaration","scope":3160,"src":"1960:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3131_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3155,"nodeType":"UserDefinedTypeName","pathNode":{"id":3154,"name":"AddressSlot","nameLocations":["1960:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3131,"src":"1960:11:16"},"referencedDeclaration":3131,"src":"1960:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3131_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:16"},"scope":3249,"src":"1899:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"2243:79:16","statements":[{"AST":{"nativeSrc":"2278:38:16","nodeType":"YulBlock","src":"2278:38:16","statements":[{"nativeSrc":"2292:14:16","nodeType":"YulAssignment","src":"2292:14:16","value":{"name":"slot","nativeSrc":"2302:4:16","nodeType":"YulIdentifier","src":"2302:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:16","nodeType":"YulIdentifier","src":"2292:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3167,"isOffset":false,"isSlot":true,"src":"2292:6:16","suffix":"slot","valueSize":1},{"declaration":3163,"isOffset":false,"isSlot":false,"src":"2302:4:16","valueSize":1}],"flags":["memory-safe"],"id":3169,"nodeType":"InlineAssembly","src":"2253:63:16"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"2068:86:16","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:16","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"slot","nameLocation":"2191:4:16","nodeType":"VariableDeclaration","scope":3171,"src":"2183:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:16"},"returnParameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"r","nameLocation":"2240:1:16","nodeType":"VariableDeclaration","scope":3171,"src":"2220:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3134_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3166,"nodeType":"UserDefinedTypeName","pathNode":{"id":3165,"name":"BooleanSlot","nameLocations":["2220:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3134,"src":"2220:11:16"},"referencedDeclaration":3134,"src":"2220:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3134_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:16"},"scope":3249,"src":"2159:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"2503:79:16","statements":[{"AST":{"nativeSrc":"2538:38:16","nodeType":"YulBlock","src":"2538:38:16","statements":[{"nativeSrc":"2552:14:16","nodeType":"YulAssignment","src":"2552:14:16","value":{"name":"slot","nativeSrc":"2562:4:16","nodeType":"YulIdentifier","src":"2562:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:16","nodeType":"YulIdentifier","src":"2552:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3178,"isOffset":false,"isSlot":true,"src":"2552:6:16","suffix":"slot","valueSize":1},{"declaration":3174,"isOffset":false,"isSlot":false,"src":"2562:4:16","valueSize":1}],"flags":["memory-safe"],"id":3180,"nodeType":"InlineAssembly","src":"2513:63:16"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"2328:86:16","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:16","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"slot","nameLocation":"2451:4:16","nodeType":"VariableDeclaration","scope":3182,"src":"2443:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:16"},"returnParameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"r","nameLocation":"2500:1:16","nodeType":"VariableDeclaration","scope":3182,"src":"2480:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3137_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3177,"nodeType":"UserDefinedTypeName","pathNode":{"id":3176,"name":"Bytes32Slot","nameLocations":["2480:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3137,"src":"2480:11:16"},"referencedDeclaration":3137,"src":"2480:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3137_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:16"},"scope":3249,"src":"2419:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"2763:79:16","statements":[{"AST":{"nativeSrc":"2798:38:16","nodeType":"YulBlock","src":"2798:38:16","statements":[{"nativeSrc":"2812:14:16","nodeType":"YulAssignment","src":"2812:14:16","value":{"name":"slot","nativeSrc":"2822:4:16","nodeType":"YulIdentifier","src":"2822:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:16","nodeType":"YulIdentifier","src":"2812:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3189,"isOffset":false,"isSlot":true,"src":"2812:6:16","suffix":"slot","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"2822:4:16","valueSize":1}],"flags":["memory-safe"],"id":3191,"nodeType":"InlineAssembly","src":"2773:63:16"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"2588:86:16","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:16","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"slot","nameLocation":"2711:4:16","nodeType":"VariableDeclaration","scope":3193,"src":"2703:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:16"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"r","nameLocation":"2760:1:16","nodeType":"VariableDeclaration","scope":3193,"src":"2740:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"Uint256Slot","nameLocations":["2740:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3140,"src":"2740:11:16"},"referencedDeclaration":3140,"src":"2740:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3140_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:16"},"scope":3249,"src":"2679:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3203,"nodeType":"Block","src":"3020:79:16","statements":[{"AST":{"nativeSrc":"3055:38:16","nodeType":"YulBlock","src":"3055:38:16","statements":[{"nativeSrc":"3069:14:16","nodeType":"YulAssignment","src":"3069:14:16","value":{"name":"slot","nativeSrc":"3079:4:16","nodeType":"YulIdentifier","src":"3079:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:16","nodeType":"YulIdentifier","src":"3069:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3200,"isOffset":false,"isSlot":true,"src":"3069:6:16","suffix":"slot","valueSize":1},{"declaration":3196,"isOffset":false,"isSlot":false,"src":"3079:4:16","valueSize":1}],"flags":["memory-safe"],"id":3202,"nodeType":"InlineAssembly","src":"3030:63:16"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"2848:85:16","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3204,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:16","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"slot","nameLocation":"2969:4:16","nodeType":"VariableDeclaration","scope":3204,"src":"2961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:16"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"r","nameLocation":"3017:1:16","nodeType":"VariableDeclaration","scope":3204,"src":"2998:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3143_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3199,"nodeType":"UserDefinedTypeName","pathNode":{"id":3198,"name":"Int256Slot","nameLocations":["2998:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"2998:10:16"},"referencedDeclaration":3143,"src":"2998:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3143_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:16"},"scope":3249,"src":"2938:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3214,"nodeType":"Block","src":"3277:79:16","statements":[{"AST":{"nativeSrc":"3312:38:16","nodeType":"YulBlock","src":"3312:38:16","statements":[{"nativeSrc":"3326:14:16","nodeType":"YulAssignment","src":"3326:14:16","value":{"name":"slot","nativeSrc":"3336:4:16","nodeType":"YulIdentifier","src":"3336:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:16","nodeType":"YulIdentifier","src":"3326:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3211,"isOffset":false,"isSlot":true,"src":"3326:6:16","suffix":"slot","valueSize":1},{"declaration":3207,"isOffset":false,"isSlot":false,"src":"3336:4:16","valueSize":1}],"flags":["memory-safe"],"id":3213,"nodeType":"InlineAssembly","src":"3287:63:16"}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"3105:85:16","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3215,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:16","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"slot","nameLocation":"3226:4:16","nodeType":"VariableDeclaration","scope":3215,"src":"3218:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:16"},"returnParameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"r","nameLocation":"3274:1:16","nodeType":"VariableDeclaration","scope":3215,"src":"3255:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3146_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3210,"nodeType":"UserDefinedTypeName","pathNode":{"id":3209,"name":"StringSlot","nameLocations":["3255:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"3255:10:16"},"referencedDeclaration":3146,"src":"3255:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3146_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:16"},"scope":3249,"src":"3195:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3225,"nodeType":"Block","src":"3558:85:16","statements":[{"AST":{"nativeSrc":"3593:44:16","nodeType":"YulBlock","src":"3593:44:16","statements":[{"nativeSrc":"3607:20:16","nodeType":"YulAssignment","src":"3607:20:16","value":{"name":"store.slot","nativeSrc":"3617:10:16","nodeType":"YulIdentifier","src":"3617:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:16","nodeType":"YulIdentifier","src":"3607:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3222,"isOffset":false,"isSlot":true,"src":"3607:6:16","suffix":"slot","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":true,"src":"3617:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3224,"nodeType":"InlineAssembly","src":"3568:69:16"}]},"documentation":{"id":3216,"nodeType":"StructuredDocumentation","src":"3362:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3226,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:16","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"store","nameLocation":"3506:5:16","nodeType":"VariableDeclaration","scope":3226,"src":"3491:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3217,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:16"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"r","nameLocation":"3555:1:16","nodeType":"VariableDeclaration","scope":3226,"src":"3536:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3146_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3221,"nodeType":"UserDefinedTypeName","pathNode":{"id":3220,"name":"StringSlot","nameLocations":["3536:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"3536:10:16"},"referencedDeclaration":3146,"src":"3536:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3146_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:16"},"scope":3249,"src":"3468:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3236,"nodeType":"Block","src":"3818:79:16","statements":[{"AST":{"nativeSrc":"3853:38:16","nodeType":"YulBlock","src":"3853:38:16","statements":[{"nativeSrc":"3867:14:16","nodeType":"YulAssignment","src":"3867:14:16","value":{"name":"slot","nativeSrc":"3877:4:16","nodeType":"YulIdentifier","src":"3877:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:16","nodeType":"YulIdentifier","src":"3867:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3233,"isOffset":false,"isSlot":true,"src":"3867:6:16","suffix":"slot","valueSize":1},{"declaration":3229,"isOffset":false,"isSlot":false,"src":"3877:4:16","valueSize":1}],"flags":["memory-safe"],"id":3235,"nodeType":"InlineAssembly","src":"3828:63:16"}]},"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"3649:84:16","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:16","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"slot","nameLocation":"3768:4:16","nodeType":"VariableDeclaration","scope":3237,"src":"3760:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:16"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"r","nameLocation":"3815:1:16","nodeType":"VariableDeclaration","scope":3237,"src":"3797:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3149_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3232,"nodeType":"UserDefinedTypeName","pathNode":{"id":3231,"name":"BytesSlot","nameLocations":["3797:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3149,"src":"3797:9:16"},"referencedDeclaration":3149,"src":"3797:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3149_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:16"},"scope":3249,"src":"3738:159:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"4094:85:16","statements":[{"AST":{"nativeSrc":"4129:44:16","nodeType":"YulBlock","src":"4129:44:16","statements":[{"nativeSrc":"4143:20:16","nodeType":"YulAssignment","src":"4143:20:16","value":{"name":"store.slot","nativeSrc":"4153:10:16","nodeType":"YulIdentifier","src":"4153:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:16","nodeType":"YulIdentifier","src":"4143:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3244,"isOffset":false,"isSlot":true,"src":"4143:6:16","suffix":"slot","valueSize":1},{"declaration":3240,"isOffset":false,"isSlot":true,"src":"4153:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3246,"nodeType":"InlineAssembly","src":"4104:69:16"}]},"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"3903:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:16","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"store","nameLocation":"4043:5:16","nodeType":"VariableDeclaration","scope":3248,"src":"4029:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3239,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:16"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"r","nameLocation":"4091:1:16","nodeType":"VariableDeclaration","scope":3248,"src":"4073:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3149_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"BytesSlot","nameLocations":["4073:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3149,"src":"4073:9:16"},"referencedDeclaration":3149,"src":"4073:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3149_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:16"},"scope":3249,"src":"4007:172:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3250,"src":"1407:2774:16","usedErrors":[],"usedEvents":[]}],"src":"193:3989:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5211],"SignedMath":[7120],"Strings":[3569]},"id":3570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3251,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":5212,"src":"127:37:17","symbolAliases":[{"foreign":{"id":3252,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":7121,"src":"165:49:17","symbolAliases":[{"foreign":{"id":3254,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"173:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"216:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3569,"linearizedBaseContracts":[3569],"name":"Strings","nameLocation":"259:7:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3259,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:17","nodeType":"VariableDeclaration","scope":3569,"src":"273:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3257,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3262,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:17","nodeType":"VariableDeclaration","scope":3569,"src":"335:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3260,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"384:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3269,"name":"StringsInsufficientHexLength","nameLocation":"476:28:17","nodeType":"ErrorDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"value","nameLocation":"513:5:17","nodeType":"VariableDeclaration","scope":3269,"src":"505:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"length","nameLocation":"528:6:17","nodeType":"VariableDeclaration","scope":3269,"src":"520:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:17"},"src":"470:66:17"},{"body":{"id":3316,"nodeType":"Block","src":"708:561:17","statements":[{"id":3315,"nodeType":"UncheckedBlock","src":"718:545:17","statements":[{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"length","nameLocation":"750:6:17","nodeType":"VariableDeclaration","scope":3315,"src":"742:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3285,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"770:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3279,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"759:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"759:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:17"},{"assignments":[3287],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"buffer","nameLocation":"808:6:17","nodeType":"VariableDeclaration","scope":3315,"src":"794:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3286,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3292,"initialValue":{"arguments":[{"id":3290,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"828:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3288,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:17"},{"assignments":[3294],"declarations":[{"constant":false,"id":3294,"mutability":"mutable","name":"ptr","nameLocation":"857:3:17","nodeType":"VariableDeclaration","scope":3315,"src":"849:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3295,"nodeType":"VariableDeclarationStatement","src":"849:11:17"},{"AST":{"nativeSrc":"899:67:17","nodeType":"YulBlock","src":"899:67:17","statements":[{"nativeSrc":"917:35:17","nodeType":"YulAssignment","src":"917:35:17","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:17","nodeType":"YulIdentifier","src":"928:6:17"},{"arguments":[{"kind":"number","nativeSrc":"940:2:17","nodeType":"YulLiteral","src":"940:2:17","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:17","nodeType":"YulIdentifier","src":"944:6:17"}],"functionName":{"name":"add","nativeSrc":"936:3:17","nodeType":"YulIdentifier","src":"936:3:17"},"nativeSrc":"936:15:17","nodeType":"YulFunctionCall","src":"936:15:17"}],"functionName":{"name":"add","nativeSrc":"924:3:17","nodeType":"YulIdentifier","src":"924:3:17"},"nativeSrc":"924:28:17","nodeType":"YulFunctionCall","src":"924:28:17"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:17","nodeType":"YulIdentifier","src":"917:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3287,"isOffset":false,"isSlot":false,"src":"928:6:17","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"944:6:17","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"917:3:17","valueSize":1}],"flags":["memory-safe"],"id":3296,"nodeType":"InlineAssembly","src":"874:92:17"},{"body":{"id":3311,"nodeType":"Block","src":"992:234:17","statements":[{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:17","subExpression":{"id":3298,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"1010:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"nodeType":"ExpressionStatement","src":"1010:5:17"},{"AST":{"nativeSrc":"1058:86:17","nodeType":"YulBlock","src":"1058:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:17","nodeType":"YulIdentifier","src":"1088:3:17"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:17","nodeType":"YulIdentifier","src":"1102:5:17"},{"kind":"number","nativeSrc":"1109:2:17","nodeType":"YulLiteral","src":"1109:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:17","nodeType":"YulIdentifier","src":"1098:3:17"},"nativeSrc":"1098:14:17","nodeType":"YulFunctionCall","src":"1098:14:17"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:17","nodeType":"YulIdentifier","src":"1114:10:17"}],"functionName":{"name":"byte","nativeSrc":"1093:4:17","nodeType":"YulIdentifier","src":"1093:4:17"},"nativeSrc":"1093:32:17","nodeType":"YulFunctionCall","src":"1093:32:17"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:17","nodeType":"YulIdentifier","src":"1080:7:17"},"nativeSrc":"1080:46:17","nodeType":"YulFunctionCall","src":"1080:46:17"},"nativeSrc":"1080:46:17","nodeType":"YulExpressionStatement","src":"1080:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3259,"isOffset":false,"isSlot":false,"src":"1114:10:17","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"1088:3:17","valueSize":1},{"declaration":3272,"isOffset":false,"isSlot":false,"src":"1102:5:17","valueSize":1}],"flags":["memory-safe"],"id":3301,"nodeType":"InlineAssembly","src":"1033:111:17"},{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"1161:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"nodeType":"ExpressionStatement","src":"1161:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"1194:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"nodeType":"IfStatement","src":"1190:21:17","trueBody":{"id":3309,"nodeType":"Break","src":"1206:5:17"}}]},"condition":{"hexValue":"74727565","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3312,"nodeType":"WhileStatement","src":"979:247:17"},{"expression":{"id":3313,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"1246:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3276,"id":3314,"nodeType":"Return","src":"1239:13:17"}]}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"542:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:17","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"value","nameLocation":"663:5:17","nodeType":"VariableDeclaration","scope":3317,"src":"655:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:17"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"693:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3274,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:17"},"scope":3569,"src":"637:632:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3342,"nodeType":"Block","src":"1445:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"1476:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:17","trueExpression":{"hexValue":"2d","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"1522:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3335,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"1507:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7120_$","typeString":"type(library SignedMath)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7119,"src":"1507:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"1498:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3325,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:17","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:17","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3324,"id":3341,"nodeType":"Return","src":"1455:75:17"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"1275:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:17","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"value","nameLocation":"1400:5:17","nodeType":"VariableDeclaration","scope":3343,"src":"1393:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3319,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:17"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3343,"src":"1430:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3322,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:17"},"scope":3569,"src":"1369:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3362,"nodeType":"Block","src":"1716:100:17","statements":[{"id":3361,"nodeType":"UncheckedBlock","src":"1726:84:17","statements":[{"expression":{"arguments":[{"id":3352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1769:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1788:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3353,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1776:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5154,"src":"1776:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3351,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3363,3446,3466],"referencedDeclaration":3446,"src":"1757:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3350,"id":3360,"nodeType":"Return","src":"1750:49:17"}]}]},"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"1543:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:17","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"value","nameLocation":"1671:5:17","nodeType":"VariableDeclaration","scope":3363,"src":"1663:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:17"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3363,"src":"1701:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3348,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:17"},"scope":3569,"src":"1642:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"2029:435:17","statements":[{"assignments":[3374],"declarations":[{"constant":false,"id":3374,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:17","nodeType":"VariableDeclaration","scope":3445,"src":"2039:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3376,"initialValue":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"2060:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:17"},{"assignments":[3378],"declarations":[{"constant":false,"id":3378,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:17","nodeType":"VariableDeclaration","scope":3445,"src":"2075:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3377,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3387,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3382,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2111:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:17"},{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3388,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2132:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3390,"indexExpression":{"hexValue":"30","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3393,"nodeType":"ExpressionStatement","src":"2132:15:17"},{"expression":{"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3394,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2157:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3396,"indexExpression":{"hexValue":"31","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3399,"nodeType":"ExpressionStatement","src":"2157:15:17"},{"body":{"id":3428,"nodeType":"Block","src":"2227:95:17","statements":[{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3414,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2241:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3416,"indexExpression":{"id":3415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"2248:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3417,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"2253:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3421,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2264:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3423,"nodeType":"ExpressionStatement","src":"2241:40:17"},{"expression":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3424,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2295:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3427,"nodeType":"ExpressionStatement","src":"2295:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"2215:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3429,"initializationExpression":{"assignments":[3401],"declarations":[{"constant":false,"id":3401,"mutability":"mutable","name":"i","nameLocation":"2195:1:17","nodeType":"VariableDeclaration","scope":3429,"src":"2187:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3407,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3403,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2203:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:17","subExpression":{"id":3411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"2224:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3413,"nodeType":"ExpressionStatement","src":"2222:3:17"},"nodeType":"ForStatement","src":"2182:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3430,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2335:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"IfStatement","src":"2331:96:17","trueBody":{"id":3438,"nodeType":"Block","src":"2352:75:17","statements":[{"errorCall":{"arguments":[{"id":3434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"2402:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3435,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2409:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3433,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2373:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3437,"nodeType":"RevertStatement","src":"2366:50:17"}]}},{"expression":{"arguments":[{"id":3442,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2450:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3440,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:17","typeDescriptions":{}}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3372,"id":3444,"nodeType":"Return","src":"2436:21:17"}]},"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"1822:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:17","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"value","nameLocation":"1968:5:17","nodeType":"VariableDeclaration","scope":3446,"src":"1960:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"length","nameLocation":"1983:6:17","nodeType":"VariableDeclaration","scope":3446,"src":"1975:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:17"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3446,"src":"2014:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3370,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:17"},"scope":3569,"src":"1939:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3465,"nodeType":"Block","src":"2696:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3459,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"2741:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3457,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:17","typeDescriptions":{}}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:17","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3462,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2749:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3454,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3363,3446,3466],"referencedDeclaration":3446,"src":"2713:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3453,"id":3464,"nodeType":"Return","src":"2706:58:17"}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"2470:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3466,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:17","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"addr","nameLocation":"2652:4:17","nodeType":"VariableDeclaration","scope":3466,"src":"2644:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3448,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:17"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3466,"src":"2681:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3451,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:17"},"scope":3569,"src":"2623:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"3028:642:17","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:17","nodeType":"VariableDeclaration","scope":3530,"src":"3038:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3474,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3482,"initialValue":{"arguments":[{"arguments":[{"id":3479,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"3078:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3478,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3363,3446,3466],"referencedDeclaration":3466,"src":"3066:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3476,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:17","typeDescriptions":{}}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:17"},{"assignments":[3484],"declarations":[{"constant":false,"id":3484,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:17","nodeType":"VariableDeclaration","scope":3530,"src":"3169:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3485,"nodeType":"VariableDeclarationStatement","src":"3169:17:17"},{"AST":{"nativeSrc":"3221:78:17","nodeType":"YulBlock","src":"3221:78:17","statements":[{"nativeSrc":"3235:54:17","nodeType":"YulAssignment","src":"3235:54:17","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:17","nodeType":"YulLiteral","src":"3252:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:17","nodeType":"YulIdentifier","src":"3270:6:17"},{"kind":"number","nativeSrc":"3278:4:17","nodeType":"YulLiteral","src":"3278:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:17","nodeType":"YulIdentifier","src":"3266:3:17"},"nativeSrc":"3266:17:17","nodeType":"YulFunctionCall","src":"3266:17:17"},{"kind":"number","nativeSrc":"3285:2:17","nodeType":"YulLiteral","src":"3285:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:17","nodeType":"YulIdentifier","src":"3256:9:17"},"nativeSrc":"3256:32:17","nodeType":"YulFunctionCall","src":"3256:32:17"}],"functionName":{"name":"shr","nativeSrc":"3248:3:17","nodeType":"YulIdentifier","src":"3248:3:17"},"nativeSrc":"3248:41:17","nodeType":"YulFunctionCall","src":"3248:41:17"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:17","nodeType":"YulIdentifier","src":"3235:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3475,"isOffset":false,"isSlot":false,"src":"3270:6:17","valueSize":1},{"declaration":3484,"isOffset":false,"isSlot":false,"src":"3235:9:17","valueSize":1}],"flags":["memory-safe"],"id":3486,"nodeType":"InlineAssembly","src":"3196:103:17"},{"body":{"id":3523,"nodeType":"Block","src":"3342:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"3448:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3504,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3477:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3506,"indexExpression":{"id":3505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"3484:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3502,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:17","typeDescriptions":{}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"nodeType":"IfStatement","src":"3444:150:17","trueBody":{"id":3517,"nodeType":"Block","src":"3494:100:17","statements":[{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3511,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3562:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3513,"indexExpression":{"id":3512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"3569:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3516,"nodeType":"ExpressionStatement","src":"3562:17:17"}]}},{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"3607:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"3607:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"3330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3524,"initializationExpression":{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"i","nameLocation":"3322:1:17","nodeType":"VariableDeclaration","scope":3524,"src":"3314:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3490,"initialValue":{"hexValue":"3431","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:17","subExpression":{"id":3494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"3339:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"3337:3:17"},"nodeType":"ForStatement","src":"3309:324:17"},{"expression":{"arguments":[{"id":3527,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3656:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3525,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:17","typeDescriptions":{}}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3473,"id":3529,"nodeType":"Return","src":"3642:21:17"}]},"documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"2777:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:17","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"addr","nameLocation":"2984:4:17","nodeType":"VariableDeclaration","scope":3531,"src":"2976:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3468,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:17"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3531,"src":"3013:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3471,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:17"},"scope":3569,"src":"2947:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3567,"nodeType":"Block","src":"3825:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"3848:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3541,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:17","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:17","memberName":"length","nodeType":"MemberAccess","src":"3842:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3548,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"3867:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3546,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:17","typeDescriptions":{}}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:17","memberName":"length","nodeType":"MemberAccess","src":"3861:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"3896:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3553,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:17","typeDescriptions":{}}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3552,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"3919:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3559,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:17","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3558,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3540,"id":3566,"nodeType":"Return","src":"3835:87:17"}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"3676:66:17","text":" @dev Returns true if the two strings are equal."},"id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:17","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"a","nameLocation":"3776:1:17","nodeType":"VariableDeclaration","scope":3568,"src":"3762:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3533,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"b","nameLocation":"3793:1:17","nodeType":"VariableDeclaration","scope":3568,"src":"3779:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3535,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:17"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3568,"src":"3819:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3538,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:17"},"scope":3569,"src":"3747:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3570,"src":"251:3680:17","usedErrors":[3269],"usedEvents":[]}],"src":"101:3831:17"},"id":17},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3593],"IERC165":[3605]},"id":3594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3571,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3594,"sourceUnit":3606,"src":"140:38:18","symbolAliases":[{"foreign":{"id":3572,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"148:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3575,"name":"IERC165","nameLocations":["688:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"688:7:18"},"id":3576,"nodeType":"InheritanceSpecifier","src":"688:7:18"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"180:479:18","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3593,"linearizedBaseContracts":[3593,3605],"name":"ERC165","nameLocation":"678:6:18","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3604],"body":{"id":3591,"nodeType":"Block","src":"845:64:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"862:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3586,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"882:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3605_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3605_$","typeString":"type(contract IERC165)"}],"id":3585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3605","typeString":"type(contract IERC165)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3583,"id":3590,"nodeType":"Return","src":"855:47:18"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"702:56:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:18","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:18","nodeType":"VariableDeclaration","scope":3592,"src":"790:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3578,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:18"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"839:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3581,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:18"},"scope":3593,"src":"763:146:18","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3594,"src":"660:251:18","usedErrors":[],"usedEvents":[]}],"src":"114:798:18"},"id":18},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3605]},"id":3606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3595,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"141:280:19","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3605,"linearizedBaseContracts":[3605],"name":"IERC165","nameLocation":"432:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"446:340:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3604,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:19","nodeType":"FunctionDefinition","parameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:19","nodeType":"VariableDeclaration","scope":3604,"src":"818:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3598,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:19"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3604,"src":"861:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3601,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:19"},"scope":3605,"src":"791:76:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3606,"src":"422:447:19","usedErrors":[],"usedEvents":[]}],"src":"115:755:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5211],"Panic":[2878],"SafeCast":[6976]},"id":5212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3607,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5212,"sourceUnit":2879,"src":"129:35:20","symbolAliases":[{"foreign":{"id":3608,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"137:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5212,"sourceUnit":6977,"src":"165:40:20","symbolAliases":[{"foreign":{"id":3610,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"173:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3612,"nodeType":"StructuredDocumentation","src":"207:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5211,"linearizedBaseContracts":[5211],"name":"Math","nameLocation":"289:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3617,"members":[{"id":3613,"name":"Floor","nameLocation":"324:5:20","nodeType":"EnumValue","src":"324:5:20"},{"id":3614,"name":"Ceil","nameLocation":"367:4:20","nodeType":"EnumValue","src":"367:4:20"},{"id":3615,"name":"Trunc","nameLocation":"409:5:20","nodeType":"EnumValue","src":"409:5:20"},{"id":3616,"name":"Expand","nameLocation":"439:6:20","nodeType":"EnumValue","src":"439:6:20"}],"name":"Rounding","nameLocation":"305:8:20","nodeType":"EnumDefinition","src":"300:169:20"},{"body":{"id":3648,"nodeType":"Block","src":"677:140:20","statements":[{"id":3647,"nodeType":"UncheckedBlock","src":"687:124:20","statements":[{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"c","nameLocation":"719:1:20","nodeType":"VariableDeclaration","scope":3647,"src":"711:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3634,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"723:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3632,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"727:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"746:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"750:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3642,"nodeType":"IfStatement","src":"742:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3628,"id":3641,"nodeType":"Return","src":"753:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3644,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"798:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3628,"id":3646,"nodeType":"Return","src":"784:16:20"}]}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"475:106:20","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:20","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"a","nameLocation":"610:1:20","nodeType":"VariableDeclaration","scope":3649,"src":"602:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"b","nameLocation":"621:1:20","nodeType":"VariableDeclaration","scope":3649,"src":"613:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:20"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"success","nameLocation":"652:7:20","nodeType":"VariableDeclaration","scope":3649,"src":"647:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3624,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"result","nameLocation":"669:6:20","nodeType":"VariableDeclaration","scope":3649,"src":"661:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:20"},"scope":5211,"src":"586:231:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3676,"nodeType":"Block","src":"1028:113:20","statements":[{"id":3675,"nodeType":"UncheckedBlock","src":"1038:97:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"1066:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"1070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"IfStatement","src":"1062:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3660,"id":3667,"nodeType":"Return","src":"1073:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"1118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"1122:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3660,"id":3674,"nodeType":"Return","src":"1104:20:20"}]}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"823:109:20","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:20","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"a","nameLocation":"961:1:20","nodeType":"VariableDeclaration","scope":3677,"src":"953:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"b","nameLocation":"972:1:20","nodeType":"VariableDeclaration","scope":3677,"src":"964:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:20"},"returnParameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"success","nameLocation":"1003:7:20","nodeType":"VariableDeclaration","scope":3677,"src":"998:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3656,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"result","nameLocation":"1020:6:20","nodeType":"VariableDeclaration","scope":3677,"src":"1012:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:20"},"scope":5211,"src":"937:204:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3718,"nodeType":"Block","src":"1355:417:20","statements":[{"id":3717,"nodeType":"UncheckedBlock","src":"1365:401:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1623:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"IfStatement","src":"1619:28:20","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3688,"id":3695,"nodeType":"Return","src":"1631:16:20"}},{"assignments":[3698],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"c","nameLocation":"1669:1:20","nodeType":"VariableDeclaration","scope":3717,"src":"1661:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3702,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1673:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"1677:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"1696:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1700:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3706,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"1705:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3712,"nodeType":"IfStatement","src":"1692:33:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3688,"id":3711,"nodeType":"Return","src":"1708:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3714,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"1753:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3688,"id":3716,"nodeType":"Return","src":"1739:16:20"}]}]},"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"1147:112:20","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3719,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:20","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"a","nameLocation":"1288:1:20","nodeType":"VariableDeclaration","scope":3719,"src":"1280:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"b","nameLocation":"1299:1:20","nodeType":"VariableDeclaration","scope":3719,"src":"1291:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:20"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"success","nameLocation":"1330:7:20","nodeType":"VariableDeclaration","scope":3719,"src":"1325:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3684,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"result","nameLocation":"1347:6:20","nodeType":"VariableDeclaration","scope":3719,"src":"1339:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:20"},"scope":5211,"src":"1264:508:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3746,"nodeType":"Block","src":"1987:114:20","statements":[{"id":3745,"nodeType":"UncheckedBlock","src":"1997:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"2025:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3738,"nodeType":"IfStatement","src":"2021:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3730,"id":3737,"nodeType":"Return","src":"2033:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"2082:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3730,"id":3744,"nodeType":"Return","src":"2064:20:20"}]}]},"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"1778:113:20","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:20","nodeType":"FunctionDefinition","parameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"a","nameLocation":"1920:1:20","nodeType":"VariableDeclaration","scope":3747,"src":"1912:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"b","nameLocation":"1931:1:20","nodeType":"VariableDeclaration","scope":3747,"src":"1923:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:20"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"success","nameLocation":"1962:7:20","nodeType":"VariableDeclaration","scope":3747,"src":"1957:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3726,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"result","nameLocation":"1979:6:20","nodeType":"VariableDeclaration","scope":3747,"src":"1971:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:20"},"scope":5211,"src":"1896:205:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3774,"nodeType":"Block","src":"2326:114:20","statements":[{"id":3773,"nodeType":"UncheckedBlock","src":"2336:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"2364:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3766,"nodeType":"IfStatement","src":"2360:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3758,"id":3765,"nodeType":"Return","src":"2372:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"2417:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3769,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"2421:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3758,"id":3772,"nodeType":"Return","src":"2403:20:20"}]}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"2107:123:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:20","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"a","nameLocation":"2259:1:20","nodeType":"VariableDeclaration","scope":3775,"src":"2251:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"b","nameLocation":"2270:1:20","nodeType":"VariableDeclaration","scope":3775,"src":"2262:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:20"},"returnParameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"success","nameLocation":"2301:7:20","nodeType":"VariableDeclaration","scope":3775,"src":"2296:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3754,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"result","nameLocation":"2318:6:20","nodeType":"VariableDeclaration","scope":3775,"src":"2310:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:20"},"scope":5211,"src":"2235:205:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"2912:207:20","statements":[{"id":3800,"nodeType":"UncheckedBlock","src":"2922:191:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"3060:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"3066:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"3070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3794,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"3091:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3792,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"3075:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"3075:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3786,"id":3799,"nodeType":"Return","src":"3053:49:20"}]}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"2446:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:20","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"condition","nameLocation":"2847:9:20","nodeType":"VariableDeclaration","scope":3802,"src":"2842:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3777,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"a","nameLocation":"2866:1:20","nodeType":"VariableDeclaration","scope":3802,"src":"2858:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"b","nameLocation":"2877:1:20","nodeType":"VariableDeclaration","scope":3802,"src":"2869:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:20"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"2903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:20"},"scope":5211,"src":"2825:294:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3820,"nodeType":"Block","src":"3256:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"3281:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3814,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"3285:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"3288:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3817,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"3291:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3812,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"3273:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3811,"id":3819,"nodeType":"Return","src":"3266:27:20"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"3125:59:20","text":" @dev Returns the largest of two numbers."},"id":3821,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:20","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"a","nameLocation":"3210:1:20","nodeType":"VariableDeclaration","scope":3821,"src":"3202:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"b","nameLocation":"3221:1:20","nodeType":"VariableDeclaration","scope":3821,"src":"3213:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:20"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"3247:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:20"},"scope":5211,"src":"3189:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3839,"nodeType":"Block","src":"3438:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"3463:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3467:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"3470:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3473:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3831,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3830,"id":3838,"nodeType":"Return","src":"3448:27:20"}]},"documentation":{"id":3822,"nodeType":"StructuredDocumentation","src":"3306:60:20","text":" @dev Returns the smallest of two numbers."},"id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:20","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"a","nameLocation":"3392:1:20","nodeType":"VariableDeclaration","scope":3840,"src":"3384:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"b","nameLocation":"3403:1:20","nodeType":"VariableDeclaration","scope":3840,"src":"3395:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:20"},"returnParameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"3429:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:20"},"scope":5211,"src":"3371:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"3666:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"3721:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"3725:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"3731:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"3735:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3849,"id":3861,"nodeType":"Return","src":"3713:28:20"}]},"documentation":{"id":3841,"nodeType":"StructuredDocumentation","src":"3488:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:20","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"a","nameLocation":"3620:1:20","nodeType":"VariableDeclaration","scope":3863,"src":"3612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"b","nameLocation":"3631:1:20","nodeType":"VariableDeclaration","scope":3863,"src":"3623:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:20"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"3657:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:20"},"scope":5211,"src":"3595:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3903,"nodeType":"Block","src":"4040:633:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3884,"nodeType":"IfStatement","src":"4050:150:20","trueBody":{"id":3883,"nodeType":"Block","src":"4062:138:20","statements":[{"expression":{"arguments":[{"expression":{"id":3879,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"4166:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"4166:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3876,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"4154:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"4154:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3882,"nodeType":"ExpressionStatement","src":"4154:35:20"}]}},{"id":3902,"nodeType":"UncheckedBlock","src":"4583:84:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4630:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3885,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"4614:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"4614:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4641:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4650:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3872,"id":3901,"nodeType":"Return","src":"4607:49:20"}]}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"3754:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3904,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:20","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"a","nameLocation":"3994:1:20","nodeType":"VariableDeclaration","scope":3904,"src":"3986:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"b","nameLocation":"4005:1:20","nodeType":"VariableDeclaration","scope":3904,"src":"3997:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:20"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3904,"src":"4031:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:20"},"scope":5211,"src":"3969:704:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"5094:4128:20","statements":[{"id":4039,"nodeType":"UncheckedBlock","src":"5104:4112:20","statements":[{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:20","nodeType":"VariableDeclaration","scope":4039,"src":"5433:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"5449:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3919,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"5453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:20"},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:20","nodeType":"VariableDeclaration","scope":4039,"src":"5513:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"nodeType":"VariableDeclarationStatement","src":"5513:13:20"},{"AST":{"nativeSrc":"5593:122:20","nodeType":"YulBlock","src":"5593:122:20","statements":[{"nativeSrc":"5611:30:20","nodeType":"YulVariableDeclaration","src":"5611:30:20","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:20","nodeType":"YulIdentifier","src":"5628:1:20"},{"name":"y","nativeSrc":"5631:1:20","nodeType":"YulIdentifier","src":"5631:1:20"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:20","nodeType":"YulLiteral","src":"5638:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:20","nodeType":"YulIdentifier","src":"5634:3:20"},"nativeSrc":"5634:6:20","nodeType":"YulFunctionCall","src":"5634:6:20"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:20","nodeType":"YulIdentifier","src":"5621:6:20"},"nativeSrc":"5621:20:20","nodeType":"YulFunctionCall","src":"5621:20:20"},"variables":[{"name":"mm","nativeSrc":"5615:2:20","nodeType":"YulTypedName","src":"5615:2:20","type":""}]},{"nativeSrc":"5658:43:20","nodeType":"YulAssignment","src":"5658:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:20","nodeType":"YulIdentifier","src":"5675:2:20"},{"name":"prod0","nativeSrc":"5679:5:20","nodeType":"YulIdentifier","src":"5679:5:20"}],"functionName":{"name":"sub","nativeSrc":"5671:3:20","nodeType":"YulIdentifier","src":"5671:3:20"},"nativeSrc":"5671:14:20","nodeType":"YulFunctionCall","src":"5671:14:20"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:20","nodeType":"YulIdentifier","src":"5690:2:20"},{"name":"prod0","nativeSrc":"5694:5:20","nodeType":"YulIdentifier","src":"5694:5:20"}],"functionName":{"name":"lt","nativeSrc":"5687:2:20","nodeType":"YulIdentifier","src":"5687:2:20"},"nativeSrc":"5687:13:20","nodeType":"YulFunctionCall","src":"5687:13:20"}],"functionName":{"name":"sub","nativeSrc":"5667:3:20","nodeType":"YulIdentifier","src":"5667:3:20"},"nativeSrc":"5667:34:20","nodeType":"YulFunctionCall","src":"5667:34:20"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:20","nodeType":"YulIdentifier","src":"5658:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3917,"isOffset":false,"isSlot":false,"src":"5679:5:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"5694:5:20","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"5658:5:20","valueSize":1},{"declaration":3907,"isOffset":false,"isSlot":false,"src":"5628:1:20","valueSize":1},{"declaration":3909,"isOffset":false,"isSlot":false,"src":"5631:1:20","valueSize":1}],"id":3925,"nodeType":"InlineAssembly","src":"5584:131:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"5796:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3934,"nodeType":"IfStatement","src":"5792:368:20","trueBody":{"id":3933,"nodeType":"Block","src":"5808:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"6126:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3930,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"6134:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3915,"id":3932,"nodeType":"Return","src":"6119:26:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"6270:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3936,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"6285:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3953,"nodeType":"IfStatement","src":"6266:143:20","trueBody":{"id":3952,"nodeType":"Block","src":"6292:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"6330:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3945,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6348:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"6348:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3947,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6372:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2841,"src":"6372:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3941,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6322:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3938,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"6310:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"6310:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3951,"nodeType":"ExpressionStatement","src":"6310:84:20"}]}},{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:20","nodeType":"VariableDeclaration","scope":4039,"src":"6664:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3956,"nodeType":"VariableDeclarationStatement","src":"6664:17:20"},{"AST":{"nativeSrc":"6704:291:20","nodeType":"YulBlock","src":"6704:291:20","statements":[{"nativeSrc":"6773:38:20","nodeType":"YulAssignment","src":"6773:38:20","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:20","nodeType":"YulIdentifier","src":"6793:1:20"},{"name":"y","nativeSrc":"6796:1:20","nodeType":"YulIdentifier","src":"6796:1:20"},{"name":"denominator","nativeSrc":"6799:11:20","nodeType":"YulIdentifier","src":"6799:11:20"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:20","nodeType":"YulIdentifier","src":"6786:6:20"},"nativeSrc":"6786:25:20","nodeType":"YulFunctionCall","src":"6786:25:20"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:20","nodeType":"YulIdentifier","src":"6773:9:20"}]},{"nativeSrc":"6893:41:20","nodeType":"YulAssignment","src":"6893:41:20","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:20","nodeType":"YulIdentifier","src":"6906:5:20"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:20","nodeType":"YulIdentifier","src":"6916:9:20"},{"name":"prod0","nativeSrc":"6927:5:20","nodeType":"YulIdentifier","src":"6927:5:20"}],"functionName":{"name":"gt","nativeSrc":"6913:2:20","nodeType":"YulIdentifier","src":"6913:2:20"},"nativeSrc":"6913:20:20","nodeType":"YulFunctionCall","src":"6913:20:20"}],"functionName":{"name":"sub","nativeSrc":"6902:3:20","nodeType":"YulIdentifier","src":"6902:3:20"},"nativeSrc":"6902:32:20","nodeType":"YulFunctionCall","src":"6902:32:20"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:20","nodeType":"YulIdentifier","src":"6893:5:20"}]},{"nativeSrc":"6951:30:20","nodeType":"YulAssignment","src":"6951:30:20","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:20","nodeType":"YulIdentifier","src":"6964:5:20"},{"name":"remainder","nativeSrc":"6971:9:20","nodeType":"YulIdentifier","src":"6971:9:20"}],"functionName":{"name":"sub","nativeSrc":"6960:3:20","nodeType":"YulIdentifier","src":"6960:3:20"},"nativeSrc":"6960:21:20","nodeType":"YulFunctionCall","src":"6960:21:20"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:20","nodeType":"YulIdentifier","src":"6951:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3911,"isOffset":false,"isSlot":false,"src":"6799:11:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"6927:5:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"6951:5:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"6964:5:20","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"6893:5:20","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"6906:5:20","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"6773:9:20","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"6916:9:20","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"6971:9:20","valueSize":1},{"declaration":3907,"isOffset":false,"isSlot":false,"src":"6793:1:20","valueSize":1},{"declaration":3909,"isOffset":false,"isSlot":false,"src":"6796:1:20","valueSize":1}],"id":3957,"nodeType":"InlineAssembly","src":"6695:300:20"},{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"twos","nameLocation":"7207:4:20","nodeType":"VariableDeclaration","scope":4039,"src":"7199:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3966,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"7214:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"7233:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:20"},{"AST":{"nativeSrc":"7268:366:20","nodeType":"YulBlock","src":"7268:366:20","statements":[{"nativeSrc":"7333:37:20","nodeType":"YulAssignment","src":"7333:37:20","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:20","nodeType":"YulIdentifier","src":"7352:11:20"},{"name":"twos","nativeSrc":"7365:4:20","nodeType":"YulIdentifier","src":"7365:4:20"}],"functionName":{"name":"div","nativeSrc":"7348:3:20","nodeType":"YulIdentifier","src":"7348:3:20"},"nativeSrc":"7348:22:20","nodeType":"YulFunctionCall","src":"7348:22:20"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:20","nodeType":"YulIdentifier","src":"7333:11:20"}]},{"nativeSrc":"7437:25:20","nodeType":"YulAssignment","src":"7437:25:20","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:20","nodeType":"YulIdentifier","src":"7450:5:20"},{"name":"twos","nativeSrc":"7457:4:20","nodeType":"YulIdentifier","src":"7457:4:20"}],"functionName":{"name":"div","nativeSrc":"7446:3:20","nodeType":"YulIdentifier","src":"7446:3:20"},"nativeSrc":"7446:16:20","nodeType":"YulFunctionCall","src":"7446:16:20"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:20","nodeType":"YulIdentifier","src":"7437:5:20"}]},{"nativeSrc":"7581:39:20","nodeType":"YulAssignment","src":"7581:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:20","nodeType":"YulLiteral","src":"7601:1:20","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:20","nodeType":"YulIdentifier","src":"7604:4:20"}],"functionName":{"name":"sub","nativeSrc":"7597:3:20","nodeType":"YulIdentifier","src":"7597:3:20"},"nativeSrc":"7597:12:20","nodeType":"YulFunctionCall","src":"7597:12:20"},{"name":"twos","nativeSrc":"7611:4:20","nodeType":"YulIdentifier","src":"7611:4:20"}],"functionName":{"name":"div","nativeSrc":"7593:3:20","nodeType":"YulIdentifier","src":"7593:3:20"},"nativeSrc":"7593:23:20","nodeType":"YulFunctionCall","src":"7593:23:20"},{"kind":"number","nativeSrc":"7618:1:20","nodeType":"YulLiteral","src":"7618:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:20","nodeType":"YulIdentifier","src":"7589:3:20"},"nativeSrc":"7589:31:20","nodeType":"YulFunctionCall","src":"7589:31:20"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:20","nodeType":"YulIdentifier","src":"7581:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3911,"isOffset":false,"isSlot":false,"src":"7333:11:20","valueSize":1},{"declaration":3911,"isOffset":false,"isSlot":false,"src":"7352:11:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"7437:5:20","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"7450:5:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"7365:4:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"7457:4:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"7581:4:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"7604:4:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"7611:4:20","valueSize":1}],"id":3967,"nodeType":"InlineAssembly","src":"7259:375:20"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3968,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"7700:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"7709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3970,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"7717:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3973,"nodeType":"ExpressionStatement","src":"7700:21:20"},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:20","nodeType":"VariableDeclaration","scope":4039,"src":"8056:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3982,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3977,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8079:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:20"},{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8312:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8327:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3986,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8341:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3990,"nodeType":"ExpressionStatement","src":"8312:36:20"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8382:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8397:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8411:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3998,"nodeType":"ExpressionStatement","src":"8382:36:20"},{"expression":{"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3999,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8454:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8469:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4002,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8483:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4006,"nodeType":"ExpressionStatement","src":"8454:36:20"},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8540:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4010,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8554:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"8525:36:20"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8613:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4018,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8627:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ExpressionStatement","src":"8598:36:20"},{"expression":{"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"8687:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4026,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8701:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4030,"nodeType":"ExpressionStatement","src":"8672:36:20"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"9154:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"9163:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4033,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"9171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"9154:24:20"},{"expression":{"id":4037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"9199:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3915,"id":4038,"nodeType":"Return","src":"9192:13:20"}]}]},"documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"4679:312:20","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:20","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"x","nameLocation":"5020:1:20","nodeType":"VariableDeclaration","scope":4041,"src":"5012:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"y","nameLocation":"5031:1:20","nodeType":"VariableDeclaration","scope":4041,"src":"5023:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:20","nodeType":"VariableDeclaration","scope":4041,"src":"5034:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:20"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"result","nameLocation":"5086:6:20","nodeType":"VariableDeclaration","scope":4041,"src":"5078:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:20"},"scope":5211,"src":"4996:4226:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"9461:128:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"9485:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4058,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"9488:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4059,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"9491:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4041,4078],"referencedDeclaration":4041,"src":"9478:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4064,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"9539:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}],"id":4063,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"9522:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3617_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4067,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"9559:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4068,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"9562:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4069,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"9565:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4066,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4061,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"9506:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"9506:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4055,"id":4076,"nodeType":"Return","src":"9471:111:20"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"9228:118:20","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:20","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"x","nameLocation":"9375:1:20","nodeType":"VariableDeclaration","scope":4078,"src":"9367:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"y","nameLocation":"9386:1:20","nodeType":"VariableDeclaration","scope":4078,"src":"9378:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:20","nodeType":"VariableDeclaration","scope":4078,"src":"9389:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:20","nodeType":"VariableDeclaration","scope":4078,"src":"9410:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"},"typeName":{"id":4050,"nodeType":"UserDefinedTypeName","pathNode":{"id":4049,"name":"Rounding","nameLocations":["9410:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"9410:8:20"},"referencedDeclaration":3617,"src":"9410:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:20"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"9452:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:20"},"scope":5211,"src":"9351:238:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4174,"nodeType":"Block","src":"10223:1849:20","statements":[{"id":4173,"nodeType":"UncheckedBlock","src":"10233:1833:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10261:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4093,"nodeType":"IfStatement","src":"10257:20:20","trueBody":{"expression":{"hexValue":"30","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4087,"id":4092,"nodeType":"Return","src":"10269:8:20"}},{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:20","nodeType":"VariableDeclaration","scope":4173,"src":"10748:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4099,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"10768:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4097,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10772:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:20"},{"assignments":[4101],"declarations":[{"constant":false,"id":4101,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:20","nodeType":"VariableDeclaration","scope":4173,"src":"10787:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4103,"initialValue":{"id":4102,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10801:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:20"},{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"x","nameLocation":"10945:1:20","nodeType":"VariableDeclaration","scope":4173,"src":"10938:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4104,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4107,"initialValue":{"hexValue":"30","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:20"},{"assignments":[4109],"declarations":[{"constant":false,"id":4109,"mutability":"mutable","name":"y","nameLocation":"10971:1:20","nodeType":"VariableDeclaration","scope":4173,"src":"10964:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4108,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4111,"initialValue":{"hexValue":"31","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:20"},{"body":{"id":4148,"nodeType":"Block","src":"11014:882:20","statements":[{"assignments":[4116],"declarations":[{"constant":false,"id":4116,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:20","nodeType":"VariableDeclaration","scope":4148,"src":"11032:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4120,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11051:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4118,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11057:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:20"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4121,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11086:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4122,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11091:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4124,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11191:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11436:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11442:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4127,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"11454:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"ExpressionStatement","src":"11085:395:20"},{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4133,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"11500:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4134,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"11503:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4135,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4136,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"11585:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"11839:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"11843:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4141,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"11854:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4139,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:20","typeDescriptions":{}}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4147,"nodeType":"ExpressionStatement","src":"11499:382:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10998:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"nodeType":"WhileStatement","src":"10991:905:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4150,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11914:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4155,"nodeType":"IfStatement","src":"11910:22:20","trueBody":{"expression":{"hexValue":"30","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4087,"id":4154,"nodeType":"Return","src":"11924:8:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"11983:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11990:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:20","subExpression":{"id":4163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12003:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:20","typeDescriptions":{}}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4169,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12015:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:20","typeDescriptions":{}}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4156,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"11975:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4087,"id":4172,"nodeType":"Return","src":"11968:50:20"}]}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"9595:553:20","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4175,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:20","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"a","nameLocation":"10177:1:20","nodeType":"VariableDeclaration","scope":4175,"src":"10169:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"n","nameLocation":"10188:1:20","nodeType":"VariableDeclaration","scope":4175,"src":"10180:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:20"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4175,"src":"10214:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:20"},"scope":5211,"src":"10153:1919:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4195,"nodeType":"Block","src":"12672:82:20","statements":[{"id":4194,"nodeType":"UncheckedBlock","src":"12682:66:20","statements":[{"expression":{"arguments":[{"id":4187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"12725:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"12728:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4191,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"12735:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4185,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"12713:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5211_$","typeString":"type(library Math)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:20","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4232,"src":"12713:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4184,"id":4193,"nodeType":"Return","src":"12706:31:20"}]}]},"documentation":{"id":4176,"nodeType":"StructuredDocumentation","src":"12078:514:20","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:20","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"a","nameLocation":"12626:1:20","nodeType":"VariableDeclaration","scope":4196,"src":"12618:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"p","nameLocation":"12637:1:20","nodeType":"VariableDeclaration","scope":4196,"src":"12629:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:20"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4196,"src":"12663:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:20"},"scope":5211,"src":"12597:157:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4231,"nodeType":"Block","src":"13524:174:20","statements":[{"assignments":[4209,4211],"declarations":[{"constant":false,"id":4209,"mutability":"mutable","name":"success","nameLocation":"13540:7:20","nodeType":"VariableDeclaration","scope":4231,"src":"13535:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4208,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"result","nameLocation":"13557:6:20","nodeType":"VariableDeclaration","scope":4231,"src":"13549:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4217,"initialValue":{"arguments":[{"id":4213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"13577:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4214,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"13580:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4215,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"13583:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4256,4338],"referencedDeclaration":4256,"src":"13567:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:20"},{"condition":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:20","subExpression":{"id":4218,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"13600:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4228,"nodeType":"IfStatement","src":"13595:74:20","trueBody":{"id":4227,"nodeType":"Block","src":"13609:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4223,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"13635:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"13635:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4220,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"13623:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"13623:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4226,"nodeType":"ExpressionStatement","src":"13623:35:20"}]}},{"expression":{"id":4229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"13685:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4207,"id":4230,"nodeType":"Return","src":"13678:13:20"}]},"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"12760:678:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4232,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:20","nodeType":"FunctionDefinition","parameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"b","nameLocation":"13467:1:20","nodeType":"VariableDeclaration","scope":4232,"src":"13459:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"e","nameLocation":"13478:1:20","nodeType":"VariableDeclaration","scope":4232,"src":"13470:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"m","nameLocation":"13489:1:20","nodeType":"VariableDeclaration","scope":4232,"src":"13481:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:20"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4232,"src":"13515:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:20"},"scope":5211,"src":"13443:255:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4255,"nodeType":"Block","src":"14552:1493:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"14566:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4253,"nodeType":"IfStatement","src":"14562:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4245,"id":4252,"nodeType":"Return","src":"14574:17:20"}},{"AST":{"nativeSrc":"14626:1413:20","nodeType":"YulBlock","src":"14626:1413:20","statements":[{"nativeSrc":"14640:22:20","nodeType":"YulVariableDeclaration","src":"14640:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:20","nodeType":"YulLiteral","src":"14657:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:20","nodeType":"YulIdentifier","src":"14651:5:20"},"nativeSrc":"14651:11:20","nodeType":"YulFunctionCall","src":"14651:11:20"},"variables":[{"name":"ptr","nativeSrc":"14644:3:20","nodeType":"YulTypedName","src":"14644:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:20","nodeType":"YulIdentifier","src":"15570:3:20"},{"kind":"number","nativeSrc":"15575:4:20","nodeType":"YulLiteral","src":"15575:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:20","nodeType":"YulIdentifier","src":"15563:6:20"},"nativeSrc":"15563:17:20","nodeType":"YulFunctionCall","src":"15563:17:20"},"nativeSrc":"15563:17:20","nodeType":"YulExpressionStatement","src":"15563:17:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:20","nodeType":"YulIdentifier","src":"15604:3:20"},{"kind":"number","nativeSrc":"15609:4:20","nodeType":"YulLiteral","src":"15609:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:20","nodeType":"YulIdentifier","src":"15600:3:20"},"nativeSrc":"15600:14:20","nodeType":"YulFunctionCall","src":"15600:14:20"},{"kind":"number","nativeSrc":"15616:4:20","nodeType":"YulLiteral","src":"15616:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:20","nodeType":"YulIdentifier","src":"15593:6:20"},"nativeSrc":"15593:28:20","nodeType":"YulFunctionCall","src":"15593:28:20"},"nativeSrc":"15593:28:20","nodeType":"YulExpressionStatement","src":"15593:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:20","nodeType":"YulIdentifier","src":"15645:3:20"},{"kind":"number","nativeSrc":"15650:4:20","nodeType":"YulLiteral","src":"15650:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:20","nodeType":"YulIdentifier","src":"15641:3:20"},"nativeSrc":"15641:14:20","nodeType":"YulFunctionCall","src":"15641:14:20"},{"kind":"number","nativeSrc":"15657:4:20","nodeType":"YulLiteral","src":"15657:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:20","nodeType":"YulIdentifier","src":"15634:6:20"},"nativeSrc":"15634:28:20","nodeType":"YulFunctionCall","src":"15634:28:20"},"nativeSrc":"15634:28:20","nodeType":"YulExpressionStatement","src":"15634:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:20","nodeType":"YulIdentifier","src":"15686:3:20"},{"kind":"number","nativeSrc":"15691:4:20","nodeType":"YulLiteral","src":"15691:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:20","nodeType":"YulIdentifier","src":"15682:3:20"},"nativeSrc":"15682:14:20","nodeType":"YulFunctionCall","src":"15682:14:20"},{"name":"b","nativeSrc":"15698:1:20","nodeType":"YulIdentifier","src":"15698:1:20"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:20","nodeType":"YulIdentifier","src":"15675:6:20"},"nativeSrc":"15675:25:20","nodeType":"YulFunctionCall","src":"15675:25:20"},"nativeSrc":"15675:25:20","nodeType":"YulExpressionStatement","src":"15675:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:20","nodeType":"YulIdentifier","src":"15724:3:20"},{"kind":"number","nativeSrc":"15729:4:20","nodeType":"YulLiteral","src":"15729:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:20","nodeType":"YulIdentifier","src":"15720:3:20"},"nativeSrc":"15720:14:20","nodeType":"YulFunctionCall","src":"15720:14:20"},{"name":"e","nativeSrc":"15736:1:20","nodeType":"YulIdentifier","src":"15736:1:20"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:20","nodeType":"YulIdentifier","src":"15713:6:20"},"nativeSrc":"15713:25:20","nodeType":"YulFunctionCall","src":"15713:25:20"},"nativeSrc":"15713:25:20","nodeType":"YulExpressionStatement","src":"15713:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:20","nodeType":"YulIdentifier","src":"15762:3:20"},{"kind":"number","nativeSrc":"15767:4:20","nodeType":"YulLiteral","src":"15767:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:20","nodeType":"YulIdentifier","src":"15758:3:20"},"nativeSrc":"15758:14:20","nodeType":"YulFunctionCall","src":"15758:14:20"},{"name":"m","nativeSrc":"15774:1:20","nodeType":"YulIdentifier","src":"15774:1:20"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:20","nodeType":"YulIdentifier","src":"15751:6:20"},"nativeSrc":"15751:25:20","nodeType":"YulFunctionCall","src":"15751:25:20"},"nativeSrc":"15751:25:20","nodeType":"YulExpressionStatement","src":"15751:25:20"},{"nativeSrc":"15938:57:20","nodeType":"YulAssignment","src":"15938:57:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:20","nodeType":"YulIdentifier","src":"15960:3:20"},"nativeSrc":"15960:5:20","nodeType":"YulFunctionCall","src":"15960:5:20"},{"kind":"number","nativeSrc":"15967:4:20","nodeType":"YulLiteral","src":"15967:4:20","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:20","nodeType":"YulIdentifier","src":"15973:3:20"},{"kind":"number","nativeSrc":"15978:4:20","nodeType":"YulLiteral","src":"15978:4:20","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:20","nodeType":"YulLiteral","src":"15984:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:20","nodeType":"YulLiteral","src":"15990:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:20","nodeType":"YulIdentifier","src":"15949:10:20"},"nativeSrc":"15949:46:20","nodeType":"YulFunctionCall","src":"15949:46:20"},"variableNames":[{"name":"success","nativeSrc":"15938:7:20","nodeType":"YulIdentifier","src":"15938:7:20"}]},{"nativeSrc":"16008:21:20","nodeType":"YulAssignment","src":"16008:21:20","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:20","nodeType":"YulLiteral","src":"16024:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:20","nodeType":"YulIdentifier","src":"16018:5:20"},"nativeSrc":"16018:11:20","nodeType":"YulFunctionCall","src":"16018:11:20"},"variableNames":[{"name":"result","nativeSrc":"16008:6:20","nodeType":"YulIdentifier","src":"16008:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4235,"isOffset":false,"isSlot":false,"src":"15698:1:20","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"15736:1:20","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"15774:1:20","valueSize":1},{"declaration":4244,"isOffset":false,"isSlot":false,"src":"16008:6:20","valueSize":1},{"declaration":4242,"isOffset":false,"isSlot":false,"src":"15938:7:20","valueSize":1}],"flags":["memory-safe"],"id":4254,"nodeType":"InlineAssembly","src":"14601:1438:20"}]},"documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"13704:738:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4256,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:20","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"b","nameLocation":"14474:1:20","nodeType":"VariableDeclaration","scope":4256,"src":"14466:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"e","nameLocation":"14485:1:20","nodeType":"VariableDeclaration","scope":4256,"src":"14477:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"m","nameLocation":"14496:1:20","nodeType":"VariableDeclaration","scope":4256,"src":"14488:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:20"},"returnParameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"success","nameLocation":"14527:7:20","nodeType":"VariableDeclaration","scope":4256,"src":"14522:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4241,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4244,"mutability":"mutable","name":"result","nameLocation":"14544:6:20","nodeType":"VariableDeclaration","scope":4256,"src":"14536:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:20"},"scope":5211,"src":"14447:1598:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4291,"nodeType":"Block","src":"16242:179:20","statements":[{"assignments":[4269,4271],"declarations":[{"constant":false,"id":4269,"mutability":"mutable","name":"success","nameLocation":"16258:7:20","nodeType":"VariableDeclaration","scope":4291,"src":"16253:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4268,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"result","nameLocation":"16280:6:20","nodeType":"VariableDeclaration","scope":4291,"src":"16267:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4270,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4277,"initialValue":{"arguments":[{"id":4273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"16300:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4274,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"16303:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4275,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"16306:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4272,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4256,4338],"referencedDeclaration":4338,"src":"16290:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:20"},{"condition":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:20","subExpression":{"id":4278,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"16323:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4288,"nodeType":"IfStatement","src":"16318:74:20","trueBody":{"id":4287,"nodeType":"Block","src":"16332:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4283,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"16358:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"16358:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4280,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"16346:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2878_$","typeString":"type(library Panic)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"16346:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4286,"nodeType":"ExpressionStatement","src":"16346:35:20"}]}},{"expression":{"id":4289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"16408:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4267,"id":4290,"nodeType":"Return","src":"16401:13:20"}]},"documentation":{"id":4257,"nodeType":"StructuredDocumentation","src":"16051:85:20","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4292,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:20","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"b","nameLocation":"16170:1:20","nodeType":"VariableDeclaration","scope":4292,"src":"16157:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4258,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"e","nameLocation":"16186:1:20","nodeType":"VariableDeclaration","scope":4292,"src":"16173:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4260,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"m","nameLocation":"16202:1:20","nodeType":"VariableDeclaration","scope":4292,"src":"16189:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4262,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:20"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"16228:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4265,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:20"},"scope":5211,"src":"16141:280:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4337,"nodeType":"Block","src":"16675:771:20","statements":[{"condition":{"arguments":[{"id":4307,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"16700:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4306,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"16689:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4316,"nodeType":"IfStatement","src":"16685:47:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4310,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4305,"id":4315,"nodeType":"Return","src":"16704:28:20"}},{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:20","nodeType":"VariableDeclaration","scope":4337,"src":"16743:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4321,"initialValue":{"expression":{"id":4319,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"16758:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:20","memberName":"length","nodeType":"MemberAccess","src":"16758:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:20"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4322,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"16848:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"16874:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:20","memberName":"length","nodeType":"MemberAccess","src":"16874:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4327,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"16884:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:20","memberName":"length","nodeType":"MemberAccess","src":"16884:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4329,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"16894:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"16900:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4331,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"16903:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4332,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"16906:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4323,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4335,"nodeType":"ExpressionStatement","src":"16848:60:20"},{"AST":{"nativeSrc":"16944:496:20","nodeType":"YulBlock","src":"16944:496:20","statements":[{"nativeSrc":"16958:32:20","nodeType":"YulVariableDeclaration","src":"16958:32:20","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:20","nodeType":"YulIdentifier","src":"16977:6:20"},{"kind":"number","nativeSrc":"16985:4:20","nodeType":"YulLiteral","src":"16985:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:20","nodeType":"YulIdentifier","src":"16973:3:20"},"nativeSrc":"16973:17:20","nodeType":"YulFunctionCall","src":"16973:17:20"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:20","nodeType":"YulTypedName","src":"16962:7:20","type":""}]},{"nativeSrc":"17080:73:20","nodeType":"YulAssignment","src":"17080:73:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:20","nodeType":"YulIdentifier","src":"17102:3:20"},"nativeSrc":"17102:5:20","nodeType":"YulFunctionCall","src":"17102:5:20"},{"kind":"number","nativeSrc":"17109:4:20","nodeType":"YulLiteral","src":"17109:4:20","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:20","nodeType":"YulIdentifier","src":"17115:7:20"},{"arguments":[{"name":"result","nativeSrc":"17130:6:20","nodeType":"YulIdentifier","src":"17130:6:20"}],"functionName":{"name":"mload","nativeSrc":"17124:5:20","nodeType":"YulIdentifier","src":"17124:5:20"},"nativeSrc":"17124:13:20","nodeType":"YulFunctionCall","src":"17124:13:20"},{"name":"dataPtr","nativeSrc":"17139:7:20","nodeType":"YulIdentifier","src":"17139:7:20"},{"name":"mLen","nativeSrc":"17148:4:20","nodeType":"YulIdentifier","src":"17148:4:20"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:20","nodeType":"YulIdentifier","src":"17091:10:20"},"nativeSrc":"17091:62:20","nodeType":"YulFunctionCall","src":"17091:62:20"},"variableNames":[{"name":"success","nativeSrc":"17080:7:20","nodeType":"YulIdentifier","src":"17080:7:20"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:20","nodeType":"YulIdentifier","src":"17309:6:20"},{"name":"mLen","nativeSrc":"17317:4:20","nodeType":"YulIdentifier","src":"17317:4:20"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:20","nodeType":"YulIdentifier","src":"17302:6:20"},"nativeSrc":"17302:20:20","nodeType":"YulFunctionCall","src":"17302:20:20"},"nativeSrc":"17302:20:20","nodeType":"YulExpressionStatement","src":"17302:20:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:20","nodeType":"YulLiteral","src":"17405:4:20","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:20","nodeType":"YulIdentifier","src":"17415:7:20"},{"name":"mLen","nativeSrc":"17424:4:20","nodeType":"YulIdentifier","src":"17424:4:20"}],"functionName":{"name":"add","nativeSrc":"17411:3:20","nodeType":"YulIdentifier","src":"17411:3:20"},"nativeSrc":"17411:18:20","nodeType":"YulFunctionCall","src":"17411:18:20"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:20","nodeType":"YulIdentifier","src":"17398:6:20"},"nativeSrc":"17398:32:20","nodeType":"YulFunctionCall","src":"17398:32:20"},"nativeSrc":"17398:32:20","nodeType":"YulExpressionStatement","src":"17398:32:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":4318,"isOffset":false,"isSlot":false,"src":"17148:4:20","valueSize":1},{"declaration":4318,"isOffset":false,"isSlot":false,"src":"17317:4:20","valueSize":1},{"declaration":4318,"isOffset":false,"isSlot":false,"src":"17424:4:20","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"16977:6:20","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"17130:6:20","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"17309:6:20","valueSize":1},{"declaration":4302,"isOffset":false,"isSlot":false,"src":"17080:7:20","valueSize":1}],"flags":["memory-safe"],"id":4336,"nodeType":"InlineAssembly","src":"16919:521:20"}]},"documentation":{"id":4293,"nodeType":"StructuredDocumentation","src":"16427:88:20","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4338,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:20","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"b","nameLocation":"16561:1:20","nodeType":"VariableDeclaration","scope":4338,"src":"16548:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4294,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4297,"mutability":"mutable","name":"e","nameLocation":"16585:1:20","nodeType":"VariableDeclaration","scope":4338,"src":"16572:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4296,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"m","nameLocation":"16609:1:20","nodeType":"VariableDeclaration","scope":4338,"src":"16596:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4298,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:20"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"success","nameLocation":"16645:7:20","nodeType":"VariableDeclaration","scope":4338,"src":"16640:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4301,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"result","nameLocation":"16667:6:20","nodeType":"VariableDeclaration","scope":4338,"src":"16654:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4303,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:20"},"scope":5211,"src":"16520:926:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4370,"nodeType":"Block","src":"17601:176:20","statements":[{"body":{"id":4366,"nodeType":"Block","src":"17658:92:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4357,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"17676:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4359,"indexExpression":{"id":4358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"17686:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4365,"nodeType":"IfStatement","src":"17672:68:20","trueBody":{"id":4364,"nodeType":"Block","src":"17695:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4345,"id":4363,"nodeType":"Return","src":"17713:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"17631:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4351,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"17635:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:20","memberName":"length","nodeType":"MemberAccess","src":"17635:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4367,"initializationExpression":{"assignments":[4347],"declarations":[{"constant":false,"id":4347,"mutability":"mutable","name":"i","nameLocation":"17624:1:20","nodeType":"VariableDeclaration","scope":4367,"src":"17616:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4349,"initialValue":{"hexValue":"30","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:20","subExpression":{"id":4354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"17655:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4356,"nodeType":"ExpressionStatement","src":"17653:3:20"},"nodeType":"ForStatement","src":"17611:139:20"},{"expression":{"hexValue":"74727565","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4345,"id":4369,"nodeType":"Return","src":"17759:11:20"}]},"documentation":{"id":4339,"nodeType":"StructuredDocumentation","src":"17452:72:20","text":" @dev Returns whether the provided byte array is zero."},"id":4371,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:20","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:20","nodeType":"VariableDeclaration","scope":4371,"src":"17549:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4340,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:20"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4371,"src":"17595:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4343,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:20"},"scope":5211,"src":"17529:248:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4589,"nodeType":"Block","src":"18137:5124:20","statements":[{"id":4588,"nodeType":"UncheckedBlock","src":"18147:5108:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"18241:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4385,"nodeType":"IfStatement","src":"18237:53:20","trueBody":{"id":4384,"nodeType":"Block","src":"18249:41:20","statements":[{"expression":{"id":4382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"18274:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4378,"id":4383,"nodeType":"Return","src":"18267:8:20"}]}},{"assignments":[4387],"declarations":[{"constant":false,"id":4387,"mutability":"mutable","name":"aa","nameLocation":"19225:2:20","nodeType":"VariableDeclaration","scope":4588,"src":"19217:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4389,"initialValue":{"id":4388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"19230:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:20"},{"assignments":[4391],"declarations":[{"constant":false,"id":4391,"mutability":"mutable","name":"xn","nameLocation":"19253:2:20","nodeType":"VariableDeclaration","scope":4588,"src":"19245:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4393,"initialValue":{"hexValue":"31","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19278:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4409,"nodeType":"IfStatement","src":"19274:92:20","trueBody":{"id":4408,"nodeType":"Block","src":"19296:70:20","statements":[{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4400,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19314:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ExpressionStatement","src":"19314:10:20"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19342:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"19342:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19383:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"IfStatement","src":"19379:90:20","trueBody":{"id":4424,"nodeType":"Block","src":"19400:69:20","statements":[{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19418:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"19418:9:20"},{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19445:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4423,"nodeType":"ExpressionStatement","src":"19445:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19486:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"nodeType":"IfStatement","src":"19482:90:20","trueBody":{"id":4440,"nodeType":"Block","src":"19503:69:20","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19521:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"19521:9:20"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19548:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"19548:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19589:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"nodeType":"IfStatement","src":"19585:89:20","trueBody":{"id":4456,"nodeType":"Block","src":"19606:68:20","statements":[{"expression":{"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4448,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19624:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4451,"nodeType":"ExpressionStatement","src":"19624:9:20"},{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4452,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19651:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4455,"nodeType":"ExpressionStatement","src":"19651:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19691:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4473,"nodeType":"IfStatement","src":"19687:87:20","trueBody":{"id":4472,"nodeType":"Block","src":"19707:67:20","statements":[{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19725:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"19725:8:20"},{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19751:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"19751:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19791:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4489,"nodeType":"IfStatement","src":"19787:87:20","trueBody":{"id":4488,"nodeType":"Block","src":"19807:67:20","statements":[{"expression":{"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19825:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4483,"nodeType":"ExpressionStatement","src":"19825:8:20"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4484,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19851:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"19851:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"19891:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"IfStatement","src":"19887:61:20","trueBody":{"id":4500,"nodeType":"Block","src":"19907:41:20","statements":[{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"19925:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"19925:8:20"}]}},{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"20368:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"20378:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"20368:18:20"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22273:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22279:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22284:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4514,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22288:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"22273:23:20"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22382:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22388:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22393:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4525,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22397:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"22382:23:20"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4533,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22493:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22499:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22504:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4536,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22508:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4543,"nodeType":"ExpressionStatement","src":"22493:23:20"},{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22602:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22608:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22613:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4547,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22617:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"22602:23:20"},{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4555,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22712:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22718:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22723:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4558,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22727:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4565,"nodeType":"ExpressionStatement","src":"22712:23:20"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22822:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22828:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22833:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4569,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"22837:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"22822:23:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"23211:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"23232:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"23237:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4582,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"23241:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4578,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"23216:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"23216:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4378,"id":4587,"nodeType":"Return","src":"23204:40:20"}]}]},"documentation":{"id":4372,"nodeType":"StructuredDocumentation","src":"17783:292:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4590,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:20","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"a","nameLocation":"18102:1:20","nodeType":"VariableDeclaration","scope":4590,"src":"18094:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:20"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4590,"src":"18128:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:20"},"scope":5211,"src":"18080:5181:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4623,"nodeType":"Block","src":"23434:171:20","statements":[{"id":4622,"nodeType":"UncheckedBlock","src":"23444:155:20","statements":[{"assignments":[4602],"declarations":[{"constant":false,"id":4602,"mutability":"mutable","name":"result","nameLocation":"23476:6:20","nodeType":"VariableDeclaration","scope":4622,"src":"23468:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4606,"initialValue":{"arguments":[{"id":4604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"23490:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4603,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4590,4624],"referencedDeclaration":4590,"src":"23485:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"23513:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4611,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"23555:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}],"id":4610,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"23538:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3617_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"23568:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"23577:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"23586:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4608,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"23522:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"23522:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4600,"id":4621,"nodeType":"Return","src":"23506:82:20"}]}]},"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"23267:86:20","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4624,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:20","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"a","nameLocation":"23380:1:20","nodeType":"VariableDeclaration","scope":4624,"src":"23372:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:20","nodeType":"VariableDeclaration","scope":4624,"src":"23383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"},"typeName":{"id":4595,"nodeType":"UserDefinedTypeName","pathNode":{"id":4594,"name":"Rounding","nameLocations":["23383:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"23383:8:20"},"referencedDeclaration":3617,"src":"23383:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:20"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4624,"src":"23425:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:20"},"scope":5211,"src":"23358:247:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"23796:981:20","statements":[{"assignments":[4633],"declarations":[{"constant":false,"id":4633,"mutability":"mutable","name":"result","nameLocation":"23814:6:20","nodeType":"VariableDeclaration","scope":4819,"src":"23806:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4635,"initialValue":{"hexValue":"30","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:20"},{"assignments":[4637],"declarations":[{"constant":false,"id":4637,"mutability":"mutable","name":"exp","nameLocation":"23842:3:20","nodeType":"VariableDeclaration","scope":4819,"src":"23834:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4638,"nodeType":"VariableDeclarationStatement","src":"23834:11:20"},{"id":4816,"nodeType":"UncheckedBlock","src":"23855:893:20","statements":[{"expression":{"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4639,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"23879:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"23907:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4641,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"23891:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"23891:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4654,"nodeType":"ExpressionStatement","src":"23879:51:20"},{"expression":{"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"23944:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4656,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"23954:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4658,"nodeType":"ExpressionStatement","src":"23944:13:20"},{"expression":{"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"23971:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4660,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"23981:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4662,"nodeType":"ExpressionStatement","src":"23971:13:20"},{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4663,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"23999:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24026:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4665,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24010:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24010:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4678,"nodeType":"ExpressionStatement","src":"23999:49:20"},{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24062:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4680,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24072:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"24062:13:20"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24089:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4684,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24099:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"24089:13:20"},{"expression":{"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24117:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24144:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24128:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24128:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4702,"nodeType":"ExpressionStatement","src":"24117:49:20"},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24180:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4704,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24190:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"24180:13:20"},{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24207:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4708,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24217:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4710,"nodeType":"ExpressionStatement","src":"24207:13:20"},{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4711,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24235:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24262:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4713,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24246:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24246:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ExpressionStatement","src":"24235:49:20"},{"expression":{"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24298:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4728,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24308:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4730,"nodeType":"ExpressionStatement","src":"24298:13:20"},{"expression":{"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24325:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4732,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24335:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4734,"nodeType":"ExpressionStatement","src":"24325:13:20"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4735,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24353:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4737,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24363:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24363:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4750,"nodeType":"ExpressionStatement","src":"24353:47:20"},{"expression":{"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24414:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4752,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24424:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4754,"nodeType":"ExpressionStatement","src":"24414:13:20"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24441:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4756,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24451:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4758,"nodeType":"ExpressionStatement","src":"24441:13:20"},{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4759,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24469:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24495:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4761,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24479:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24479:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"nodeType":"ExpressionStatement","src":"24469:47:20"},{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24530:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4776,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24540:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4778,"nodeType":"ExpressionStatement","src":"24530:13:20"},{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24557:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4780,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24567:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4782,"nodeType":"ExpressionStatement","src":"24557:13:20"},{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4783,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24585:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24611:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24595:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24595:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4798,"nodeType":"ExpressionStatement","src":"24585:47:20"},{"expression":{"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24646:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4800,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24656:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4802,"nodeType":"ExpressionStatement","src":"24646:13:20"},{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24673:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4804,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"24683:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4806,"nodeType":"ExpressionStatement","src":"24673:13:20"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24701:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"24727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4808,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"24711:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"24711:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"24701:36:20"}]},{"expression":{"id":4817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"24764:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4631,"id":4818,"nodeType":"Return","src":"24757:13:20"}]},"documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"23611:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:20","nodeType":"FunctionDefinition","parameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"value","nameLocation":"23757:5:20","nodeType":"VariableDeclaration","scope":4820,"src":"23749:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:20"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4820,"src":"23787:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:20"},"scope":5211,"src":"23735:1042:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"25010:175:20","statements":[{"id":4852,"nodeType":"UncheckedBlock","src":"25020:159:20","statements":[{"assignments":[4832],"declarations":[{"constant":false,"id":4832,"mutability":"mutable","name":"result","nameLocation":"25052:6:20","nodeType":"VariableDeclaration","scope":4852,"src":"25044:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4831,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4836,"initialValue":{"arguments":[{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"25066:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4833,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4820,4854],"referencedDeclaration":4820,"src":"25061:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"25093:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4841,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"25135:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}],"id":4840,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"25118:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3617_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"25153:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"25162:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4838,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"25102:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"25102:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4830,"id":4851,"nodeType":"Return","src":"25086:82:20"}]}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"24783:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:20","nodeType":"FunctionDefinition","parameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"value","nameLocation":"24952:5:20","nodeType":"VariableDeclaration","scope":4854,"src":"24944:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4826,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:20","nodeType":"VariableDeclaration","scope":4854,"src":"24959:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"},"typeName":{"id":4825,"nodeType":"UserDefinedTypeName","pathNode":{"id":4824,"name":"Rounding","nameLocations":["24959:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"24959:8:20"},"referencedDeclaration":3617,"src":"24959:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:20"},"returnParameters":{"id":4830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"25001:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:20"},"scope":5211,"src":"24930:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4982,"nodeType":"Block","src":"25378:854:20","statements":[{"assignments":[4863],"declarations":[{"constant":false,"id":4863,"mutability":"mutable","name":"result","nameLocation":"25396:6:20","nodeType":"VariableDeclaration","scope":4982,"src":"25388:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4865,"initialValue":{"hexValue":"30","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:20"},{"id":4979,"nodeType":"UncheckedBlock","src":"25416:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25444:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4882,"nodeType":"IfStatement","src":"25440:103:20","trueBody":{"id":4881,"nodeType":"Block","src":"25463:80:20","statements":[{"expression":{"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25481:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4876,"nodeType":"ExpressionStatement","src":"25481:17:20"},{"expression":{"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"25516:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4880,"nodeType":"ExpressionStatement","src":"25516:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25560:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4899,"nodeType":"IfStatement","src":"25556:103:20","trueBody":{"id":4898,"nodeType":"Block","src":"25579:80:20","statements":[{"expression":{"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25597:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4893,"nodeType":"ExpressionStatement","src":"25597:17:20"},{"expression":{"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"25632:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4897,"nodeType":"ExpressionStatement","src":"25632:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25676:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"25672:103:20","trueBody":{"id":4915,"nodeType":"Block","src":"25695:80:20","statements":[{"expression":{"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25713:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4910,"nodeType":"ExpressionStatement","src":"25713:17:20"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"25748:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"25748:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25792:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4933,"nodeType":"IfStatement","src":"25788:100:20","trueBody":{"id":4932,"nodeType":"Block","src":"25810:78:20","statements":[{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25828:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4927,"nodeType":"ExpressionStatement","src":"25828:16:20"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"25862:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4931,"nodeType":"ExpressionStatement","src":"25862:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25905:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4950,"nodeType":"IfStatement","src":"25901:100:20","trueBody":{"id":4949,"nodeType":"Block","src":"25923:78:20","statements":[{"expression":{"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25941:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4944,"nodeType":"ExpressionStatement","src":"25941:16:20"},{"expression":{"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"25975:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4948,"nodeType":"ExpressionStatement","src":"25975:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"26018:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"26014:100:20","trueBody":{"id":4966,"nodeType":"Block","src":"26036:78:20","statements":[{"expression":{"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"26054:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4961,"nodeType":"ExpressionStatement","src":"26054:16:20"},{"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"26088:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4965,"nodeType":"ExpressionStatement","src":"26088:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"26131:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4978,"nodeType":"IfStatement","src":"26127:66:20","trueBody":{"id":4977,"nodeType":"Block","src":"26149:44:20","statements":[{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"26167:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"26167:11:20"}]}}]},{"expression":{"id":4980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"26219:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4861,"id":4981,"nodeType":"Return","src":"26212:13:20"}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"25191:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4983,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:20","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"value","nameLocation":"25339:5:20","nodeType":"VariableDeclaration","scope":4983,"src":"25331:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:20"},"returnParameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4983,"src":"25369:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:20"},"scope":5211,"src":"25316:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5016,"nodeType":"Block","src":"26467:177:20","statements":[{"id":5015,"nodeType":"UncheckedBlock","src":"26477:161:20","statements":[{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"result","nameLocation":"26509:6:20","nodeType":"VariableDeclaration","scope":5015,"src":"26501:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"arguments":[{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"26524:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4983,5017],"referencedDeclaration":4983,"src":"26518:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"26551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5004,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"26593:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}],"id":5003,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"26576:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3617_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"26612:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"26621:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5001,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"26560:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"26560:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4993,"id":5014,"nodeType":"Return","src":"26544:83:20"}]}]},"documentation":{"id":4984,"nodeType":"StructuredDocumentation","src":"26238:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5017,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:20","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"value","nameLocation":"26409:5:20","nodeType":"VariableDeclaration","scope":5017,"src":"26401:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:20","nodeType":"VariableDeclaration","scope":5017,"src":"26416:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"},"typeName":{"id":4988,"nodeType":"UserDefinedTypeName","pathNode":{"id":4987,"name":"Rounding","nameLocations":["26416:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"26416:8:20"},"referencedDeclaration":3617,"src":"26416:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:20"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5017,"src":"26458:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:20"},"scope":5211,"src":"26386:258:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5153,"nodeType":"Block","src":"26964:674:20","statements":[{"assignments":[5026],"declarations":[{"constant":false,"id":5026,"mutability":"mutable","name":"result","nameLocation":"26982:6:20","nodeType":"VariableDeclaration","scope":5153,"src":"26974:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5028,"initialValue":{"hexValue":"30","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:20"},{"assignments":[5030],"declarations":[{"constant":false,"id":5030,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:20","nodeType":"VariableDeclaration","scope":5153,"src":"27002:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5031,"nodeType":"VariableDeclarationStatement","src":"27002:12:20"},{"id":5150,"nodeType":"UncheckedBlock","src":"27024:585:20","statements":[{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5032,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27048:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27071:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5033,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"27055:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"27055:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"27048:46:20"},{"expression":{"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27108:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27118:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5051,"nodeType":"ExpressionStatement","src":"27108:20:20"},{"expression":{"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"27142:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5053,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27152:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5057,"nodeType":"ExpressionStatement","src":"27142:19:20"},{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5058,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27176:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27199:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5059,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"27183:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"27183:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5071,"nodeType":"ExpressionStatement","src":"27176:45:20"},{"expression":{"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27235:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27245:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5077,"nodeType":"ExpressionStatement","src":"27235:19:20"},{"expression":{"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"27268:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5079,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27278:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5083,"nodeType":"ExpressionStatement","src":"27268:18:20"},{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5084,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27301:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27324:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5085,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"27308:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"27308:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"27301:45:20"},{"expression":{"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27360:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5099,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27370:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"nodeType":"ExpressionStatement","src":"27360:19:20"},{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"27393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27403:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5109,"nodeType":"ExpressionStatement","src":"27393:18:20"},{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5110,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27426:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5111,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"27433:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"27433:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"27426:45:20"},{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27485:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27495:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5129,"nodeType":"ExpressionStatement","src":"27485:19:20"},{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"27518:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"27528:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"27518:18:20"},{"expression":{"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"27577:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5137,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"27561:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"27561:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5149,"nodeType":"ExpressionStatement","src":"27551:47:20"}]},{"expression":{"id":5151,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"27625:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5024,"id":5152,"nodeType":"Return","src":"27618:13:20"}]},"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"26650:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5154,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:20","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"value","nameLocation":"26925:5:20","nodeType":"VariableDeclaration","scope":5154,"src":"26917:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:20"},"returnParameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5154,"src":"26955:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:20"},"scope":5211,"src":"26901:737:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"27875:184:20","statements":[{"id":5189,"nodeType":"UncheckedBlock","src":"27885:168:20","statements":[{"assignments":[5166],"declarations":[{"constant":false,"id":5166,"mutability":"mutable","name":"result","nameLocation":"27917:6:20","nodeType":"VariableDeclaration","scope":5189,"src":"27909:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5170,"initialValue":{"arguments":[{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"27933:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5167,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5154,5191],"referencedDeclaration":5154,"src":"27926:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"27960:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5175,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"28002:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}],"id":5174,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"27985:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3617_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"28021:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"28036:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5172,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"27969:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"27969:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5164,"id":5188,"nodeType":"Return","src":"27953:89:20"}]}]},"documentation":{"id":5155,"nodeType":"StructuredDocumentation","src":"27644:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:20","nodeType":"FunctionDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"value","nameLocation":"27817:5:20","nodeType":"VariableDeclaration","scope":5191,"src":"27809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5160,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:20","nodeType":"VariableDeclaration","scope":5191,"src":"27824:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"},"typeName":{"id":5159,"nodeType":"UserDefinedTypeName","pathNode":{"id":5158,"name":"Rounding","nameLocations":["27824:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"27824:8:20"},"referencedDeclaration":3617,"src":"27824:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:20"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5191,"src":"27866:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:20"},"scope":5211,"src":"27793:266:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5209,"nodeType":"Block","src":"28257:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5202,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"28280:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}],"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5200,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:20","typeDescriptions":{}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5199,"id":5208,"nodeType":"Return","src":"28267:31:20"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"28065:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5210,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:20","nodeType":"FunctionDefinition","parameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:20","nodeType":"VariableDeclaration","scope":5210,"src":"28209:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"},"typeName":{"id":5194,"nodeType":"UserDefinedTypeName","pathNode":{"id":5193,"name":"Rounding","nameLocations":["28209:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"28209:8:20"},"referencedDeclaration":3617,"src":"28209:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3617","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:20"},"returnParameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5210,"src":"28251:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5197,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:20"},"scope":5211,"src":"28183:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5212,"src":"281:28026:20","usedErrors":[],"usedEvents":[]}],"src":"103:28205:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6976]},"id":6977,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5213,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5214,"nodeType":"StructuredDocumentation","src":"218:550:21","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6976,"linearizedBaseContracts":[6976],"name":"SafeCast","nameLocation":"777:8:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"792:68:21","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5221,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:21","nodeType":"ErrorDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"bits","nameLocation":"908:4:21","nodeType":"VariableDeclaration","scope":5221,"src":"902:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5216,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5219,"mutability":"mutable","name":"value","nameLocation":"922:5:21","nodeType":"VariableDeclaration","scope":5221,"src":"914:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:21"},"src":"865:64:21"},{"documentation":{"id":5222,"nodeType":"StructuredDocumentation","src":"935:75:21","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5226,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:21","nodeType":"ErrorDefinition","parameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"value","nameLocation":"1056:5:21","nodeType":"VariableDeclaration","scope":5226,"src":"1049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5223,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:21"},"src":"1015:48:21"},{"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"1069:67:21","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5233,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:21","nodeType":"ErrorDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"bits","nameLocation":"1183:4:21","nodeType":"VariableDeclaration","scope":5233,"src":"1177:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5228,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"value","nameLocation":"1196:5:21","nodeType":"VariableDeclaration","scope":5233,"src":"1189:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5230,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:21"},"src":"1141:62:21"},{"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"1209:75:21","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5238,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:21","nodeType":"ErrorDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"1331:5:21","nodeType":"VariableDeclaration","scope":5238,"src":"1323:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:21"},"src":"1289:49:21"},{"body":{"id":5265,"nodeType":"Block","src":"1695:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"1709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5248,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5247,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:21","memberName":"max","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5259,"nodeType":"IfStatement","src":"1705:105:21","trueBody":{"id":5258,"nodeType":"Block","src":"1736:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"1793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5253,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"1757:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5257,"nodeType":"RevertStatement","src":"1750:49:21"}]}},{"expression":{"arguments":[{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5260,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:21","typeDescriptions":{}}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5245,"id":5264,"nodeType":"Return","src":"1819:21:21"}]},"documentation":{"id":5239,"nodeType":"StructuredDocumentation","src":"1344:280:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5266,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:21","nodeType":"FunctionDefinition","parameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"value","nameLocation":"1656:5:21","nodeType":"VariableDeclaration","scope":5266,"src":"1648:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:21"},"returnParameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5266,"src":"1686:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5243,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:21"},"scope":6976,"src":"1629:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5293,"nodeType":"Block","src":"2204:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5276,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5275,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:21","memberName":"max","nodeType":"MemberAccess","src":"2226:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5287,"nodeType":"IfStatement","src":"2214:105:21","trueBody":{"id":5286,"nodeType":"Block","src":"2245:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5281,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2266:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5285,"nodeType":"RevertStatement","src":"2259:49:21"}]}},{"expression":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5288,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:21","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5273,"id":5292,"nodeType":"Return","src":"2328:21:21"}]},"documentation":{"id":5267,"nodeType":"StructuredDocumentation","src":"1853:280:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5294,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:21","nodeType":"FunctionDefinition","parameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"value","nameLocation":"2165:5:21","nodeType":"VariableDeclaration","scope":5294,"src":"2157:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5268,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:21"},"returnParameters":{"id":5273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5294,"src":"2195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5271,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:21"},"scope":6976,"src":"2138:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"2713:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5304,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5303,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:21","memberName":"max","nodeType":"MemberAccess","src":"2735:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5315,"nodeType":"IfStatement","src":"2723:105:21","trueBody":{"id":5314,"nodeType":"Block","src":"2754:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"2811:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5309,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2775:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5313,"nodeType":"RevertStatement","src":"2768:49:21"}]}},{"expression":{"arguments":[{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5316,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:21","typeDescriptions":{}}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5301,"id":5320,"nodeType":"Return","src":"2837:21:21"}]},"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"2362:280:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:21","nodeType":"FunctionDefinition","parameters":{"id":5298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"value","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":5322,"src":"2666:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:21"},"returnParameters":{"id":5301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5322,"src":"2704:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5299,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:21"},"scope":6976,"src":"2647:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5349,"nodeType":"Block","src":"3222:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"3236:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5332,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5331,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:21","memberName":"max","nodeType":"MemberAccess","src":"3244:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5343,"nodeType":"IfStatement","src":"3232:105:21","trueBody":{"id":5342,"nodeType":"Block","src":"3263:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"3320:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5337,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"3284:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5341,"nodeType":"RevertStatement","src":"3277:49:21"}]}},{"expression":{"arguments":[{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"3361:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5344,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:21","typeDescriptions":{}}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5329,"id":5348,"nodeType":"Return","src":"3346:21:21"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"2871:280:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5350,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:21","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"value","nameLocation":"3183:5:21","nodeType":"VariableDeclaration","scope":5350,"src":"3175:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:21"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5350,"src":"3213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5327,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:21"},"scope":6976,"src":"3156:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5377,"nodeType":"Block","src":"3731:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5360,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:21","memberName":"max","nodeType":"MemberAccess","src":"3753:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5371,"nodeType":"IfStatement","src":"3741:105:21","trueBody":{"id":5370,"nodeType":"Block","src":"3772:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"3829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"3793:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5369,"nodeType":"RevertStatement","src":"3786:49:21"}]}},{"expression":{"arguments":[{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"3870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5372,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:21","typeDescriptions":{}}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5357,"id":5376,"nodeType":"Return","src":"3855:21:21"}]},"documentation":{"id":5351,"nodeType":"StructuredDocumentation","src":"3380:280:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5378,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:21","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5353,"mutability":"mutable","name":"value","nameLocation":"3692:5:21","nodeType":"VariableDeclaration","scope":5378,"src":"3684:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:21"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5378,"src":"3722:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5355,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:21"},"scope":6976,"src":"3665:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5405,"nodeType":"Block","src":"4240:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"4254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5388,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:21","memberName":"max","nodeType":"MemberAccess","src":"4262:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"nodeType":"IfStatement","src":"4250:105:21","trueBody":{"id":5398,"nodeType":"Block","src":"4281:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"4338:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4302:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5397,"nodeType":"RevertStatement","src":"4295:49:21"}]}},{"expression":{"arguments":[{"id":5402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"4379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5400,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:21","typeDescriptions":{}}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5385,"id":5404,"nodeType":"Return","src":"4364:21:21"}]},"documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"3889:280:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5406,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:21","nodeType":"FunctionDefinition","parameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5381,"mutability":"mutable","name":"value","nameLocation":"4201:5:21","nodeType":"VariableDeclaration","scope":5406,"src":"4193:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:21"},"returnParameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5406,"src":"4231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5383,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:21"},"scope":6976,"src":"4174:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5433,"nodeType":"Block","src":"4749:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"4763:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5416,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5415,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:21","memberName":"max","nodeType":"MemberAccess","src":"4771:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5427,"nodeType":"IfStatement","src":"4759:105:21","trueBody":{"id":5426,"nodeType":"Block","src":"4790:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"4847:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4811:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5425,"nodeType":"RevertStatement","src":"4804:49:21"}]}},{"expression":{"arguments":[{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"4888:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5428,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:21","typeDescriptions":{}}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5413,"id":5432,"nodeType":"Return","src":"4873:21:21"}]},"documentation":{"id":5407,"nodeType":"StructuredDocumentation","src":"4398:280:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:21","nodeType":"FunctionDefinition","parameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"value","nameLocation":"4710:5:21","nodeType":"VariableDeclaration","scope":5434,"src":"4702:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:21"},"returnParameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5434,"src":"4740:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5411,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:21"},"scope":6976,"src":"4683:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5461,"nodeType":"Block","src":"5258:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"5272:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5444,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:21","memberName":"max","nodeType":"MemberAccess","src":"5280:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5455,"nodeType":"IfStatement","src":"5268:105:21","trueBody":{"id":5454,"nodeType":"Block","src":"5299:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"5356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5449,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"5320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5453,"nodeType":"RevertStatement","src":"5313:49:21"}]}},{"expression":{"arguments":[{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"5397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5456,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:21","typeDescriptions":{}}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5441,"id":5460,"nodeType":"Return","src":"5382:21:21"}]},"documentation":{"id":5435,"nodeType":"StructuredDocumentation","src":"4907:280:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5462,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:21","nodeType":"FunctionDefinition","parameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"value","nameLocation":"5219:5:21","nodeType":"VariableDeclaration","scope":5462,"src":"5211:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:21"},"returnParameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5462,"src":"5249:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5439,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:21"},"scope":6976,"src":"5192:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5489,"nodeType":"Block","src":"5767:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"5781:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5472,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5471,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:21","memberName":"max","nodeType":"MemberAccess","src":"5789:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5483,"nodeType":"IfStatement","src":"5777:105:21","trueBody":{"id":5482,"nodeType":"Block","src":"5808:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"5865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5477,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"5829:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5481,"nodeType":"RevertStatement","src":"5822:49:21"}]}},{"expression":{"arguments":[{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"5906:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5484,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{}}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5469,"id":5488,"nodeType":"Return","src":"5891:21:21"}]},"documentation":{"id":5463,"nodeType":"StructuredDocumentation","src":"5416:280:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5490,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:21","nodeType":"FunctionDefinition","parameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"value","nameLocation":"5728:5:21","nodeType":"VariableDeclaration","scope":5490,"src":"5720:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:21"},"returnParameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5490,"src":"5758:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5467,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:21"},"scope":6976,"src":"5701:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5517,"nodeType":"Block","src":"6276:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"6290:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5500,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5499,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:21","memberName":"max","nodeType":"MemberAccess","src":"6298:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"6286:105:21","trueBody":{"id":5510,"nodeType":"Block","src":"6317:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"6374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5505,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"6338:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5509,"nodeType":"RevertStatement","src":"6331:49:21"}]}},{"expression":{"arguments":[{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"6415:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5512,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{}}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5497,"id":5516,"nodeType":"Return","src":"6400:21:21"}]},"documentation":{"id":5491,"nodeType":"StructuredDocumentation","src":"5925:280:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5518,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:21","nodeType":"FunctionDefinition","parameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"value","nameLocation":"6237:5:21","nodeType":"VariableDeclaration","scope":5518,"src":"6229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:21"},"returnParameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5518,"src":"6267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5495,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:21"},"scope":6976,"src":"6210:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5545,"nodeType":"Block","src":"6785:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"6799:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5528,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:21","memberName":"max","nodeType":"MemberAccess","src":"6807:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5539,"nodeType":"IfStatement","src":"6795:105:21","trueBody":{"id":5538,"nodeType":"Block","src":"6826:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"6883:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5533,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"6847:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5537,"nodeType":"RevertStatement","src":"6840:49:21"}]}},{"expression":{"arguments":[{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"6924:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5540,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:21","typeDescriptions":{}}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5525,"id":5544,"nodeType":"Return","src":"6909:21:21"}]},"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"6434:280:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5546,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:21","nodeType":"FunctionDefinition","parameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"value","nameLocation":"6746:5:21","nodeType":"VariableDeclaration","scope":5546,"src":"6738:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:21"},"returnParameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5546,"src":"6776:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5523,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:21"},"scope":6976,"src":"6719:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5573,"nodeType":"Block","src":"7294:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"7308:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5556,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5555,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:21","memberName":"max","nodeType":"MemberAccess","src":"7316:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5567,"nodeType":"IfStatement","src":"7304:105:21","trueBody":{"id":5566,"nodeType":"Block","src":"7335:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"7392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5561,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"7356:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5565,"nodeType":"RevertStatement","src":"7349:49:21"}]}},{"expression":{"arguments":[{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"7433:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5568,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:21","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5553,"id":5572,"nodeType":"Return","src":"7418:21:21"}]},"documentation":{"id":5547,"nodeType":"StructuredDocumentation","src":"6943:280:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5574,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:21","nodeType":"FunctionDefinition","parameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"value","nameLocation":"7255:5:21","nodeType":"VariableDeclaration","scope":5574,"src":"7247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:21"},"returnParameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5574,"src":"7285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5551,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:21"},"scope":6976,"src":"7228:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5601,"nodeType":"Block","src":"7803:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"7817:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5584,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:21","memberName":"max","nodeType":"MemberAccess","src":"7825:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"IfStatement","src":"7813:105:21","trueBody":{"id":5594,"nodeType":"Block","src":"7844:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"7901:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5589,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"7865:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5593,"nodeType":"RevertStatement","src":"7858:49:21"}]}},{"expression":{"arguments":[{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"7942:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5596,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:21","typeDescriptions":{}}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5581,"id":5600,"nodeType":"Return","src":"7927:21:21"}]},"documentation":{"id":5575,"nodeType":"StructuredDocumentation","src":"7452:280:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:21","nodeType":"FunctionDefinition","parameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"value","nameLocation":"7764:5:21","nodeType":"VariableDeclaration","scope":5602,"src":"7756:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:21"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5602,"src":"7794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5579,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:21"},"scope":6976,"src":"7737:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5629,"nodeType":"Block","src":"8312:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8326:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5612,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:21","memberName":"max","nodeType":"MemberAccess","src":"8334:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5623,"nodeType":"IfStatement","src":"8322:105:21","trueBody":{"id":5622,"nodeType":"Block","src":"8353:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5617,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"8374:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5621,"nodeType":"RevertStatement","src":"8367:49:21"}]}},{"expression":{"arguments":[{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8451:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5624,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:21","typeDescriptions":{}}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5609,"id":5628,"nodeType":"Return","src":"8436:21:21"}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"7961:280:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5630,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:21","nodeType":"FunctionDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"value","nameLocation":"8273:5:21","nodeType":"VariableDeclaration","scope":5630,"src":"8265:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5604,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:21"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5630,"src":"8303:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5607,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:21"},"scope":6976,"src":"8246:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5657,"nodeType":"Block","src":"8821:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"8835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5640,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:21","memberName":"max","nodeType":"MemberAccess","src":"8843:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5651,"nodeType":"IfStatement","src":"8831:105:21","trueBody":{"id":5650,"nodeType":"Block","src":"8862:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"8919:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5645,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"8883:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5649,"nodeType":"RevertStatement","src":"8876:49:21"}]}},{"expression":{"arguments":[{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"8960:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5652,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:21","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5637,"id":5656,"nodeType":"Return","src":"8945:21:21"}]},"documentation":{"id":5631,"nodeType":"StructuredDocumentation","src":"8470:280:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5658,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:21","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"value","nameLocation":"8782:5:21","nodeType":"VariableDeclaration","scope":5658,"src":"8774:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:21"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5658,"src":"8812:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5635,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:21"},"scope":6976,"src":"8755:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5685,"nodeType":"Block","src":"9330:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"9344:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5668,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:21","memberName":"max","nodeType":"MemberAccess","src":"9352:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5679,"nodeType":"IfStatement","src":"9340:105:21","trueBody":{"id":5678,"nodeType":"Block","src":"9371:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"9428:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9392:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5677,"nodeType":"RevertStatement","src":"9385:49:21"}]}},{"expression":{"arguments":[{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"9469:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5680,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{}}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5665,"id":5684,"nodeType":"Return","src":"9454:21:21"}]},"documentation":{"id":5659,"nodeType":"StructuredDocumentation","src":"8979:280:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5686,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:21","nodeType":"FunctionDefinition","parameters":{"id":5662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5661,"mutability":"mutable","name":"value","nameLocation":"9291:5:21","nodeType":"VariableDeclaration","scope":5686,"src":"9283:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5660,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:21"},"returnParameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5686,"src":"9321:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5663,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:21"},"scope":6976,"src":"9264:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5713,"nodeType":"Block","src":"9839:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"9853:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5696,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5695,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:21","memberName":"max","nodeType":"MemberAccess","src":"9861:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5707,"nodeType":"IfStatement","src":"9849:105:21","trueBody":{"id":5706,"nodeType":"Block","src":"9880:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"9937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5701,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9901:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5705,"nodeType":"RevertStatement","src":"9894:49:21"}]}},{"expression":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"9978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5708,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:21","typeDescriptions":{}}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5693,"id":5712,"nodeType":"Return","src":"9963:21:21"}]},"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"9488:280:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5714,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:21","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"value","nameLocation":"9800:5:21","nodeType":"VariableDeclaration","scope":5714,"src":"9792:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:21"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5714,"src":"9830:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5691,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:21"},"scope":6976,"src":"9773:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5741,"nodeType":"Block","src":"10348:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"10362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5724,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:21","memberName":"max","nodeType":"MemberAccess","src":"10370:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5735,"nodeType":"IfStatement","src":"10358:105:21","trueBody":{"id":5734,"nodeType":"Block","src":"10389:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"10446:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"10410:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5733,"nodeType":"RevertStatement","src":"10403:49:21"}]}},{"expression":{"arguments":[{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5736,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:21","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5721,"id":5740,"nodeType":"Return","src":"10472:21:21"}]},"documentation":{"id":5715,"nodeType":"StructuredDocumentation","src":"9997:280:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:21","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"value","nameLocation":"10309:5:21","nodeType":"VariableDeclaration","scope":5742,"src":"10301:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:21"},"returnParameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5742,"src":"10339:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5719,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:21"},"scope":6976,"src":"10282:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5769,"nodeType":"Block","src":"10857:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"10871:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5752,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:21","memberName":"max","nodeType":"MemberAccess","src":"10879:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5763,"nodeType":"IfStatement","src":"10867:105:21","trueBody":{"id":5762,"nodeType":"Block","src":"10898:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"10955:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"10919:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5761,"nodeType":"RevertStatement","src":"10912:49:21"}]}},{"expression":{"arguments":[{"id":5766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"10996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5764,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:21","typeDescriptions":{}}},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5749,"id":5768,"nodeType":"Return","src":"10981:21:21"}]},"documentation":{"id":5743,"nodeType":"StructuredDocumentation","src":"10506:280:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5770,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:21","nodeType":"FunctionDefinition","parameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"value","nameLocation":"10818:5:21","nodeType":"VariableDeclaration","scope":5770,"src":"10810:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5744,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:21"},"returnParameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5770,"src":"10848:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5747,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:21"},"scope":6976,"src":"10791:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5797,"nodeType":"Block","src":"11360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"11374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5780,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:21","memberName":"max","nodeType":"MemberAccess","src":"11382:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5791,"nodeType":"IfStatement","src":"11370:103:21","trueBody":{"id":5790,"nodeType":"Block","src":"11400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"11456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5785,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"11421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5789,"nodeType":"RevertStatement","src":"11414:48:21"}]}},{"expression":{"arguments":[{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"11496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5792,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:21","typeDescriptions":{}}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5777,"id":5796,"nodeType":"Return","src":"11482:20:21"}]},"documentation":{"id":5771,"nodeType":"StructuredDocumentation","src":"11015:276:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5798,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"value","nameLocation":"11322:5:21","nodeType":"VariableDeclaration","scope":5798,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:21"},"returnParameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5798,"src":"11352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5775,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:21"},"scope":6976,"src":"11296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"11860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"11874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5808,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:21","memberName":"max","nodeType":"MemberAccess","src":"11882:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5819,"nodeType":"IfStatement","src":"11870:103:21","trueBody":{"id":5818,"nodeType":"Block","src":"11900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"11956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5813,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"11921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5817,"nodeType":"RevertStatement","src":"11914:48:21"}]}},{"expression":{"arguments":[{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"11996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5820,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:21","typeDescriptions":{}}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5805,"id":5824,"nodeType":"Return","src":"11982:20:21"}]},"documentation":{"id":5799,"nodeType":"StructuredDocumentation","src":"11515:276:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"mutability":"mutable","name":"value","nameLocation":"11822:5:21","nodeType":"VariableDeclaration","scope":5826,"src":"11814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5800,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:21"},"returnParameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5826,"src":"11852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5803,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:21"},"scope":6976,"src":"11796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5853,"nodeType":"Block","src":"12360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"12374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5836,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:21","memberName":"max","nodeType":"MemberAccess","src":"12382:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5847,"nodeType":"IfStatement","src":"12370:103:21","trueBody":{"id":5846,"nodeType":"Block","src":"12400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"12456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5841,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5845,"nodeType":"RevertStatement","src":"12414:48:21"}]}},{"expression":{"arguments":[{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"12496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5848,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:21","typeDescriptions":{}}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5833,"id":5852,"nodeType":"Return","src":"12482:20:21"}]},"documentation":{"id":5827,"nodeType":"StructuredDocumentation","src":"12015:276:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5854,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"value","nameLocation":"12322:5:21","nodeType":"VariableDeclaration","scope":5854,"src":"12314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:21"},"returnParameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5854,"src":"12352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5831,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:21"},"scope":6976,"src":"12296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5881,"nodeType":"Block","src":"12860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5864,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:21","memberName":"max","nodeType":"MemberAccess","src":"12882:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"12870:103:21","trueBody":{"id":5874,"nodeType":"Block","src":"12900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5873,"nodeType":"RevertStatement","src":"12914:48:21"}]}},{"expression":{"arguments":[{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5876,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:21","typeDescriptions":{}}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5861,"id":5880,"nodeType":"Return","src":"12982:20:21"}]},"documentation":{"id":5855,"nodeType":"StructuredDocumentation","src":"12515:276:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5882,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"value","nameLocation":"12822:5:21","nodeType":"VariableDeclaration","scope":5882,"src":"12814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:21"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5882,"src":"12852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5859,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:21"},"scope":6976,"src":"12796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5909,"nodeType":"Block","src":"13360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"13374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5892,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:21","memberName":"max","nodeType":"MemberAccess","src":"13382:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5903,"nodeType":"IfStatement","src":"13370:103:21","trueBody":{"id":5902,"nodeType":"Block","src":"13400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"13456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5897,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"13421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5901,"nodeType":"RevertStatement","src":"13414:48:21"}]}},{"expression":{"arguments":[{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"13496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5904,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:21","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5889,"id":5908,"nodeType":"Return","src":"13482:20:21"}]},"documentation":{"id":5883,"nodeType":"StructuredDocumentation","src":"13015:276:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"value","nameLocation":"13322:5:21","nodeType":"VariableDeclaration","scope":5910,"src":"13314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:21"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5910,"src":"13352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5887,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:21"},"scope":6976,"src":"13296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"13860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"13874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5920,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:21","memberName":"max","nodeType":"MemberAccess","src":"13882:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5931,"nodeType":"IfStatement","src":"13870:103:21","trueBody":{"id":5930,"nodeType":"Block","src":"13900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"13956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"13921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5929,"nodeType":"RevertStatement","src":"13914:48:21"}]}},{"expression":{"arguments":[{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"13996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5932,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:21","typeDescriptions":{}}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5917,"id":5936,"nodeType":"Return","src":"13982:20:21"}]},"documentation":{"id":5911,"nodeType":"StructuredDocumentation","src":"13515:276:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"value","nameLocation":"13822:5:21","nodeType":"VariableDeclaration","scope":5938,"src":"13814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:21"},"returnParameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5938,"src":"13852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5915,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:21"},"scope":6976,"src":"13796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5965,"nodeType":"Block","src":"14360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"14374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5948,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:21","memberName":"max","nodeType":"MemberAccess","src":"14382:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5959,"nodeType":"IfStatement","src":"14370:103:21","trueBody":{"id":5958,"nodeType":"Block","src":"14400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"14456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5953,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"14421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5957,"nodeType":"RevertStatement","src":"14414:48:21"}]}},{"expression":{"arguments":[{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"14496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5960,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:21","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5945,"id":5964,"nodeType":"Return","src":"14482:20:21"}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"14015:276:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"14322:5:21","nodeType":"VariableDeclaration","scope":5966,"src":"14314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:21"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5966,"src":"14352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5943,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:21"},"scope":6976,"src":"14296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5993,"nodeType":"Block","src":"14860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"14874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5976,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5975,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:21","memberName":"max","nodeType":"MemberAccess","src":"14882:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5987,"nodeType":"IfStatement","src":"14870:103:21","trueBody":{"id":5986,"nodeType":"Block","src":"14900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"14956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5981,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"14921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5985,"nodeType":"RevertStatement","src":"14914:48:21"}]}},{"expression":{"arguments":[{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"14996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5988,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:21","typeDescriptions":{}}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5973,"id":5992,"nodeType":"Return","src":"14982:20:21"}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"14515:276:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"value","nameLocation":"14822:5:21","nodeType":"VariableDeclaration","scope":5994,"src":"14814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:21"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5994,"src":"14852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5971,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:21"},"scope":6976,"src":"14796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6021,"nodeType":"Block","src":"15360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"15374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6004,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6003,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:21","memberName":"max","nodeType":"MemberAccess","src":"15382:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6015,"nodeType":"IfStatement","src":"15370:103:21","trueBody":{"id":6014,"nodeType":"Block","src":"15400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"15456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6009,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"15421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6013,"nodeType":"RevertStatement","src":"15414:48:21"}]}},{"expression":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"15496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6016,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:21","typeDescriptions":{}}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6001,"id":6020,"nodeType":"Return","src":"15482:20:21"}]},"documentation":{"id":5995,"nodeType":"StructuredDocumentation","src":"15015:276:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"value","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":6022,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:21"},"returnParameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6022,"src":"15352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5999,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:21"},"scope":6976,"src":"15296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"15860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"15874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6032,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6031,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:21","memberName":"max","nodeType":"MemberAccess","src":"15882:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"nodeType":"IfStatement","src":"15870:103:21","trueBody":{"id":6042,"nodeType":"Block","src":"15900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"15956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6037,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"15921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6041,"nodeType":"RevertStatement","src":"15914:48:21"}]}},{"expression":{"arguments":[{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"15996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6044,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:21","typeDescriptions":{}}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6029,"id":6048,"nodeType":"Return","src":"15982:20:21"}]},"documentation":{"id":6023,"nodeType":"StructuredDocumentation","src":"15515:276:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"value","nameLocation":"15822:5:21","nodeType":"VariableDeclaration","scope":6050,"src":"15814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6024,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:21"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6050,"src":"15852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6027,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:21"},"scope":6976,"src":"15796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"16360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"16374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6060,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:21","memberName":"max","nodeType":"MemberAccess","src":"16382:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6071,"nodeType":"IfStatement","src":"16370:103:21","trueBody":{"id":6070,"nodeType":"Block","src":"16400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"16456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6065,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"16421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6069,"nodeType":"RevertStatement","src":"16414:48:21"}]}},{"expression":{"arguments":[{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"16496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6072,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:21","typeDescriptions":{}}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6057,"id":6076,"nodeType":"Return","src":"16482:20:21"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"16015:276:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"value","nameLocation":"16322:5:21","nodeType":"VariableDeclaration","scope":6078,"src":"16314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:21"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6078,"src":"16352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6055,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:21"},"scope":6976,"src":"16296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"16854:146:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"16868:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6088,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:21","memberName":"max","nodeType":"MemberAccess","src":"16876:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6099,"nodeType":"IfStatement","src":"16864:101:21","trueBody":{"id":6098,"nodeType":"Block","src":"16893:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"16948:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6093,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"16914:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6097,"nodeType":"RevertStatement","src":"16907:47:21"}]}},{"expression":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"16987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6100,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:21","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6085,"id":6104,"nodeType":"Return","src":"16974:19:21"}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"16515:272:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:21","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"value","nameLocation":"16817:5:21","nodeType":"VariableDeclaration","scope":6106,"src":"16809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:21"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6106,"src":"16847:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6083,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:21"},"scope":6976,"src":"16792:208:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6128,"nodeType":"Block","src":"17236:128:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"17250:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6122,"nodeType":"IfStatement","src":"17246:81:21","trueBody":{"id":6121,"nodeType":"Block","src":"17261:66:21","statements":[{"errorCall":{"arguments":[{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"17310:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6117,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"17282:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6120,"nodeType":"RevertStatement","src":"17275:41:21"}]}},{"expression":{"arguments":[{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"17351:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:21","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6113,"id":6127,"nodeType":"Return","src":"17336:21:21"}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"17006:160:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6129,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:21","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"value","nameLocation":"17197:5:21","nodeType":"VariableDeclaration","scope":6129,"src":"17190:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6108,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:21"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6129,"src":"17227:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:21"},"scope":6976,"src":"17171:193:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6154,"nodeType":"Block","src":"17761:150:21","statements":[{"expression":{"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"17771:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"17791:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6138,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:21","typeDescriptions":{}}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6143,"nodeType":"ExpressionStatement","src":"17771:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"17811:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"17825:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6153,"nodeType":"IfStatement","src":"17807:98:21","trueBody":{"id":6152,"nodeType":"Block","src":"17832:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"17888:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6147,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"17853:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6151,"nodeType":"RevertStatement","src":"17846:48:21"}]}}]},"documentation":{"id":6130,"nodeType":"StructuredDocumentation","src":"17370:312:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6155,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:21","nodeType":"FunctionDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"value","nameLocation":"17712:5:21","nodeType":"VariableDeclaration","scope":6155,"src":"17705:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6131,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:21"},"returnParameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:21","nodeType":"VariableDeclaration","scope":6155,"src":"17742:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6134,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:21"},"scope":6976,"src":"17687:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6180,"nodeType":"Block","src":"18308:150:21","statements":[{"expression":{"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"18318:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18338:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6164,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:21","typeDescriptions":{}}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6169,"nodeType":"ExpressionStatement","src":"18318:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"18358:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18372:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6179,"nodeType":"IfStatement","src":"18354:98:21","trueBody":{"id":6178,"nodeType":"Block","src":"18379:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6173,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"18400:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6177,"nodeType":"RevertStatement","src":"18393:48:21"}]}}]},"documentation":{"id":6156,"nodeType":"StructuredDocumentation","src":"17917:312:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6181,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:21","nodeType":"FunctionDefinition","parameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"value","nameLocation":"18259:5:21","nodeType":"VariableDeclaration","scope":6181,"src":"18252:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6157,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:21"},"returnParameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:21","nodeType":"VariableDeclaration","scope":6181,"src":"18289:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6160,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:21"},"scope":6976,"src":"18234:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6206,"nodeType":"Block","src":"18855:150:21","statements":[{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"18865:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"18885:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6190,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:21","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6195,"nodeType":"ExpressionStatement","src":"18865:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"18905:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"18919:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"IfStatement","src":"18901:98:21","trueBody":{"id":6204,"nodeType":"Block","src":"18926:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"18982:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6199,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"18947:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6203,"nodeType":"RevertStatement","src":"18940:48:21"}]}}]},"documentation":{"id":6182,"nodeType":"StructuredDocumentation","src":"18464:312:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6207,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:21","nodeType":"FunctionDefinition","parameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"value","nameLocation":"18806:5:21","nodeType":"VariableDeclaration","scope":6207,"src":"18799:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6183,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:21"},"returnParameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:21","nodeType":"VariableDeclaration","scope":6207,"src":"18836:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6186,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:21"},"scope":6976,"src":"18781:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6232,"nodeType":"Block","src":"19402:150:21","statements":[{"expression":{"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"19412:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19432:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6216,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:21","typeDescriptions":{}}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6221,"nodeType":"ExpressionStatement","src":"19412:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"19452:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19466:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6231,"nodeType":"IfStatement","src":"19448:98:21","trueBody":{"id":6230,"nodeType":"Block","src":"19473:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19529:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6225,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"19494:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6229,"nodeType":"RevertStatement","src":"19487:48:21"}]}}]},"documentation":{"id":6208,"nodeType":"StructuredDocumentation","src":"19011:312:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6233,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:21","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"value","nameLocation":"19353:5:21","nodeType":"VariableDeclaration","scope":6233,"src":"19346:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6209,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:21"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:21","nodeType":"VariableDeclaration","scope":6233,"src":"19383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6212,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:21"},"scope":6976,"src":"19328:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6258,"nodeType":"Block","src":"19949:150:21","statements":[{"expression":{"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"19959:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"19979:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6242,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:21","typeDescriptions":{}}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6247,"nodeType":"ExpressionStatement","src":"19959:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"19999:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6257,"nodeType":"IfStatement","src":"19995:98:21","trueBody":{"id":6256,"nodeType":"Block","src":"20020:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"20076:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6251,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"20041:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6255,"nodeType":"RevertStatement","src":"20034:48:21"}]}}]},"documentation":{"id":6234,"nodeType":"StructuredDocumentation","src":"19558:312:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6259,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:21","nodeType":"FunctionDefinition","parameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"value","nameLocation":"19900:5:21","nodeType":"VariableDeclaration","scope":6259,"src":"19893:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6235,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:21"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:21","nodeType":"VariableDeclaration","scope":6259,"src":"19930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6238,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:21"},"scope":6976,"src":"19875:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6284,"nodeType":"Block","src":"20496:150:21","statements":[{"expression":{"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"20506:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"20526:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6268,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:21","typeDescriptions":{}}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6273,"nodeType":"ExpressionStatement","src":"20506:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"20546:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"20560:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"IfStatement","src":"20542:98:21","trueBody":{"id":6282,"nodeType":"Block","src":"20567:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"20623:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6277,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"20588:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6281,"nodeType":"RevertStatement","src":"20581:48:21"}]}}]},"documentation":{"id":6260,"nodeType":"StructuredDocumentation","src":"20105:312:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6285,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:21","nodeType":"FunctionDefinition","parameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"value","nameLocation":"20447:5:21","nodeType":"VariableDeclaration","scope":6285,"src":"20440:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6261,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:21"},"returnParameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:21","nodeType":"VariableDeclaration","scope":6285,"src":"20477:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6264,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:21"},"scope":6976,"src":"20422:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"21043:150:21","statements":[{"expression":{"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"21053:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21073:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6294,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:21","typeDescriptions":{}}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6299,"nodeType":"ExpressionStatement","src":"21053:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"21093:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21107:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6309,"nodeType":"IfStatement","src":"21089:98:21","trueBody":{"id":6308,"nodeType":"Block","src":"21114:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21170:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6303,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"21135:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6307,"nodeType":"RevertStatement","src":"21128:48:21"}]}}]},"documentation":{"id":6286,"nodeType":"StructuredDocumentation","src":"20652:312:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:21","nodeType":"FunctionDefinition","parameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"value","nameLocation":"20994:5:21","nodeType":"VariableDeclaration","scope":6311,"src":"20987:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6287,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:21"},"returnParameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:21","nodeType":"VariableDeclaration","scope":6311,"src":"21024:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6290,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:21"},"scope":6976,"src":"20969:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6336,"nodeType":"Block","src":"21590:150:21","statements":[{"expression":{"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"21600:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"21620:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6320,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:21","typeDescriptions":{}}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6325,"nodeType":"ExpressionStatement","src":"21600:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"21640:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"21654:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6335,"nodeType":"IfStatement","src":"21636:98:21","trueBody":{"id":6334,"nodeType":"Block","src":"21661:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"21717:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6329,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"21682:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6333,"nodeType":"RevertStatement","src":"21675:48:21"}]}}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"21199:312:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6337,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:21","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"21541:5:21","nodeType":"VariableDeclaration","scope":6337,"src":"21534:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6313,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:21"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:21","nodeType":"VariableDeclaration","scope":6337,"src":"21571:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6316,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:21"},"scope":6976,"src":"21516:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6362,"nodeType":"Block","src":"22137:150:21","statements":[{"expression":{"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"22147:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22167:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6346,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:21","typeDescriptions":{}}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6351,"nodeType":"ExpressionStatement","src":"22147:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"22187:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22201:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6361,"nodeType":"IfStatement","src":"22183:98:21","trueBody":{"id":6360,"nodeType":"Block","src":"22208:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22264:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6355,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"22229:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6359,"nodeType":"RevertStatement","src":"22222:48:21"}]}}]},"documentation":{"id":6338,"nodeType":"StructuredDocumentation","src":"21746:312:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6363,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:21","nodeType":"FunctionDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"value","nameLocation":"22088:5:21","nodeType":"VariableDeclaration","scope":6363,"src":"22081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6339,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:21"},"returnParameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:21","nodeType":"VariableDeclaration","scope":6363,"src":"22118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6342,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:21"},"scope":6976,"src":"22063:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6388,"nodeType":"Block","src":"22684:150:21","statements":[{"expression":{"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"22694:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"22714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6372,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:21","typeDescriptions":{}}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6377,"nodeType":"ExpressionStatement","src":"22694:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"22734:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"22748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6387,"nodeType":"IfStatement","src":"22730:98:21","trueBody":{"id":6386,"nodeType":"Block","src":"22755:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"22811:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6381,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"22776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6385,"nodeType":"RevertStatement","src":"22769:48:21"}]}}]},"documentation":{"id":6364,"nodeType":"StructuredDocumentation","src":"22293:312:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:21","nodeType":"FunctionDefinition","parameters":{"id":6367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"value","nameLocation":"22635:5:21","nodeType":"VariableDeclaration","scope":6389,"src":"22628:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6365,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:21"},"returnParameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:21","nodeType":"VariableDeclaration","scope":6389,"src":"22665:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6368,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:21"},"scope":6976,"src":"22610:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6414,"nodeType":"Block","src":"23231:150:21","statements":[{"expression":{"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"23241:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23261:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6398,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:21","typeDescriptions":{}}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6403,"nodeType":"ExpressionStatement","src":"23241:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"23281:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23295:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6413,"nodeType":"IfStatement","src":"23277:98:21","trueBody":{"id":6412,"nodeType":"Block","src":"23302:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23358:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6407,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"23323:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6411,"nodeType":"RevertStatement","src":"23316:48:21"}]}}]},"documentation":{"id":6390,"nodeType":"StructuredDocumentation","src":"22840:312:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6415,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:21","nodeType":"FunctionDefinition","parameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"value","nameLocation":"23182:5:21","nodeType":"VariableDeclaration","scope":6415,"src":"23175:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6391,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:21"},"returnParameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:21","nodeType":"VariableDeclaration","scope":6415,"src":"23212:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6394,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:21"},"scope":6976,"src":"23157:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6440,"nodeType":"Block","src":"23778:150:21","statements":[{"expression":{"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"23788:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"23808:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6424,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:21","typeDescriptions":{}}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6429,"nodeType":"ExpressionStatement","src":"23788:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"23828:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"23842:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6439,"nodeType":"IfStatement","src":"23824:98:21","trueBody":{"id":6438,"nodeType":"Block","src":"23849:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"23905:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6433,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"23870:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6437,"nodeType":"RevertStatement","src":"23863:48:21"}]}}]},"documentation":{"id":6416,"nodeType":"StructuredDocumentation","src":"23387:312:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6441,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:21","nodeType":"FunctionDefinition","parameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"value","nameLocation":"23729:5:21","nodeType":"VariableDeclaration","scope":6441,"src":"23722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6417,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:21"},"returnParameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:21","nodeType":"VariableDeclaration","scope":6441,"src":"23759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6420,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:21"},"scope":6976,"src":"23704:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6466,"nodeType":"Block","src":"24325:150:21","statements":[{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"24335:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24355:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6450,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:21","typeDescriptions":{}}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6455,"nodeType":"ExpressionStatement","src":"24335:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"24375:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24389:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6465,"nodeType":"IfStatement","src":"24371:98:21","trueBody":{"id":6464,"nodeType":"Block","src":"24396:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24452:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6459,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"24417:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6463,"nodeType":"RevertStatement","src":"24410:48:21"}]}}]},"documentation":{"id":6442,"nodeType":"StructuredDocumentation","src":"23934:312:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:21","nodeType":"FunctionDefinition","parameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"value","nameLocation":"24276:5:21","nodeType":"VariableDeclaration","scope":6467,"src":"24269:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6443,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:21"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:21","nodeType":"VariableDeclaration","scope":6467,"src":"24306:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6446,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:21"},"scope":6976,"src":"24251:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6492,"nodeType":"Block","src":"24872:150:21","statements":[{"expression":{"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"24882:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"24902:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6476,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:21","typeDescriptions":{}}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6481,"nodeType":"ExpressionStatement","src":"24882:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"24922:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"24936:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6491,"nodeType":"IfStatement","src":"24918:98:21","trueBody":{"id":6490,"nodeType":"Block","src":"24943:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"24999:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6485,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"24964:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6489,"nodeType":"RevertStatement","src":"24957:48:21"}]}}]},"documentation":{"id":6468,"nodeType":"StructuredDocumentation","src":"24481:312:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:21","nodeType":"FunctionDefinition","parameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"value","nameLocation":"24823:5:21","nodeType":"VariableDeclaration","scope":6493,"src":"24816:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6469,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:21"},"returnParameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:21","nodeType":"VariableDeclaration","scope":6493,"src":"24853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6472,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:21"},"scope":6976,"src":"24798:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6518,"nodeType":"Block","src":"25419:150:21","statements":[{"expression":{"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"25429:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"25449:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6502,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:21","typeDescriptions":{}}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6507,"nodeType":"ExpressionStatement","src":"25429:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"25469:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"25483:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6517,"nodeType":"IfStatement","src":"25465:98:21","trueBody":{"id":6516,"nodeType":"Block","src":"25490:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"25546:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6511,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"25511:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6515,"nodeType":"RevertStatement","src":"25504:48:21"}]}}]},"documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"25028:312:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6519,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:21","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"value","nameLocation":"25370:5:21","nodeType":"VariableDeclaration","scope":6519,"src":"25363:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6495,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:21"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:21","nodeType":"VariableDeclaration","scope":6519,"src":"25400:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6498,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:21"},"scope":6976,"src":"25345:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6544,"nodeType":"Block","src":"25966:150:21","statements":[{"expression":{"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"25976:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"25996:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6528,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:21","typeDescriptions":{}}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6533,"nodeType":"ExpressionStatement","src":"25976:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"26016:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"26030:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6543,"nodeType":"IfStatement","src":"26012:98:21","trueBody":{"id":6542,"nodeType":"Block","src":"26037:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"26093:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6537,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26058:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6541,"nodeType":"RevertStatement","src":"26051:48:21"}]}}]},"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"25575:312:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:21","nodeType":"FunctionDefinition","parameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"value","nameLocation":"25917:5:21","nodeType":"VariableDeclaration","scope":6545,"src":"25910:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6521,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:21"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:21","nodeType":"VariableDeclaration","scope":6545,"src":"25947:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6524,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:21"},"scope":6976,"src":"25892:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6570,"nodeType":"Block","src":"26513:150:21","statements":[{"expression":{"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26523:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"26543:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6554,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:21","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6559,"nodeType":"ExpressionStatement","src":"26523:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26563:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"26577:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6569,"nodeType":"IfStatement","src":"26559:98:21","trueBody":{"id":6568,"nodeType":"Block","src":"26584:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"26640:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6563,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26605:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6567,"nodeType":"RevertStatement","src":"26598:48:21"}]}}]},"documentation":{"id":6546,"nodeType":"StructuredDocumentation","src":"26122:312:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:21","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"value","nameLocation":"26464:5:21","nodeType":"VariableDeclaration","scope":6571,"src":"26457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6547,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:21"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:21","nodeType":"VariableDeclaration","scope":6571,"src":"26494:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6550,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:21"},"scope":6976,"src":"26439:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6596,"nodeType":"Block","src":"27060:150:21","statements":[{"expression":{"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"27070:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27090:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6580,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:21","typeDescriptions":{}}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6585,"nodeType":"ExpressionStatement","src":"27070:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"27110:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27124:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6595,"nodeType":"IfStatement","src":"27106:98:21","trueBody":{"id":6594,"nodeType":"Block","src":"27131:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27187:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6589,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"27152:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6593,"nodeType":"RevertStatement","src":"27145:48:21"}]}}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"26669:312:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6597,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:21","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"27011:5:21","nodeType":"VariableDeclaration","scope":6597,"src":"27004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6573,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:21"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:21","nodeType":"VariableDeclaration","scope":6597,"src":"27041:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6576,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:21"},"scope":6976,"src":"26986:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6622,"nodeType":"Block","src":"27607:150:21","statements":[{"expression":{"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"27617:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"27637:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6606,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:21","typeDescriptions":{}}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6611,"nodeType":"ExpressionStatement","src":"27617:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"27657:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"27671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6621,"nodeType":"IfStatement","src":"27653:98:21","trueBody":{"id":6620,"nodeType":"Block","src":"27678:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"27734:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6615,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"27699:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6619,"nodeType":"RevertStatement","src":"27692:48:21"}]}}]},"documentation":{"id":6598,"nodeType":"StructuredDocumentation","src":"27216:312:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6623,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:21","nodeType":"FunctionDefinition","parameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"value","nameLocation":"27558:5:21","nodeType":"VariableDeclaration","scope":6623,"src":"27551:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6599,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:21"},"returnParameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:21","nodeType":"VariableDeclaration","scope":6623,"src":"27588:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6602,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:21"},"scope":6976,"src":"27533:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6648,"nodeType":"Block","src":"28147:148:21","statements":[{"expression":{"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"28157:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28176:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6632,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:21","typeDescriptions":{}}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6637,"nodeType":"ExpressionStatement","src":"28157:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"28196:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28210:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6647,"nodeType":"IfStatement","src":"28192:97:21","trueBody":{"id":6646,"nodeType":"Block","src":"28217:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28272:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6641,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"28238:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6645,"nodeType":"RevertStatement","src":"28231:47:21"}]}}]},"documentation":{"id":6624,"nodeType":"StructuredDocumentation","src":"27763:307:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6649,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:21","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"value","nameLocation":"28099:5:21","nodeType":"VariableDeclaration","scope":6649,"src":"28092:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6625,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:21"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:21","nodeType":"VariableDeclaration","scope":6649,"src":"28129:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6628,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:21"},"scope":6976,"src":"28075:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6674,"nodeType":"Block","src":"28685:148:21","statements":[{"expression":{"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"28695:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"28714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6658,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:21","typeDescriptions":{}}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6663,"nodeType":"ExpressionStatement","src":"28695:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"28734:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"28748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6673,"nodeType":"IfStatement","src":"28730:97:21","trueBody":{"id":6672,"nodeType":"Block","src":"28755:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"28810:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6667,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"28776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6671,"nodeType":"RevertStatement","src":"28769:47:21"}]}}]},"documentation":{"id":6650,"nodeType":"StructuredDocumentation","src":"28301:307:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6675,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:21","nodeType":"FunctionDefinition","parameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"value","nameLocation":"28637:5:21","nodeType":"VariableDeclaration","scope":6675,"src":"28630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6651,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:21"},"returnParameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6655,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:21","nodeType":"VariableDeclaration","scope":6675,"src":"28667:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6654,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:21"},"scope":6976,"src":"28613:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6700,"nodeType":"Block","src":"29223:148:21","statements":[{"expression":{"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"29233:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29252:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6684,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:21","typeDescriptions":{}}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6689,"nodeType":"ExpressionStatement","src":"29233:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"29272:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29286:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6699,"nodeType":"IfStatement","src":"29268:97:21","trueBody":{"id":6698,"nodeType":"Block","src":"29293:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29348:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6693,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"29314:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6697,"nodeType":"RevertStatement","src":"29307:47:21"}]}}]},"documentation":{"id":6676,"nodeType":"StructuredDocumentation","src":"28839:307:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6701,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:21","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"value","nameLocation":"29175:5:21","nodeType":"VariableDeclaration","scope":6701,"src":"29168:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6677,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:21"},"returnParameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:21","nodeType":"VariableDeclaration","scope":6701,"src":"29205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6680,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:21"},"scope":6976,"src":"29151:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6726,"nodeType":"Block","src":"29761:148:21","statements":[{"expression":{"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"29771:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"29790:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6710,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:21","typeDescriptions":{}}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6715,"nodeType":"ExpressionStatement","src":"29771:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"29810:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"29824:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6725,"nodeType":"IfStatement","src":"29806:97:21","trueBody":{"id":6724,"nodeType":"Block","src":"29831:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"29886:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6719,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"29852:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6723,"nodeType":"RevertStatement","src":"29845:47:21"}]}}]},"documentation":{"id":6702,"nodeType":"StructuredDocumentation","src":"29377:307:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6727,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:21","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"value","nameLocation":"29713:5:21","nodeType":"VariableDeclaration","scope":6727,"src":"29706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6703,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:21"},"returnParameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6707,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:21","nodeType":"VariableDeclaration","scope":6727,"src":"29743:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6706,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:21"},"scope":6976,"src":"29689:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6752,"nodeType":"Block","src":"30299:148:21","statements":[{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"30309:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30328:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6736,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:21","typeDescriptions":{}}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6741,"nodeType":"ExpressionStatement","src":"30309:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"30348:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6751,"nodeType":"IfStatement","src":"30344:97:21","trueBody":{"id":6750,"nodeType":"Block","src":"30369:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30424:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6745,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"30390:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6749,"nodeType":"RevertStatement","src":"30383:47:21"}]}}]},"documentation":{"id":6728,"nodeType":"StructuredDocumentation","src":"29915:307:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6753,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:21","nodeType":"FunctionDefinition","parameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"value","nameLocation":"30251:5:21","nodeType":"VariableDeclaration","scope":6753,"src":"30244:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6729,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:21"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:21","nodeType":"VariableDeclaration","scope":6753,"src":"30281:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6732,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:21"},"scope":6976,"src":"30227:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6778,"nodeType":"Block","src":"30837:148:21","statements":[{"expression":{"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"30847:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"30866:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6762,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:21","typeDescriptions":{}}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6767,"nodeType":"ExpressionStatement","src":"30847:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"30886:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"30900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6777,"nodeType":"IfStatement","src":"30882:97:21","trueBody":{"id":6776,"nodeType":"Block","src":"30907:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"30962:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6771,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"30928:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6775,"nodeType":"RevertStatement","src":"30921:47:21"}]}}]},"documentation":{"id":6754,"nodeType":"StructuredDocumentation","src":"30453:307:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6779,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:21","nodeType":"FunctionDefinition","parameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"value","nameLocation":"30789:5:21","nodeType":"VariableDeclaration","scope":6779,"src":"30782:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6755,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:21"},"returnParameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:21","nodeType":"VariableDeclaration","scope":6779,"src":"30819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6758,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:21"},"scope":6976,"src":"30765:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6804,"nodeType":"Block","src":"31375:148:21","statements":[{"expression":{"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"31385:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31404:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6788,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:21","typeDescriptions":{}}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6793,"nodeType":"ExpressionStatement","src":"31385:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"31424:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31438:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6803,"nodeType":"IfStatement","src":"31420:97:21","trueBody":{"id":6802,"nodeType":"Block","src":"31445:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31500:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6797,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"31466:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6801,"nodeType":"RevertStatement","src":"31459:47:21"}]}}]},"documentation":{"id":6780,"nodeType":"StructuredDocumentation","src":"30991:307:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6805,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:21","nodeType":"FunctionDefinition","parameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"value","nameLocation":"31327:5:21","nodeType":"VariableDeclaration","scope":6805,"src":"31320:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6781,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:21"},"returnParameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:21","nodeType":"VariableDeclaration","scope":6805,"src":"31357:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6784,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:21"},"scope":6976,"src":"31303:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6830,"nodeType":"Block","src":"31913:148:21","statements":[{"expression":{"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"31923:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"31942:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6814,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:21","typeDescriptions":{}}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6819,"nodeType":"ExpressionStatement","src":"31923:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"31962:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"31976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6829,"nodeType":"IfStatement","src":"31958:97:21","trueBody":{"id":6828,"nodeType":"Block","src":"31983:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"32038:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6823,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"32004:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6827,"nodeType":"RevertStatement","src":"31997:47:21"}]}}]},"documentation":{"id":6806,"nodeType":"StructuredDocumentation","src":"31529:307:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6831,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:21","nodeType":"FunctionDefinition","parameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"value","nameLocation":"31865:5:21","nodeType":"VariableDeclaration","scope":6831,"src":"31858:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6807,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:21"},"returnParameters":{"id":6812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:21","nodeType":"VariableDeclaration","scope":6831,"src":"31895:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6810,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:21"},"scope":6976,"src":"31841:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6856,"nodeType":"Block","src":"32451:148:21","statements":[{"expression":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"32461:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"32480:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6840,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:21","typeDescriptions":{}}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6845,"nodeType":"ExpressionStatement","src":"32461:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"32500:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"32514:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6855,"nodeType":"IfStatement","src":"32496:97:21","trueBody":{"id":6854,"nodeType":"Block","src":"32521:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"32576:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6849,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"32542:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6853,"nodeType":"RevertStatement","src":"32535:47:21"}]}}]},"documentation":{"id":6832,"nodeType":"StructuredDocumentation","src":"32067:307:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6857,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:21","nodeType":"FunctionDefinition","parameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"value","nameLocation":"32403:5:21","nodeType":"VariableDeclaration","scope":6857,"src":"32396:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6833,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:21"},"returnParameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:21","nodeType":"VariableDeclaration","scope":6857,"src":"32433:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6836,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:21"},"scope":6976,"src":"32379:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6882,"nodeType":"Block","src":"32989:148:21","statements":[{"expression":{"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"32999:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33018:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6866,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:21","typeDescriptions":{}}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6871,"nodeType":"ExpressionStatement","src":"32999:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"33038:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33052:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6881,"nodeType":"IfStatement","src":"33034:97:21","trueBody":{"id":6880,"nodeType":"Block","src":"33059:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33114:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6875,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"33080:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6879,"nodeType":"RevertStatement","src":"33073:47:21"}]}}]},"documentation":{"id":6858,"nodeType":"StructuredDocumentation","src":"32605:307:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6883,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:21","nodeType":"FunctionDefinition","parameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"value","nameLocation":"32941:5:21","nodeType":"VariableDeclaration","scope":6883,"src":"32934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6859,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:21"},"returnParameters":{"id":6864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:21","nodeType":"VariableDeclaration","scope":6883,"src":"32971:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6862,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:21"},"scope":6976,"src":"32917:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6908,"nodeType":"Block","src":"33527:148:21","statements":[{"expression":{"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"33537:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"33556:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6892,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:21","typeDescriptions":{}}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6897,"nodeType":"ExpressionStatement","src":"33537:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"33576:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"33590:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6907,"nodeType":"IfStatement","src":"33572:97:21","trueBody":{"id":6906,"nodeType":"Block","src":"33597:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"33652:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6901,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"33618:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6905,"nodeType":"RevertStatement","src":"33611:47:21"}]}}]},"documentation":{"id":6884,"nodeType":"StructuredDocumentation","src":"33143:307:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:21","nodeType":"FunctionDefinition","parameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"value","nameLocation":"33479:5:21","nodeType":"VariableDeclaration","scope":6909,"src":"33472:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6885,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:21"},"returnParameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:21","nodeType":"VariableDeclaration","scope":6909,"src":"33509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6888,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:21"},"scope":6976,"src":"33455:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6934,"nodeType":"Block","src":"34058:146:21","statements":[{"expression":{"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"34068:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"34086:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6918,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:21","typeDescriptions":{}}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6923,"nodeType":"ExpressionStatement","src":"34068:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"34106:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"34120:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6933,"nodeType":"IfStatement","src":"34102:96:21","trueBody":{"id":6932,"nodeType":"Block","src":"34127:71:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"34181:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6927,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"34148:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6931,"nodeType":"RevertStatement","src":"34141:46:21"}]}}]},"documentation":{"id":6910,"nodeType":"StructuredDocumentation","src":"33681:302:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:21","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"value","nameLocation":"34011:5:21","nodeType":"VariableDeclaration","scope":6935,"src":"34004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6911,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:21"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:21","nodeType":"VariableDeclaration","scope":6935,"src":"34041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6914,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:21"},"scope":6976,"src":"33988:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6964,"nodeType":"Block","src":"34444:250:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"34557:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6947,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:21","memberName":"max","nodeType":"MemberAccess","src":"34573:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6944,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:21","typeDescriptions":{}}},"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6958,"nodeType":"IfStatement","src":"34553:105:21","trueBody":{"id":6957,"nodeType":"Block","src":"34592:66:21","statements":[{"errorCall":{"arguments":[{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"34641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6953,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"34613:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6956,"nodeType":"RevertStatement","src":"34606:41:21"}]}},{"expression":{"arguments":[{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"34681:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6959,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:21","typeDescriptions":{}}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6942,"id":6963,"nodeType":"Return","src":"34667:20:21"}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"34210:165:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6965,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:21","nodeType":"FunctionDefinition","parameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"value","nameLocation":"34406:5:21","nodeType":"VariableDeclaration","scope":6965,"src":"34398:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:21"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6965,"src":"34436:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6940,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:21"},"scope":6976,"src":"34380:314:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6974,"nodeType":"Block","src":"34853:87:21","statements":[{"AST":{"nativeSrc":"34888:46:21","nodeType":"YulBlock","src":"34888:46:21","statements":[{"nativeSrc":"34902:22:21","nodeType":"YulAssignment","src":"34902:22:21","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:21","nodeType":"YulIdentifier","src":"34921:1:21"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:21","nodeType":"YulIdentifier","src":"34914:6:21"},"nativeSrc":"34914:9:21","nodeType":"YulFunctionCall","src":"34914:9:21"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:21","nodeType":"YulIdentifier","src":"34907:6:21"},"nativeSrc":"34907:17:21","nodeType":"YulFunctionCall","src":"34907:17:21"},"variableNames":[{"name":"u","nativeSrc":"34902:1:21","nodeType":"YulIdentifier","src":"34902:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6968,"isOffset":false,"isSlot":false,"src":"34921:1:21","valueSize":1},{"declaration":6971,"isOffset":false,"isSlot":false,"src":"34902:1:21","valueSize":1}],"flags":["memory-safe"],"id":6973,"nodeType":"InlineAssembly","src":"34863:71:21"}]},"documentation":{"id":6966,"nodeType":"StructuredDocumentation","src":"34700:90:21","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:21","nodeType":"FunctionDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"b","nameLocation":"34816:1:21","nodeType":"VariableDeclaration","scope":6975,"src":"34811:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6967,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:21"},"returnParameters":{"id":6972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"u","nameLocation":"34850:1:21","nodeType":"VariableDeclaration","scope":6975,"src":"34842:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6970,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:21"},"scope":6976,"src":"34795:145:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6977,"src":"769:34173:21","usedErrors":[5221,5226,5233,5238],"usedEvents":[]}],"src":"192:34751:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6976],"SignedMath":[7120]},"id":7121,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6978,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6980,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7121,"sourceUnit":6977,"src":"135:40:22","symbolAliases":[{"foreign":{"id":6979,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"143:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6981,"nodeType":"StructuredDocumentation","src":"177:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7120,"linearizedBaseContracts":[7120],"name":"SignedMath","nameLocation":"266:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":7010,"nodeType":"Block","src":"746:215:22","statements":[{"id":7009,"nodeType":"UncheckedBlock","src":"756:199:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"894:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"900:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6995,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"904:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7002,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"932:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7000,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"916:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6976_$","typeString":"type(library SafeCast)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"916:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6998,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:22","typeDescriptions":{}}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6992,"id":7008,"nodeType":"Return","src":"887:57:22"}]}]},"documentation":{"id":6982,"nodeType":"StructuredDocumentation","src":"283:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7011,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:22","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"condition","nameLocation":"684:9:22","nodeType":"VariableDeclaration","scope":7011,"src":"679:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6983,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6986,"mutability":"mutable","name":"a","nameLocation":"702:1:22","nodeType":"VariableDeclaration","scope":7011,"src":"695:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6985,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6988,"mutability":"mutable","name":"b","nameLocation":"712:1:22","nodeType":"VariableDeclaration","scope":7011,"src":"705:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6987,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:22"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7011,"src":"738:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6990,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:22"},"scope":7120,"src":"662:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7029,"nodeType":"Block","src":"1102:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"1127:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"1131:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"1134:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"1137:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7021,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7020,"id":7028,"nodeType":"Return","src":"1112:27:22"}]},"documentation":{"id":7012,"nodeType":"StructuredDocumentation","src":"967:66:22","text":" @dev Returns the largest of two signed numbers."},"id":7030,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:22","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"a","nameLocation":"1058:1:22","nodeType":"VariableDeclaration","scope":7030,"src":"1051:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7013,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7016,"mutability":"mutable","name":"b","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":7030,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7015,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:22"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7030,"src":"1094:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7018,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:22"},"scope":7120,"src":"1038:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"1288:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"1313:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"1317:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"1320:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"1323:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7040,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"1305:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7039,"id":7047,"nodeType":"Return","src":"1298:27:22"}]},"documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"1152:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:22","nodeType":"FunctionDefinition","parameters":{"id":7036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"a","nameLocation":"1244:1:22","nodeType":"VariableDeclaration","scope":7049,"src":"1237:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7032,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7035,"mutability":"mutable","name":"b","nameLocation":"1254:1:22","nodeType":"VariableDeclaration","scope":7049,"src":"1247:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7034,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:22"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7049,"src":"1280:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7037,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:22"},"scope":7120,"src":"1224:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7092,"nodeType":"Block","src":"1537:162:22","statements":[{"assignments":[7060],"declarations":[{"constant":false,"id":7060,"mutability":"mutable","name":"x","nameLocation":"1606:1:22","nodeType":"VariableDeclaration","scope":7092,"src":"1599:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7059,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7073,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"1611:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"1615:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"1622:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"1626:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7079,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"1671:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{}}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7075,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:22","typeDescriptions":{}}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"1685:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7058,"id":7091,"nodeType":"Return","src":"1644:48:22"}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"1338:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7093,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:22","nodeType":"FunctionDefinition","parameters":{"id":7055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"a","nameLocation":"1493:1:22","nodeType":"VariableDeclaration","scope":7093,"src":"1486:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7051,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7054,"mutability":"mutable","name":"b","nameLocation":"1503:1:22","nodeType":"VariableDeclaration","scope":7093,"src":"1496:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7053,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:22"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7093,"src":"1529:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7056,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:22"},"scope":7120,"src":"1469:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7118,"nodeType":"Block","src":"1843:767:22","statements":[{"id":7117,"nodeType":"UncheckedBlock","src":"1853:751:22","statements":[{"assignments":[7102],"declarations":[{"constant":false,"id":7102,"mutability":"mutable","name":"mask","nameLocation":"2424:4:22","nodeType":"VariableDeclaration","scope":7117,"src":"2417:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7101,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7106,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7103,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"2431:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7109,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"2576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7110,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"2580:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7113,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"2588:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:22","typeDescriptions":{}}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7100,"id":7116,"nodeType":"Return","src":"2560:33:22"}]}]},"documentation":{"id":7094,"nodeType":"StructuredDocumentation","src":"1705:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7119,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:22","nodeType":"FunctionDefinition","parameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"n","nameLocation":"1808:1:22","nodeType":"VariableDeclaration","scope":7119,"src":"1801:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7095,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:22"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7119,"src":"1834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:22"},"scope":7120,"src":"1788:822:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7121,"src":"258:2354:22","usedErrors":[],"usedEvents":[]}],"src":"109:2504:22"},"id":22},"contracts/RoguesItems.sol":{"ast":{"absolutePath":"contracts/RoguesItems.sol","exportedSymbols":{"AccessControl":[295],"ERC1155":[1432],"ERC1155Burnable":[1677],"ERC1155Pausable":[1716],"Math":[5211],"RoguesItems":[7428],"SignedMath":[7120],"Strings":[3569]},"id":7429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7122,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"81:24:23"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7429,"sourceUnit":296,"src":"107:79:23","symbolAliases":[{"foreign":{"id":7123,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"115:13:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":7126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7429,"sourceUnit":1433,"src":"187:74:23","symbolAliases":[{"foreign":{"id":7125,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"195:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":7128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7429,"sourceUnit":1678,"src":"262:101:23","symbolAliases":[{"foreign":{"id":7127,"name":"ERC1155Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"270:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol","id":7130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7429,"sourceUnit":1717,"src":"364:101:23","symbolAliases":[{"foreign":{"id":7129,"name":"ERC1155Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"372:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7429,"sourceUnit":3570,"src":"467:51:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7132,"name":"ERC1155","nameLocations":["544:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"544:7:23"},"id":7133,"nodeType":"InheritanceSpecifier","src":"544:7:23"},{"baseName":{"id":7134,"name":"AccessControl","nameLocations":["553:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"553:13:23"},"id":7135,"nodeType":"InheritanceSpecifier","src":"553:13:23"},{"baseName":{"id":7136,"name":"ERC1155Pausable","nameLocations":["568:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"568:15:23"},"id":7137,"nodeType":"InheritanceSpecifier","src":"568:15:23"},{"baseName":{"id":7138,"name":"ERC1155Burnable","nameLocations":["585:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":1677,"src":"585:15:23"},"id":7139,"nodeType":"InheritanceSpecifier","src":"585:15:23"}],"canonicalName":"RoguesItems","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7428,"linearizedBaseContracts":[7428,1677,1716,2995,295,1432,515,1732,1555,3593,3605,378,2826],"name":"RoguesItems","nameLocation":"529:11:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"7f345710","id":7144,"mutability":"constant","name":"URI_SETTER_ROLE","nameLocation":"629:15:23","nodeType":"VariableDeclaration","scope":7428,"src":"605:70:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"605:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5552495f5345545445525f524f4c45","id":7142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"657:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c","typeString":"literal_string \"URI_SETTER_ROLE\""},"value":"URI_SETTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c","typeString":"literal_string \"URI_SETTER_ROLE\""}],"id":7141,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"647:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"647:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":7149,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"703:11:23","nodeType":"VariableDeclaration","scope":7428,"src":"679:62:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"679:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"727:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":7146,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"717:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"717:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":7154,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"769:11:23","nodeType":"VariableDeclaration","scope":7428,"src":"745:62:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"745:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"793:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":7151,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"783:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"783:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"global":false,"id":7157,"libraryName":{"id":7155,"name":"Strings","nameLocations":["818:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":3569,"src":"818:7:23"},"nodeType":"UsingForDirective","src":"812:26:23","typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":7184,"nodeType":"Block","src":"920:129:23","statements":[{"expression":{"arguments":[{"id":7170,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"937:18:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7171,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"957:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7169,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"926:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7173,"nodeType":"ExpressionStatement","src":"926:44:23"},{"expression":{"arguments":[{"id":7175,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"987:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7176,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"1000:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7174,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"976:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7178,"nodeType":"ExpressionStatement","src":"976:31:23"},{"expression":{"arguments":[{"id":7180,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"1024:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7181,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"1037:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7179,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1013:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7183,"nodeType":"ExpressionStatement","src":"1013:31:23"}]},"id":7185,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":7166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"916:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":7167,"kind":"baseConstructorSpecifier","modifierName":{"id":7165,"name":"ERC1155","nameLocations":["908:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"908:7:23"},"nodeType":"ModifierInvocation","src":"908:11:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7159,"mutability":"mutable","name":"defaultAdmin","nameLocation":"862:12:23","nodeType":"VariableDeclaration","scope":7185,"src":"854:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7158,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7161,"mutability":"mutable","name":"pauser","nameLocation":"884:6:23","nodeType":"VariableDeclaration","scope":7185,"src":"876:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7160,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7163,"mutability":"mutable","name":"minter","nameLocation":"900:6:23","nodeType":"VariableDeclaration","scope":7185,"src":"892:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7162,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"853:54:23"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[],"src":"920:0:23"},"scope":7428,"src":"842:207:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7234,"nodeType":"Block","src":"1162:201:23","statements":[{"assignments":[7200],"declarations":[{"constant":false,"id":7200,"mutability":"mutable","name":"batchBalances","nameLocation":"1185:13:23","nodeType":"VariableDeclaration","scope":7234,"src":"1168:30:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7199,"nodeType":"ArrayTypeName","src":"1168:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7207,"initialValue":{"arguments":[{"expression":{"id":7204,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"1215:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1219:6:23","memberName":"length","nodeType":"MemberAccess","src":"1215:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1201:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7202,"nodeType":"ArrayTypeName","src":"1205:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1201:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1168:58:23"},{"body":{"id":7230,"nodeType":"Block","src":"1273:60:23","statements":[{"expression":{"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7219,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"1281:13:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7221,"indexExpression":{"id":7220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"1295:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1281:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7223,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"1310:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7224,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"1319:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7226,"indexExpression":{"id":7225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"1323:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1319:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7222,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1300:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1300:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1281:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7229,"nodeType":"ExpressionStatement","src":"1281:45:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"1252:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7213,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"1256:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1260:6:23","memberName":"length","nodeType":"MemberAccess","src":"1256:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1252:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7231,"initializationExpression":{"assignments":[7209],"declarations":[{"constant":false,"id":7209,"mutability":"mutable","name":"i","nameLocation":"1245:1:23","nodeType":"VariableDeclaration","scope":7231,"src":"1237:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7211,"initialValue":{"hexValue":"30","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1249:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1237:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1268:3:23","subExpression":{"id":7216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"1270:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7218,"nodeType":"ExpressionStatement","src":"1268:3:23"},"nodeType":"ForStatement","src":"1232:101:23"},{"expression":{"id":7232,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"1345:13:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7195,"id":7233,"nodeType":"Return","src":"1338:20:23"}]},"functionSelector":"2e240ade","id":7235,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatchOneAddr","nameLocation":"1062:21:23","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"account","nameLocation":"1092:7:23","nodeType":"VariableDeclaration","scope":7235,"src":"1084:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7186,"name":"address","nodeType":"ElementaryTypeName","src":"1084:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7190,"mutability":"mutable","name":"ids","nameLocation":"1118:3:23","nodeType":"VariableDeclaration","scope":7235,"src":"1101:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7189,"nodeType":"ArrayTypeName","src":"1101:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1083:39:23"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7235,"src":"1144:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7193,"nodeType":"ArrayTypeName","src":"1144:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1143:18:23"},"scope":7428,"src":"1053:310:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7247,"nodeType":"Block","src":"1438:26:23","statements":[{"expression":{"arguments":[{"id":7244,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"1452:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7243,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1444:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7246,"nodeType":"ExpressionStatement","src":"1444:15:23"}]},"functionSelector":"02fe5305","id":7248,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7240,"name":"URI_SETTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"1421:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7241,"kind":"modifierInvocation","modifierName":{"id":7239,"name":"onlyRole","nameLocations":["1412:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1412:8:23"},"nodeType":"ModifierInvocation","src":"1412:25:23"}],"name":"setURI","nameLocation":"1376:6:23","nodeType":"FunctionDefinition","parameters":{"id":7238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7237,"mutability":"mutable","name":"newuri","nameLocation":"1397:6:23","nodeType":"VariableDeclaration","scope":7248,"src":"1383:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7236,"name":"string","nodeType":"ElementaryTypeName","src":"1383:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1382:22:23"},"returnParameters":{"id":7242,"nodeType":"ParameterList","parameters":[],"src":"1438:0:23"},"scope":7428,"src":"1367:97:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[618],"body":{"id":7274,"nodeType":"Block","src":"1543:121:23","statements":[{"assignments":[7257],"declarations":[{"constant":false,"id":7257,"mutability":"mutable","name":"baseURI","nameLocation":"1563:7:23","nodeType":"VariableDeclaration","scope":7274,"src":"1549:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7256,"name":"string","nodeType":"ElementaryTypeName","src":"1549:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7262,"initialValue":{"arguments":[{"id":7260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"1585:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7258,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1573:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155_$1432_$","typeString":"type(contract ERC1155)"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1581:3:23","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":618,"src":"1573:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1549:44:23"},{"expression":{"arguments":[{"arguments":[{"id":7267,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"1630:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7268,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"1639:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:8:23","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"1639:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7265,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1613:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1617:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"1613:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1606:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7263,"name":"string","nodeType":"ElementaryTypeName","src":"1606:6:23","typeDescriptions":{}}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7255,"id":7273,"nodeType":"Return","src":"1599:60:23"}]},"functionSelector":"0e89341c","id":7275,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1477:3:23","nodeType":"FunctionDefinition","overrides":{"id":7252,"nodeType":"OverrideSpecifier","overrides":[],"src":"1510:8:23"},"parameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"tokenId","nameLocation":"1489:7:23","nodeType":"VariableDeclaration","scope":7275,"src":"1481:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:17:23"},"returnParameters":{"id":7255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7275,"src":"1528:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7253,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1527:15:23"},"scope":7428,"src":"1468:196:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7284,"nodeType":"Block","src":"1714:19:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7281,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"1720:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1720:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7283,"nodeType":"ExpressionStatement","src":"1720:8:23"}]},"functionSelector":"8456cb59","id":7285,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7278,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"1701:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7279,"kind":"modifierInvocation","modifierName":{"id":7277,"name":"onlyRole","nameLocations":["1692:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1692:8:23"},"nodeType":"ModifierInvocation","src":"1692:21:23"}],"name":"pause","nameLocation":"1677:5:23","nodeType":"FunctionDefinition","parameters":{"id":7276,"nodeType":"ParameterList","parameters":[],"src":"1682:2:23"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[],"src":"1714:0:23"},"scope":7428,"src":"1668:65:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7294,"nodeType":"Block","src":"1785:21:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7291,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1791:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1791:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7293,"nodeType":"ExpressionStatement","src":"1791:10:23"}]},"functionSelector":"3f4ba83a","id":7295,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7288,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"1772:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7289,"kind":"modifierInvocation","modifierName":{"id":7287,"name":"onlyRole","nameLocations":["1763:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1763:8:23"},"nodeType":"ModifierInvocation","src":"1763:21:23"}],"name":"unpause","nameLocation":"1746:7:23","nodeType":"FunctionDefinition","parameters":{"id":7286,"nodeType":"ParameterList","parameters":[],"src":"1753:2:23"},"returnParameters":{"id":7290,"nodeType":"ParameterList","parameters":[],"src":"1785:0:23"},"scope":7428,"src":"1737:69:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7316,"nodeType":"Block","src":"1917:43:23","statements":[{"expression":{"arguments":[{"id":7310,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"1929:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7311,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"1938:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7312,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"1942:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7313,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"1950:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7309,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1923:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1923:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7315,"nodeType":"ExpressionStatement","src":"1923:32:23"}]},"functionSelector":"731133e9","id":7317,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7306,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"1904:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7307,"kind":"modifierInvocation","modifierName":{"id":7305,"name":"onlyRole","nameLocations":["1895:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1895:8:23"},"nodeType":"ModifierInvocation","src":"1895:21:23"}],"name":"mint","nameLocation":"1819:4:23","nodeType":"FunctionDefinition","parameters":{"id":7304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"account","nameLocation":"1832:7:23","nodeType":"VariableDeclaration","scope":7317,"src":"1824:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7296,"name":"address","nodeType":"ElementaryTypeName","src":"1824:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7299,"mutability":"mutable","name":"id","nameLocation":"1849:2:23","nodeType":"VariableDeclaration","scope":7317,"src":"1841:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7301,"mutability":"mutable","name":"amount","nameLocation":"1861:6:23","nodeType":"VariableDeclaration","scope":7317,"src":"1853:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7303,"mutability":"mutable","name":"data","nameLocation":"1882:4:23","nodeType":"VariableDeclaration","scope":7317,"src":"1869:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7302,"name":"bytes","nodeType":"ElementaryTypeName","src":"1869:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1823:64:23"},"returnParameters":{"id":7308,"nodeType":"ParameterList","parameters":[],"src":"1917:0:23"},"scope":7428,"src":"1810:150:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7340,"nodeType":"Block","src":"2091:45:23","statements":[{"expression":{"arguments":[{"id":7334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"2108:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7335,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"2112:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7336,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"2117:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7337,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"2126:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7333,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2097:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7339,"nodeType":"ExpressionStatement","src":"2097:34:23"}]},"functionSelector":"1f7fdffa","id":7341,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7330,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"2078:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7331,"kind":"modifierInvocation","modifierName":{"id":7329,"name":"onlyRole","nameLocations":["2069:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2069:8:23"},"nodeType":"ModifierInvocation","src":"2069:21:23"}],"name":"mintBatch","nameLocation":"1973:9:23","nodeType":"FunctionDefinition","parameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"to","nameLocation":"1991:2:23","nodeType":"VariableDeclaration","scope":7341,"src":"1983:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7318,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7322,"mutability":"mutable","name":"ids","nameLocation":"2012:3:23","nodeType":"VariableDeclaration","scope":7341,"src":"1995:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7321,"nodeType":"ArrayTypeName","src":"1995:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7325,"mutability":"mutable","name":"amounts","nameLocation":"2034:7:23","nodeType":"VariableDeclaration","scope":7341,"src":"2017:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7323,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7324,"nodeType":"ArrayTypeName","src":"2017:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7327,"mutability":"mutable","name":"data","nameLocation":"2056:4:23","nodeType":"VariableDeclaration","scope":7341,"src":"2043:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7326,"name":"bytes","nodeType":"ElementaryTypeName","src":"2043:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1982:79:23"},"returnParameters":{"id":7332,"nodeType":"ParameterList","parameters":[],"src":"2091:0:23"},"scope":7428,"src":"1964:172:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7384,"nodeType":"Block","src":"2286:115:23","statements":[{"body":{"id":7382,"nodeType":"Block","src":"2338:59:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7370,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"2352:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7372,"indexExpression":{"id":7371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"2361:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2352:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7373,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"2365:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7375,"indexExpression":{"id":7374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"2369:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2365:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":7376,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"2373:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7378,"indexExpression":{"id":7377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"2381:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2373:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7379,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"2385:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7369,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2346:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7381,"nodeType":"ExpressionStatement","src":"2346:44:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"2312:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7363,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"2316:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2325:6:23","memberName":"length","nodeType":"MemberAccess","src":"2316:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2312:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7383,"initializationExpression":{"assignments":[7359],"declarations":[{"constant":false,"id":7359,"mutability":"mutable","name":"i","nameLocation":"2305:1:23","nodeType":"VariableDeclaration","scope":7383,"src":"2297:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7361,"initialValue":{"hexValue":"30","id":7360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2309:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2297:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2333:3:23","subExpression":{"id":7366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"2335:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7368,"nodeType":"ExpressionStatement","src":"2333:3:23"},"nodeType":"ForStatement","src":"2292:105:23"}]},"functionSelector":"503a28bd","id":7385,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7355,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"2273:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7356,"kind":"modifierInvocation","modifierName":{"id":7354,"name":"onlyRole","nameLocations":["2264:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2264:8:23"},"nodeType":"ModifierInvocation","src":"2264:21:23"}],"name":"mintBatchAddr","nameLocation":"2149:13:23","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"accounts","nameLocation":"2180:8:23","nodeType":"VariableDeclaration","scope":7385,"src":"2163:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7342,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7343,"nodeType":"ArrayTypeName","src":"2163:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7347,"mutability":"mutable","name":"ids","nameLocation":"2207:3:23","nodeType":"VariableDeclaration","scope":7385,"src":"2190:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7346,"nodeType":"ArrayTypeName","src":"2190:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7350,"mutability":"mutable","name":"amounts","nameLocation":"2229:7:23","nodeType":"VariableDeclaration","scope":7385,"src":"2212:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7349,"nodeType":"ArrayTypeName","src":"2212:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7352,"mutability":"mutable","name":"data","nameLocation":"2251:4:23","nodeType":"VariableDeclaration","scope":7385,"src":"2238:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7351,"name":"bytes","nodeType":"ElementaryTypeName","src":"2238:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2162:94:23"},"returnParameters":{"id":7357,"nodeType":"ParameterList","parameters":[],"src":"2286:0:23"},"scope":7428,"src":"2140:261:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[981,1715],"body":{"id":7410,"nodeType":"Block","src":"2604:47:23","statements":[{"expression":{"arguments":[{"id":7404,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"2624:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"2630:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7406,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"2634:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7407,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"2639:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":7401,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2610:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RoguesItems_$7428_$","typeString":"type(contract super RoguesItems)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2616:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"2610:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"ExpressionStatement","src":"2610:36:23"}]},"id":7411,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2479:7:23","nodeType":"FunctionDefinition","overrides":{"id":7399,"nodeType":"OverrideSpecifier","overrides":[{"id":7397,"name":"ERC1155","nameLocations":["2578:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"2578:7:23"},{"id":7398,"name":"ERC1155Pausable","nameLocations":["2587:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"2587:15:23"}],"src":"2569:34:23"},"parameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7387,"mutability":"mutable","name":"from","nameLocation":"2495:4:23","nodeType":"VariableDeclaration","scope":7411,"src":"2487:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7386,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7389,"mutability":"mutable","name":"to","nameLocation":"2509:2:23","nodeType":"VariableDeclaration","scope":7411,"src":"2501:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7388,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7392,"mutability":"mutable","name":"ids","nameLocation":"2530:3:23","nodeType":"VariableDeclaration","scope":7411,"src":"2513:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7390,"name":"uint256","nodeType":"ElementaryTypeName","src":"2513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7391,"nodeType":"ArrayTypeName","src":"2513:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7395,"mutability":"mutable","name":"values","nameLocation":"2552:6:23","nodeType":"VariableDeclaration","scope":7411,"src":"2535:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7394,"nodeType":"ArrayTypeName","src":"2535:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2486:73:23"},"returnParameters":{"id":7400,"nodeType":"ParameterList","parameters":[],"src":"2604:0:23"},"scope":7428,"src":"2470:181:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[62,607],"body":{"id":7426,"nodeType":"Block","src":"2762:54:23","statements":[{"expression":{"arguments":[{"id":7423,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"2799:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7421,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2775:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RoguesItems_$7428_$","typeString":"type(contract super RoguesItems)"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2781:17:23","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2775:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7420,"id":7425,"nodeType":"Return","src":"2768:43:23"}]},"functionSelector":"01ffc9a7","id":7427,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2664:17:23","nodeType":"FunctionDefinition","overrides":{"id":7417,"nodeType":"OverrideSpecifier","overrides":[{"id":7415,"name":"ERC1155","nameLocations":["2723:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"2723:7:23"},{"id":7416,"name":"AccessControl","nameLocations":["2732:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"2732:13:23"}],"src":"2714:32:23"},"parameters":{"id":7414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7413,"mutability":"mutable","name":"interfaceId","nameLocation":"2689:11:23","nodeType":"VariableDeclaration","scope":7427,"src":"2682:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7412,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2682:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2681:20:23"},"returnParameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7427,"src":"2756:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7418,"name":"bool","nodeType":"ElementaryTypeName","src":"2756:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2755:6:23"},"scope":7428,"src":"2655:161:23","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7429,"src":"520:2298:23","usedErrors":[305,308,480,485,490,497,502,507,514,2900,2903],"usedEvents":[317,326,335,1452,1467,1476,1483,2892,2897]}],"src":"81:2738:23"},"id":23}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol":{"ERC1155Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","paused()":"5c975abb","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":\"ERC1155Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0x8caf50b64528a487bc45c6cf89b514adbbdaae20aaf6e98a834c5e74c914c660\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6408411bf7a72026f5fee578ff58f4fb0f6951e6ee7092776b81f563931dd704\",\"dweb:/ipfs/QmeFjtJxSKFRD5LjREUds1bptQzqHs7gwPtrHBdDfzumJC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c24b44c28a9cc4b5e8ee0d97ef9194467307fe5e3a64ed49cf371efc7c7039c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x24 0xB4 0x4C 0x28 0xA9 0xCC 0x4B MCOPY DUP15 0xE0 0xD9 PUSH31 0xF9194467307FE5E3A64ED49CF371EFC7C7039C64736F6C634300081C003300 ","sourceMap":"439:3094:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c24b44c28a9cc4b5e8ee0d97ef9194467307fe5e3a64ed49cf371efc7c7039c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x24 0xB4 0x4C 0x28 0xA9 0xCC 0x4B MCOPY DUP15 0xE0 0xD9 PUSH31 0xF9194467307FE5E3A64ED49CF371EFC7C7039C64736F6C634300081C003300 ","sourceMap":"439:3094:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c3edce62ae8cab5cb19eaee71e303eb8e5bf2e23f3aead66687233417369f30664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xED 0xCE PUSH3 0xAE8CAB TLOAD 0xB1 SWAP15 0xAE 0xE7 0x1E ADDRESS RETURNDATACOPY 0xB8 0xE5 0xBF 0x2E 0x23 RETURN 0xAE 0xAD PUSH7 0x687233417369F3 MOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"459:17881:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c3edce62ae8cab5cb19eaee71e303eb8e5bf2e23f3aead66687233417369f30664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xED 0xCE PUSH3 0xAE8CAB TLOAD 0xB1 SWAP15 0xAE 0xE7 0x1E ADDRESS RETURNDATACOPY 0xB8 0xE5 0xBF 0x2E 0x23 RETURN 0xAE 0xAD PUSH7 0x687233417369F3 MOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"459:17881:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a24cff8dced09d2aed8655114155a6e8d65e2e79429fb59e97683d8033d86a9664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x4C SELFDESTRUCT DUP14 0xCE 0xD0 SWAP14 0x2A 0xED DUP7 SSTORE GT COINBASE SSTORE 0xA6 0xE8 0xD6 MCOPY 0x2E PUSH26 0x429FB59E97683D8033D86A9664736F6C634300081C0033000000 ","sourceMap":"224:218:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a24cff8dced09d2aed8655114155a6e8d65e2e79429fb59e97683d8033d86a9664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x4C SELFDESTRUCT DUP14 0xCE 0xD0 SWAP14 0x2A 0xED DUP7 SSTORE GT COINBASE SSTORE 0xA6 0xE8 0xD6 MCOPY 0x2E PUSH26 0x429FB59E97683D8033D86A9664736F6C634300081C0033000000 ","sourceMap":"224:218:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9371569058b22b070937613372db972ff9db718ff26025cfcee9b74d8cc084264736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 CALLDATACOPY ISZERO PUSH10 0x58B22B070937613372D 0xB9 PUSH19 0xFF9DB718FF26025CFCEE9B74D8CC084264736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"1598:3723:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9371569058b22b070937613372db972ff9db718ff26025cfcee9b74d8cc084264736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 CALLDATACOPY ISZERO PUSH10 0x58B22B070937613372D 0xB9 PUSH19 0xFF9DB718FF26025CFCEE9B74D8CC084264736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"1598:3723:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019b68d30b63a6eb1f31690db7089608c3d253889b7a5a42f7d1bf88ee718364364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB6 DUP14 ADDRESS 0xB6 GASPRICE PUSH15 0xB1F31690DB7089608C3D253889B7A5 LOG4 0x2F PUSH30 0x1BF88EE718364364736F6C634300081C0033000000000000000000000000 ","sourceMap":"251:3680:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019b68d30b63a6eb1f31690db7089608c3d253889b7a5a42f7d1bf88ee718364364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB6 DUP14 ADDRESS 0xB6 GASPRICE PUSH15 0xB1F31690DB7089608C3D253889B7A5 LOG4 0x2F PUSH30 0x1BF88EE718364364736F6C634300081C0033000000000000000000000000 ","sourceMap":"251:3680:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/RoguesItems.sol":{"RoguesItems":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"pauser","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"URI_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatchOneAddr","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatchAddr","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2912":{"entryPoint":null,"id":2912,"parameterSlots":0,"returnSlots":0},"@_576":{"entryPoint":null,"id":576,"parameterSlots":1,"returnSlots":0},"@_7185":{"entryPoint":null,"id":7185,"parameterSlots":3,"returnSlots":0},"@_grantRole_256":{"entryPoint":254,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_2808":{"entryPoint":615,"id":2808,"parameterSlots":0,"returnSlots":1},"@_setURI_1193":{"entryPoint":235,"id":1193,"parameterSlots":1,"returnSlots":0},"@hasRole_80":{"entryPoint":508,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":959,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1256,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":660,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":628,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1091,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1221,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1111,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1397,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":980,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":910,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1369,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1101,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1339,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":863,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":816,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":623,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":996,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1326,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1197,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1009,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1155,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":678,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1192,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:6738:24","nodeType":"YulBlock","src":"0:6738:24","statements":[{"body":{"nativeSrc":"47:35:24","nodeType":"YulBlock","src":"47:35:24","statements":[{"nativeSrc":"57:19:24","nodeType":"YulAssignment","src":"57:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:24","nodeType":"YulLiteral","src":"73:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:24","nodeType":"YulIdentifier","src":"67:5:24"},"nativeSrc":"67:9:24","nodeType":"YulFunctionCall","src":"67:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:24","nodeType":"YulIdentifier","src":"57:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:24","nodeType":"YulTypedName","src":"40:6:24","type":""}],"src":"7:75:24"},{"body":{"nativeSrc":"177:28:24","nodeType":"YulBlock","src":"177:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:24","nodeType":"YulLiteral","src":"194:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:24","nodeType":"YulLiteral","src":"197:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:24","nodeType":"YulIdentifier","src":"187:6:24"},"nativeSrc":"187:12:24","nodeType":"YulFunctionCall","src":"187:12:24"},"nativeSrc":"187:12:24","nodeType":"YulExpressionStatement","src":"187:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:24","nodeType":"YulFunctionDefinition","src":"88:117:24"},{"body":{"nativeSrc":"300:28:24","nodeType":"YulBlock","src":"300:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:24","nodeType":"YulFunctionDefinition","src":"211:117:24"},{"body":{"nativeSrc":"379:81:24","nodeType":"YulBlock","src":"379:81:24","statements":[{"nativeSrc":"389:65:24","nodeType":"YulAssignment","src":"389:65:24","value":{"arguments":[{"name":"value","nativeSrc":"404:5:24","nodeType":"YulIdentifier","src":"404:5:24"},{"kind":"number","nativeSrc":"411:42:24","nodeType":"YulLiteral","src":"411:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:24","nodeType":"YulIdentifier","src":"400:3:24"},"nativeSrc":"400:54:24","nodeType":"YulFunctionCall","src":"400:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:24","nodeType":"YulIdentifier","src":"389:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:24","nodeType":"YulTypedName","src":"361:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:24","nodeType":"YulTypedName","src":"371:7:24","type":""}],"src":"334:126:24"},{"body":{"nativeSrc":"511:51:24","nodeType":"YulBlock","src":"511:51:24","statements":[{"nativeSrc":"521:35:24","nodeType":"YulAssignment","src":"521:35:24","value":{"arguments":[{"name":"value","nativeSrc":"550:5:24","nodeType":"YulIdentifier","src":"550:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:24","nodeType":"YulIdentifier","src":"532:17:24"},"nativeSrc":"532:24:24","nodeType":"YulFunctionCall","src":"532:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:24","nodeType":"YulIdentifier","src":"521:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:24","nodeType":"YulTypedName","src":"493:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:24","nodeType":"YulTypedName","src":"503:7:24","type":""}],"src":"466:96:24"},{"body":{"nativeSrc":"611:79:24","nodeType":"YulBlock","src":"611:79:24","statements":[{"body":{"nativeSrc":"668:16:24","nodeType":"YulBlock","src":"668:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:24","nodeType":"YulLiteral","src":"677:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:24","nodeType":"YulLiteral","src":"680:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:24","nodeType":"YulIdentifier","src":"670:6:24"},"nativeSrc":"670:12:24","nodeType":"YulFunctionCall","src":"670:12:24"},"nativeSrc":"670:12:24","nodeType":"YulExpressionStatement","src":"670:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:24","nodeType":"YulIdentifier","src":"634:5:24"},{"arguments":[{"name":"value","nativeSrc":"659:5:24","nodeType":"YulIdentifier","src":"659:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:24","nodeType":"YulIdentifier","src":"641:17:24"},"nativeSrc":"641:24:24","nodeType":"YulFunctionCall","src":"641:24:24"}],"functionName":{"name":"eq","nativeSrc":"631:2:24","nodeType":"YulIdentifier","src":"631:2:24"},"nativeSrc":"631:35:24","nodeType":"YulFunctionCall","src":"631:35:24"}],"functionName":{"name":"iszero","nativeSrc":"624:6:24","nodeType":"YulIdentifier","src":"624:6:24"},"nativeSrc":"624:43:24","nodeType":"YulFunctionCall","src":"624:43:24"},"nativeSrc":"621:63:24","nodeType":"YulIf","src":"621:63:24"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:24","nodeType":"YulTypedName","src":"604:5:24","type":""}],"src":"568:122:24"},{"body":{"nativeSrc":"759:80:24","nodeType":"YulBlock","src":"759:80:24","statements":[{"nativeSrc":"769:22:24","nodeType":"YulAssignment","src":"769:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:24","nodeType":"YulIdentifier","src":"784:6:24"}],"functionName":{"name":"mload","nativeSrc":"778:5:24","nodeType":"YulIdentifier","src":"778:5:24"},"nativeSrc":"778:13:24","nodeType":"YulFunctionCall","src":"778:13:24"},"variableNames":[{"name":"value","nativeSrc":"769:5:24","nodeType":"YulIdentifier","src":"769:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:24","nodeType":"YulIdentifier","src":"827:5:24"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:24","nodeType":"YulIdentifier","src":"800:26:24"},"nativeSrc":"800:33:24","nodeType":"YulFunctionCall","src":"800:33:24"},"nativeSrc":"800:33:24","nodeType":"YulExpressionStatement","src":"800:33:24"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:24","nodeType":"YulTypedName","src":"737:6:24","type":""},{"name":"end","nativeSrc":"745:3:24","nodeType":"YulTypedName","src":"745:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:24","nodeType":"YulTypedName","src":"753:5:24","type":""}],"src":"696:143:24"},{"body":{"nativeSrc":"956:552:24","nodeType":"YulBlock","src":"956:552:24","statements":[{"body":{"nativeSrc":"1002:83:24","nodeType":"YulBlock","src":"1002:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1004:77:24","nodeType":"YulIdentifier","src":"1004:77:24"},"nativeSrc":"1004:79:24","nodeType":"YulFunctionCall","src":"1004:79:24"},"nativeSrc":"1004:79:24","nodeType":"YulExpressionStatement","src":"1004:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"977:7:24","nodeType":"YulIdentifier","src":"977:7:24"},{"name":"headStart","nativeSrc":"986:9:24","nodeType":"YulIdentifier","src":"986:9:24"}],"functionName":{"name":"sub","nativeSrc":"973:3:24","nodeType":"YulIdentifier","src":"973:3:24"},"nativeSrc":"973:23:24","nodeType":"YulFunctionCall","src":"973:23:24"},{"kind":"number","nativeSrc":"998:2:24","nodeType":"YulLiteral","src":"998:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"969:3:24","nodeType":"YulIdentifier","src":"969:3:24"},"nativeSrc":"969:32:24","nodeType":"YulFunctionCall","src":"969:32:24"},"nativeSrc":"966:119:24","nodeType":"YulIf","src":"966:119:24"},{"nativeSrc":"1095:128:24","nodeType":"YulBlock","src":"1095:128:24","statements":[{"nativeSrc":"1110:15:24","nodeType":"YulVariableDeclaration","src":"1110:15:24","value":{"kind":"number","nativeSrc":"1124:1:24","nodeType":"YulLiteral","src":"1124:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1114:6:24","nodeType":"YulTypedName","src":"1114:6:24","type":""}]},{"nativeSrc":"1139:74:24","nodeType":"YulAssignment","src":"1139:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1185:9:24","nodeType":"YulIdentifier","src":"1185:9:24"},{"name":"offset","nativeSrc":"1196:6:24","nodeType":"YulIdentifier","src":"1196:6:24"}],"functionName":{"name":"add","nativeSrc":"1181:3:24","nodeType":"YulIdentifier","src":"1181:3:24"},"nativeSrc":"1181:22:24","nodeType":"YulFunctionCall","src":"1181:22:24"},{"name":"dataEnd","nativeSrc":"1205:7:24","nodeType":"YulIdentifier","src":"1205:7:24"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1149:31:24","nodeType":"YulIdentifier","src":"1149:31:24"},"nativeSrc":"1149:64:24","nodeType":"YulFunctionCall","src":"1149:64:24"},"variableNames":[{"name":"value0","nativeSrc":"1139:6:24","nodeType":"YulIdentifier","src":"1139:6:24"}]}]},{"nativeSrc":"1233:129:24","nodeType":"YulBlock","src":"1233:129:24","statements":[{"nativeSrc":"1248:16:24","nodeType":"YulVariableDeclaration","src":"1248:16:24","value":{"kind":"number","nativeSrc":"1262:2:24","nodeType":"YulLiteral","src":"1262:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1252:6:24","nodeType":"YulTypedName","src":"1252:6:24","type":""}]},{"nativeSrc":"1278:74:24","nodeType":"YulAssignment","src":"1278:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1324:9:24","nodeType":"YulIdentifier","src":"1324:9:24"},{"name":"offset","nativeSrc":"1335:6:24","nodeType":"YulIdentifier","src":"1335:6:24"}],"functionName":{"name":"add","nativeSrc":"1320:3:24","nodeType":"YulIdentifier","src":"1320:3:24"},"nativeSrc":"1320:22:24","nodeType":"YulFunctionCall","src":"1320:22:24"},{"name":"dataEnd","nativeSrc":"1344:7:24","nodeType":"YulIdentifier","src":"1344:7:24"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1288:31:24","nodeType":"YulIdentifier","src":"1288:31:24"},"nativeSrc":"1288:64:24","nodeType":"YulFunctionCall","src":"1288:64:24"},"variableNames":[{"name":"value1","nativeSrc":"1278:6:24","nodeType":"YulIdentifier","src":"1278:6:24"}]}]},{"nativeSrc":"1372:129:24","nodeType":"YulBlock","src":"1372:129:24","statements":[{"nativeSrc":"1387:16:24","nodeType":"YulVariableDeclaration","src":"1387:16:24","value":{"kind":"number","nativeSrc":"1401:2:24","nodeType":"YulLiteral","src":"1401:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1391:6:24","nodeType":"YulTypedName","src":"1391:6:24","type":""}]},{"nativeSrc":"1417:74:24","nodeType":"YulAssignment","src":"1417:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1463:9:24","nodeType":"YulIdentifier","src":"1463:9:24"},{"name":"offset","nativeSrc":"1474:6:24","nodeType":"YulIdentifier","src":"1474:6:24"}],"functionName":{"name":"add","nativeSrc":"1459:3:24","nodeType":"YulIdentifier","src":"1459:3:24"},"nativeSrc":"1459:22:24","nodeType":"YulFunctionCall","src":"1459:22:24"},{"name":"dataEnd","nativeSrc":"1483:7:24","nodeType":"YulIdentifier","src":"1483:7:24"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1427:31:24","nodeType":"YulIdentifier","src":"1427:31:24"},"nativeSrc":"1427:64:24","nodeType":"YulFunctionCall","src":"1427:64:24"},"variableNames":[{"name":"value2","nativeSrc":"1417:6:24","nodeType":"YulIdentifier","src":"1417:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nativeSrc":"845:663:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"910:9:24","nodeType":"YulTypedName","src":"910:9:24","type":""},{"name":"dataEnd","nativeSrc":"921:7:24","nodeType":"YulTypedName","src":"921:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"933:6:24","nodeType":"YulTypedName","src":"933:6:24","type":""},{"name":"value1","nativeSrc":"941:6:24","nodeType":"YulTypedName","src":"941:6:24","type":""},{"name":"value2","nativeSrc":"949:6:24","nodeType":"YulTypedName","src":"949:6:24","type":""}],"src":"845:663:24"},{"body":{"nativeSrc":"1573:40:24","nodeType":"YulBlock","src":"1573:40:24","statements":[{"nativeSrc":"1584:22:24","nodeType":"YulAssignment","src":"1584:22:24","value":{"arguments":[{"name":"value","nativeSrc":"1600:5:24","nodeType":"YulIdentifier","src":"1600:5:24"}],"functionName":{"name":"mload","nativeSrc":"1594:5:24","nodeType":"YulIdentifier","src":"1594:5:24"},"nativeSrc":"1594:12:24","nodeType":"YulFunctionCall","src":"1594:12:24"},"variableNames":[{"name":"length","nativeSrc":"1584:6:24","nodeType":"YulIdentifier","src":"1584:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1514:99:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1556:5:24","nodeType":"YulTypedName","src":"1556:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1566:6:24","nodeType":"YulTypedName","src":"1566:6:24","type":""}],"src":"1514:99:24"},{"body":{"nativeSrc":"1647:152:24","nodeType":"YulBlock","src":"1647:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1664:1:24","nodeType":"YulLiteral","src":"1664:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1667:77:24","nodeType":"YulLiteral","src":"1667:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1657:6:24","nodeType":"YulIdentifier","src":"1657:6:24"},"nativeSrc":"1657:88:24","nodeType":"YulFunctionCall","src":"1657:88:24"},"nativeSrc":"1657:88:24","nodeType":"YulExpressionStatement","src":"1657:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1761:1:24","nodeType":"YulLiteral","src":"1761:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"1764:4:24","nodeType":"YulLiteral","src":"1764:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1754:6:24","nodeType":"YulIdentifier","src":"1754:6:24"},"nativeSrc":"1754:15:24","nodeType":"YulFunctionCall","src":"1754:15:24"},"nativeSrc":"1754:15:24","nodeType":"YulExpressionStatement","src":"1754:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1785:1:24","nodeType":"YulLiteral","src":"1785:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1788:4:24","nodeType":"YulLiteral","src":"1788:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1778:6:24","nodeType":"YulIdentifier","src":"1778:6:24"},"nativeSrc":"1778:15:24","nodeType":"YulFunctionCall","src":"1778:15:24"},"nativeSrc":"1778:15:24","nodeType":"YulExpressionStatement","src":"1778:15:24"}]},"name":"panic_error_0x41","nativeSrc":"1619:180:24","nodeType":"YulFunctionDefinition","src":"1619:180:24"},{"body":{"nativeSrc":"1833:152:24","nodeType":"YulBlock","src":"1833:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1850:1:24","nodeType":"YulLiteral","src":"1850:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1853:77:24","nodeType":"YulLiteral","src":"1853:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1843:6:24","nodeType":"YulIdentifier","src":"1843:6:24"},"nativeSrc":"1843:88:24","nodeType":"YulFunctionCall","src":"1843:88:24"},"nativeSrc":"1843:88:24","nodeType":"YulExpressionStatement","src":"1843:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1947:1:24","nodeType":"YulLiteral","src":"1947:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"1950:4:24","nodeType":"YulLiteral","src":"1950:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1940:6:24","nodeType":"YulIdentifier","src":"1940:6:24"},"nativeSrc":"1940:15:24","nodeType":"YulFunctionCall","src":"1940:15:24"},"nativeSrc":"1940:15:24","nodeType":"YulExpressionStatement","src":"1940:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1971:1:24","nodeType":"YulLiteral","src":"1971:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1974:4:24","nodeType":"YulLiteral","src":"1974:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1964:6:24","nodeType":"YulIdentifier","src":"1964:6:24"},"nativeSrc":"1964:15:24","nodeType":"YulFunctionCall","src":"1964:15:24"},"nativeSrc":"1964:15:24","nodeType":"YulExpressionStatement","src":"1964:15:24"}]},"name":"panic_error_0x22","nativeSrc":"1805:180:24","nodeType":"YulFunctionDefinition","src":"1805:180:24"},{"body":{"nativeSrc":"2042:269:24","nodeType":"YulBlock","src":"2042:269:24","statements":[{"nativeSrc":"2052:22:24","nodeType":"YulAssignment","src":"2052:22:24","value":{"arguments":[{"name":"data","nativeSrc":"2066:4:24","nodeType":"YulIdentifier","src":"2066:4:24"},{"kind":"number","nativeSrc":"2072:1:24","nodeType":"YulLiteral","src":"2072:1:24","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"2062:3:24","nodeType":"YulIdentifier","src":"2062:3:24"},"nativeSrc":"2062:12:24","nodeType":"YulFunctionCall","src":"2062:12:24"},"variableNames":[{"name":"length","nativeSrc":"2052:6:24","nodeType":"YulIdentifier","src":"2052:6:24"}]},{"nativeSrc":"2083:38:24","nodeType":"YulVariableDeclaration","src":"2083:38:24","value":{"arguments":[{"name":"data","nativeSrc":"2113:4:24","nodeType":"YulIdentifier","src":"2113:4:24"},{"kind":"number","nativeSrc":"2119:1:24","nodeType":"YulLiteral","src":"2119:1:24","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2109:3:24","nodeType":"YulIdentifier","src":"2109:3:24"},"nativeSrc":"2109:12:24","nodeType":"YulFunctionCall","src":"2109:12:24"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2087:18:24","nodeType":"YulTypedName","src":"2087:18:24","type":""}]},{"body":{"nativeSrc":"2160:51:24","nodeType":"YulBlock","src":"2160:51:24","statements":[{"nativeSrc":"2174:27:24","nodeType":"YulAssignment","src":"2174:27:24","value":{"arguments":[{"name":"length","nativeSrc":"2188:6:24","nodeType":"YulIdentifier","src":"2188:6:24"},{"kind":"number","nativeSrc":"2196:4:24","nodeType":"YulLiteral","src":"2196:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2184:3:24","nodeType":"YulIdentifier","src":"2184:3:24"},"nativeSrc":"2184:17:24","nodeType":"YulFunctionCall","src":"2184:17:24"},"variableNames":[{"name":"length","nativeSrc":"2174:6:24","nodeType":"YulIdentifier","src":"2174:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2140:18:24","nodeType":"YulIdentifier","src":"2140:18:24"}],"functionName":{"name":"iszero","nativeSrc":"2133:6:24","nodeType":"YulIdentifier","src":"2133:6:24"},"nativeSrc":"2133:26:24","nodeType":"YulFunctionCall","src":"2133:26:24"},"nativeSrc":"2130:81:24","nodeType":"YulIf","src":"2130:81:24"},{"body":{"nativeSrc":"2263:42:24","nodeType":"YulBlock","src":"2263:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2277:16:24","nodeType":"YulIdentifier","src":"2277:16:24"},"nativeSrc":"2277:18:24","nodeType":"YulFunctionCall","src":"2277:18:24"},"nativeSrc":"2277:18:24","nodeType":"YulExpressionStatement","src":"2277:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2227:18:24","nodeType":"YulIdentifier","src":"2227:18:24"},{"arguments":[{"name":"length","nativeSrc":"2250:6:24","nodeType":"YulIdentifier","src":"2250:6:24"},{"kind":"number","nativeSrc":"2258:2:24","nodeType":"YulLiteral","src":"2258:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2247:2:24","nodeType":"YulIdentifier","src":"2247:2:24"},"nativeSrc":"2247:14:24","nodeType":"YulFunctionCall","src":"2247:14:24"}],"functionName":{"name":"eq","nativeSrc":"2224:2:24","nodeType":"YulIdentifier","src":"2224:2:24"},"nativeSrc":"2224:38:24","nodeType":"YulFunctionCall","src":"2224:38:24"},"nativeSrc":"2221:84:24","nodeType":"YulIf","src":"2221:84:24"}]},"name":"extract_byte_array_length","nativeSrc":"1991:320:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2026:4:24","nodeType":"YulTypedName","src":"2026:4:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2035:6:24","nodeType":"YulTypedName","src":"2035:6:24","type":""}],"src":"1991:320:24"},{"body":{"nativeSrc":"2371:87:24","nodeType":"YulBlock","src":"2371:87:24","statements":[{"nativeSrc":"2381:11:24","nodeType":"YulAssignment","src":"2381:11:24","value":{"name":"ptr","nativeSrc":"2389:3:24","nodeType":"YulIdentifier","src":"2389:3:24"},"variableNames":[{"name":"data","nativeSrc":"2381:4:24","nodeType":"YulIdentifier","src":"2381:4:24"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2409:1:24","nodeType":"YulLiteral","src":"2409:1:24","type":"","value":"0"},{"name":"ptr","nativeSrc":"2412:3:24","nodeType":"YulIdentifier","src":"2412:3:24"}],"functionName":{"name":"mstore","nativeSrc":"2402:6:24","nodeType":"YulIdentifier","src":"2402:6:24"},"nativeSrc":"2402:14:24","nodeType":"YulFunctionCall","src":"2402:14:24"},"nativeSrc":"2402:14:24","nodeType":"YulExpressionStatement","src":"2402:14:24"},{"nativeSrc":"2425:26:24","nodeType":"YulAssignment","src":"2425:26:24","value":{"arguments":[{"kind":"number","nativeSrc":"2443:1:24","nodeType":"YulLiteral","src":"2443:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2446:4:24","nodeType":"YulLiteral","src":"2446:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2433:9:24","nodeType":"YulIdentifier","src":"2433:9:24"},"nativeSrc":"2433:18:24","nodeType":"YulFunctionCall","src":"2433:18:24"},"variableNames":[{"name":"data","nativeSrc":"2425:4:24","nodeType":"YulIdentifier","src":"2425:4:24"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2317:141:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2358:3:24","nodeType":"YulTypedName","src":"2358:3:24","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2366:4:24","nodeType":"YulTypedName","src":"2366:4:24","type":""}],"src":"2317:141:24"},{"body":{"nativeSrc":"2508:49:24","nodeType":"YulBlock","src":"2508:49:24","statements":[{"nativeSrc":"2518:33:24","nodeType":"YulAssignment","src":"2518:33:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2536:5:24","nodeType":"YulIdentifier","src":"2536:5:24"},{"kind":"number","nativeSrc":"2543:2:24","nodeType":"YulLiteral","src":"2543:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2532:3:24","nodeType":"YulIdentifier","src":"2532:3:24"},"nativeSrc":"2532:14:24","nodeType":"YulFunctionCall","src":"2532:14:24"},{"kind":"number","nativeSrc":"2548:2:24","nodeType":"YulLiteral","src":"2548:2:24","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2528:3:24","nodeType":"YulIdentifier","src":"2528:3:24"},"nativeSrc":"2528:23:24","nodeType":"YulFunctionCall","src":"2528:23:24"},"variableNames":[{"name":"result","nativeSrc":"2518:6:24","nodeType":"YulIdentifier","src":"2518:6:24"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2464:93:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2491:5:24","nodeType":"YulTypedName","src":"2491:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2501:6:24","nodeType":"YulTypedName","src":"2501:6:24","type":""}],"src":"2464:93:24"},{"body":{"nativeSrc":"2616:54:24","nodeType":"YulBlock","src":"2616:54:24","statements":[{"nativeSrc":"2626:37:24","nodeType":"YulAssignment","src":"2626:37:24","value":{"arguments":[{"name":"bits","nativeSrc":"2651:4:24","nodeType":"YulIdentifier","src":"2651:4:24"},{"name":"value","nativeSrc":"2657:5:24","nodeType":"YulIdentifier","src":"2657:5:24"}],"functionName":{"name":"shl","nativeSrc":"2647:3:24","nodeType":"YulIdentifier","src":"2647:3:24"},"nativeSrc":"2647:16:24","nodeType":"YulFunctionCall","src":"2647:16:24"},"variableNames":[{"name":"newValue","nativeSrc":"2626:8:24","nodeType":"YulIdentifier","src":"2626:8:24"}]}]},"name":"shift_left_dynamic","nativeSrc":"2563:107:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2591:4:24","nodeType":"YulTypedName","src":"2591:4:24","type":""},{"name":"value","nativeSrc":"2597:5:24","nodeType":"YulTypedName","src":"2597:5:24","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2607:8:24","nodeType":"YulTypedName","src":"2607:8:24","type":""}],"src":"2563:107:24"},{"body":{"nativeSrc":"2752:317:24","nodeType":"YulBlock","src":"2752:317:24","statements":[{"nativeSrc":"2762:35:24","nodeType":"YulVariableDeclaration","src":"2762:35:24","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2783:10:24","nodeType":"YulIdentifier","src":"2783:10:24"},{"kind":"number","nativeSrc":"2795:1:24","nodeType":"YulLiteral","src":"2795:1:24","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2779:3:24","nodeType":"YulIdentifier","src":"2779:3:24"},"nativeSrc":"2779:18:24","nodeType":"YulFunctionCall","src":"2779:18:24"},"variables":[{"name":"shiftBits","nativeSrc":"2766:9:24","nodeType":"YulTypedName","src":"2766:9:24","type":""}]},{"nativeSrc":"2806:109:24","nodeType":"YulVariableDeclaration","src":"2806:109:24","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2837:9:24","nodeType":"YulIdentifier","src":"2837:9:24"},{"kind":"number","nativeSrc":"2848:66:24","nodeType":"YulLiteral","src":"2848:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2818:18:24","nodeType":"YulIdentifier","src":"2818:18:24"},"nativeSrc":"2818:97:24","nodeType":"YulFunctionCall","src":"2818:97:24"},"variables":[{"name":"mask","nativeSrc":"2810:4:24","nodeType":"YulTypedName","src":"2810:4:24","type":""}]},{"nativeSrc":"2924:51:24","nodeType":"YulAssignment","src":"2924:51:24","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2955:9:24","nodeType":"YulIdentifier","src":"2955:9:24"},{"name":"toInsert","nativeSrc":"2966:8:24","nodeType":"YulIdentifier","src":"2966:8:24"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2936:18:24","nodeType":"YulIdentifier","src":"2936:18:24"},"nativeSrc":"2936:39:24","nodeType":"YulFunctionCall","src":"2936:39:24"},"variableNames":[{"name":"toInsert","nativeSrc":"2924:8:24","nodeType":"YulIdentifier","src":"2924:8:24"}]},{"nativeSrc":"2984:30:24","nodeType":"YulAssignment","src":"2984:30:24","value":{"arguments":[{"name":"value","nativeSrc":"2997:5:24","nodeType":"YulIdentifier","src":"2997:5:24"},{"arguments":[{"name":"mask","nativeSrc":"3008:4:24","nodeType":"YulIdentifier","src":"3008:4:24"}],"functionName":{"name":"not","nativeSrc":"3004:3:24","nodeType":"YulIdentifier","src":"3004:3:24"},"nativeSrc":"3004:9:24","nodeType":"YulFunctionCall","src":"3004:9:24"}],"functionName":{"name":"and","nativeSrc":"2993:3:24","nodeType":"YulIdentifier","src":"2993:3:24"},"nativeSrc":"2993:21:24","nodeType":"YulFunctionCall","src":"2993:21:24"},"variableNames":[{"name":"value","nativeSrc":"2984:5:24","nodeType":"YulIdentifier","src":"2984:5:24"}]},{"nativeSrc":"3023:40:24","nodeType":"YulAssignment","src":"3023:40:24","value":{"arguments":[{"name":"value","nativeSrc":"3036:5:24","nodeType":"YulIdentifier","src":"3036:5:24"},{"arguments":[{"name":"toInsert","nativeSrc":"3047:8:24","nodeType":"YulIdentifier","src":"3047:8:24"},{"name":"mask","nativeSrc":"3057:4:24","nodeType":"YulIdentifier","src":"3057:4:24"}],"functionName":{"name":"and","nativeSrc":"3043:3:24","nodeType":"YulIdentifier","src":"3043:3:24"},"nativeSrc":"3043:19:24","nodeType":"YulFunctionCall","src":"3043:19:24"}],"functionName":{"name":"or","nativeSrc":"3033:2:24","nodeType":"YulIdentifier","src":"3033:2:24"},"nativeSrc":"3033:30:24","nodeType":"YulFunctionCall","src":"3033:30:24"},"variableNames":[{"name":"result","nativeSrc":"3023:6:24","nodeType":"YulIdentifier","src":"3023:6:24"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2676:393:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2713:5:24","nodeType":"YulTypedName","src":"2713:5:24","type":""},{"name":"shiftBytes","nativeSrc":"2720:10:24","nodeType":"YulTypedName","src":"2720:10:24","type":""},{"name":"toInsert","nativeSrc":"2732:8:24","nodeType":"YulTypedName","src":"2732:8:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2745:6:24","nodeType":"YulTypedName","src":"2745:6:24","type":""}],"src":"2676:393:24"},{"body":{"nativeSrc":"3120:32:24","nodeType":"YulBlock","src":"3120:32:24","statements":[{"nativeSrc":"3130:16:24","nodeType":"YulAssignment","src":"3130:16:24","value":{"name":"value","nativeSrc":"3141:5:24","nodeType":"YulIdentifier","src":"3141:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"3130:7:24","nodeType":"YulIdentifier","src":"3130:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3075:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3102:5:24","nodeType":"YulTypedName","src":"3102:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3112:7:24","nodeType":"YulTypedName","src":"3112:7:24","type":""}],"src":"3075:77:24"},{"body":{"nativeSrc":"3190:28:24","nodeType":"YulBlock","src":"3190:28:24","statements":[{"nativeSrc":"3200:12:24","nodeType":"YulAssignment","src":"3200:12:24","value":{"name":"value","nativeSrc":"3207:5:24","nodeType":"YulIdentifier","src":"3207:5:24"},"variableNames":[{"name":"ret","nativeSrc":"3200:3:24","nodeType":"YulIdentifier","src":"3200:3:24"}]}]},"name":"identity","nativeSrc":"3158:60:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3176:5:24","nodeType":"YulTypedName","src":"3176:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3186:3:24","nodeType":"YulTypedName","src":"3186:3:24","type":""}],"src":"3158:60:24"},{"body":{"nativeSrc":"3284:82:24","nodeType":"YulBlock","src":"3284:82:24","statements":[{"nativeSrc":"3294:66:24","nodeType":"YulAssignment","src":"3294:66:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3352:5:24","nodeType":"YulIdentifier","src":"3352:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3334:17:24","nodeType":"YulIdentifier","src":"3334:17:24"},"nativeSrc":"3334:24:24","nodeType":"YulFunctionCall","src":"3334:24:24"}],"functionName":{"name":"identity","nativeSrc":"3325:8:24","nodeType":"YulIdentifier","src":"3325:8:24"},"nativeSrc":"3325:34:24","nodeType":"YulFunctionCall","src":"3325:34:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3307:17:24","nodeType":"YulIdentifier","src":"3307:17:24"},"nativeSrc":"3307:53:24","nodeType":"YulFunctionCall","src":"3307:53:24"},"variableNames":[{"name":"converted","nativeSrc":"3294:9:24","nodeType":"YulIdentifier","src":"3294:9:24"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3224:142:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3264:5:24","nodeType":"YulTypedName","src":"3264:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3274:9:24","nodeType":"YulTypedName","src":"3274:9:24","type":""}],"src":"3224:142:24"},{"body":{"nativeSrc":"3419:28:24","nodeType":"YulBlock","src":"3419:28:24","statements":[{"nativeSrc":"3429:12:24","nodeType":"YulAssignment","src":"3429:12:24","value":{"name":"value","nativeSrc":"3436:5:24","nodeType":"YulIdentifier","src":"3436:5:24"},"variableNames":[{"name":"ret","nativeSrc":"3429:3:24","nodeType":"YulIdentifier","src":"3429:3:24"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3372:75:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3405:5:24","nodeType":"YulTypedName","src":"3405:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3415:3:24","nodeType":"YulTypedName","src":"3415:3:24","type":""}],"src":"3372:75:24"},{"body":{"nativeSrc":"3529:193:24","nodeType":"YulBlock","src":"3529:193:24","statements":[{"nativeSrc":"3539:63:24","nodeType":"YulVariableDeclaration","src":"3539:63:24","value":{"arguments":[{"name":"value_0","nativeSrc":"3594:7:24","nodeType":"YulIdentifier","src":"3594:7:24"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3563:30:24","nodeType":"YulIdentifier","src":"3563:30:24"},"nativeSrc":"3563:39:24","nodeType":"YulFunctionCall","src":"3563:39:24"},"variables":[{"name":"convertedValue_0","nativeSrc":"3543:16:24","nodeType":"YulTypedName","src":"3543:16:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3618:4:24","nodeType":"YulIdentifier","src":"3618:4:24"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3658:4:24","nodeType":"YulIdentifier","src":"3658:4:24"}],"functionName":{"name":"sload","nativeSrc":"3652:5:24","nodeType":"YulIdentifier","src":"3652:5:24"},"nativeSrc":"3652:11:24","nodeType":"YulFunctionCall","src":"3652:11:24"},{"name":"offset","nativeSrc":"3665:6:24","nodeType":"YulIdentifier","src":"3665:6:24"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3697:16:24","nodeType":"YulIdentifier","src":"3697:16:24"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3673:23:24","nodeType":"YulIdentifier","src":"3673:23:24"},"nativeSrc":"3673:41:24","nodeType":"YulFunctionCall","src":"3673:41:24"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3624:27:24","nodeType":"YulIdentifier","src":"3624:27:24"},"nativeSrc":"3624:91:24","nodeType":"YulFunctionCall","src":"3624:91:24"}],"functionName":{"name":"sstore","nativeSrc":"3611:6:24","nodeType":"YulIdentifier","src":"3611:6:24"},"nativeSrc":"3611:105:24","nodeType":"YulFunctionCall","src":"3611:105:24"},"nativeSrc":"3611:105:24","nodeType":"YulExpressionStatement","src":"3611:105:24"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3453:269:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3506:4:24","nodeType":"YulTypedName","src":"3506:4:24","type":""},{"name":"offset","nativeSrc":"3512:6:24","nodeType":"YulTypedName","src":"3512:6:24","type":""},{"name":"value_0","nativeSrc":"3520:7:24","nodeType":"YulTypedName","src":"3520:7:24","type":""}],"src":"3453:269:24"},{"body":{"nativeSrc":"3777:24:24","nodeType":"YulBlock","src":"3777:24:24","statements":[{"nativeSrc":"3787:8:24","nodeType":"YulAssignment","src":"3787:8:24","value":{"kind":"number","nativeSrc":"3794:1:24","nodeType":"YulLiteral","src":"3794:1:24","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3787:3:24","nodeType":"YulIdentifier","src":"3787:3:24"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:73:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3773:3:24","nodeType":"YulTypedName","src":"3773:3:24","type":""}],"src":"3728:73:24"},{"body":{"nativeSrc":"3860:136:24","nodeType":"YulBlock","src":"3860:136:24","statements":[{"nativeSrc":"3870:46:24","nodeType":"YulVariableDeclaration","src":"3870:46:24","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3884:30:24","nodeType":"YulIdentifier","src":"3884:30:24"},"nativeSrc":"3884:32:24","nodeType":"YulFunctionCall","src":"3884:32:24"},"variables":[{"name":"zero_0","nativeSrc":"3874:6:24","nodeType":"YulTypedName","src":"3874:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3969:4:24","nodeType":"YulIdentifier","src":"3969:4:24"},{"name":"offset","nativeSrc":"3975:6:24","nodeType":"YulIdentifier","src":"3975:6:24"},{"name":"zero_0","nativeSrc":"3983:6:24","nodeType":"YulIdentifier","src":"3983:6:24"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3925:43:24","nodeType":"YulIdentifier","src":"3925:43:24"},"nativeSrc":"3925:65:24","nodeType":"YulFunctionCall","src":"3925:65:24"},"nativeSrc":"3925:65:24","nodeType":"YulExpressionStatement","src":"3925:65:24"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3807:189:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3846:4:24","nodeType":"YulTypedName","src":"3846:4:24","type":""},{"name":"offset","nativeSrc":"3852:6:24","nodeType":"YulTypedName","src":"3852:6:24","type":""}],"src":"3807:189:24"},{"body":{"nativeSrc":"4052:136:24","nodeType":"YulBlock","src":"4052:136:24","statements":[{"body":{"nativeSrc":"4119:63:24","nodeType":"YulBlock","src":"4119:63:24","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4163:5:24","nodeType":"YulIdentifier","src":"4163:5:24"},{"kind":"number","nativeSrc":"4170:1:24","nodeType":"YulLiteral","src":"4170:1:24","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"4133:29:24","nodeType":"YulIdentifier","src":"4133:29:24"},"nativeSrc":"4133:39:24","nodeType":"YulFunctionCall","src":"4133:39:24"},"nativeSrc":"4133:39:24","nodeType":"YulExpressionStatement","src":"4133:39:24"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"4072:5:24","nodeType":"YulIdentifier","src":"4072:5:24"},{"name":"end","nativeSrc":"4079:3:24","nodeType":"YulIdentifier","src":"4079:3:24"}],"functionName":{"name":"lt","nativeSrc":"4069:2:24","nodeType":"YulIdentifier","src":"4069:2:24"},"nativeSrc":"4069:14:24","nodeType":"YulFunctionCall","src":"4069:14:24"},"nativeSrc":"4062:120:24","nodeType":"YulForLoop","post":{"nativeSrc":"4084:26:24","nodeType":"YulBlock","src":"4084:26:24","statements":[{"nativeSrc":"4086:22:24","nodeType":"YulAssignment","src":"4086:22:24","value":{"arguments":[{"name":"start","nativeSrc":"4099:5:24","nodeType":"YulIdentifier","src":"4099:5:24"},{"kind":"number","nativeSrc":"4106:1:24","nodeType":"YulLiteral","src":"4106:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4095:3:24","nodeType":"YulIdentifier","src":"4095:3:24"},"nativeSrc":"4095:13:24","nodeType":"YulFunctionCall","src":"4095:13:24"},"variableNames":[{"name":"start","nativeSrc":"4086:5:24","nodeType":"YulIdentifier","src":"4086:5:24"}]}]},"pre":{"nativeSrc":"4066:2:24","nodeType":"YulBlock","src":"4066:2:24","statements":[]},"src":"4062:120:24"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"4002:186:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"4040:5:24","nodeType":"YulTypedName","src":"4040:5:24","type":""},{"name":"end","nativeSrc":"4047:3:24","nodeType":"YulTypedName","src":"4047:3:24","type":""}],"src":"4002:186:24"},{"body":{"nativeSrc":"4273:464:24","nodeType":"YulBlock","src":"4273:464:24","statements":[{"body":{"nativeSrc":"4299:431:24","nodeType":"YulBlock","src":"4299:431:24","statements":[{"nativeSrc":"4313:54:24","nodeType":"YulVariableDeclaration","src":"4313:54:24","value":{"arguments":[{"name":"array","nativeSrc":"4361:5:24","nodeType":"YulIdentifier","src":"4361:5:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4329:31:24","nodeType":"YulIdentifier","src":"4329:31:24"},"nativeSrc":"4329:38:24","nodeType":"YulFunctionCall","src":"4329:38:24"},"variables":[{"name":"dataArea","nativeSrc":"4317:8:24","nodeType":"YulTypedName","src":"4317:8:24","type":""}]},{"nativeSrc":"4380:63:24","nodeType":"YulVariableDeclaration","src":"4380:63:24","value":{"arguments":[{"name":"dataArea","nativeSrc":"4403:8:24","nodeType":"YulIdentifier","src":"4403:8:24"},{"arguments":[{"name":"startIndex","nativeSrc":"4431:10:24","nodeType":"YulIdentifier","src":"4431:10:24"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4413:17:24","nodeType":"YulIdentifier","src":"4413:17:24"},"nativeSrc":"4413:29:24","nodeType":"YulFunctionCall","src":"4413:29:24"}],"functionName":{"name":"add","nativeSrc":"4399:3:24","nodeType":"YulIdentifier","src":"4399:3:24"},"nativeSrc":"4399:44:24","nodeType":"YulFunctionCall","src":"4399:44:24"},"variables":[{"name":"deleteStart","nativeSrc":"4384:11:24","nodeType":"YulTypedName","src":"4384:11:24","type":""}]},{"body":{"nativeSrc":"4600:27:24","nodeType":"YulBlock","src":"4600:27:24","statements":[{"nativeSrc":"4602:23:24","nodeType":"YulAssignment","src":"4602:23:24","value":{"name":"dataArea","nativeSrc":"4617:8:24","nodeType":"YulIdentifier","src":"4617:8:24"},"variableNames":[{"name":"deleteStart","nativeSrc":"4602:11:24","nodeType":"YulIdentifier","src":"4602:11:24"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4584:10:24","nodeType":"YulIdentifier","src":"4584:10:24"},{"kind":"number","nativeSrc":"4596:2:24","nodeType":"YulLiteral","src":"4596:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4581:2:24","nodeType":"YulIdentifier","src":"4581:2:24"},"nativeSrc":"4581:18:24","nodeType":"YulFunctionCall","src":"4581:18:24"},"nativeSrc":"4578:49:24","nodeType":"YulIf","src":"4578:49:24"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4669:11:24","nodeType":"YulIdentifier","src":"4669:11:24"},{"arguments":[{"name":"dataArea","nativeSrc":"4686:8:24","nodeType":"YulIdentifier","src":"4686:8:24"},{"arguments":[{"name":"len","nativeSrc":"4714:3:24","nodeType":"YulIdentifier","src":"4714:3:24"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4696:17:24","nodeType":"YulIdentifier","src":"4696:17:24"},"nativeSrc":"4696:22:24","nodeType":"YulFunctionCall","src":"4696:22:24"}],"functionName":{"name":"add","nativeSrc":"4682:3:24","nodeType":"YulIdentifier","src":"4682:3:24"},"nativeSrc":"4682:37:24","nodeType":"YulFunctionCall","src":"4682:37:24"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4640:28:24","nodeType":"YulIdentifier","src":"4640:28:24"},"nativeSrc":"4640:80:24","nodeType":"YulFunctionCall","src":"4640:80:24"},"nativeSrc":"4640:80:24","nodeType":"YulExpressionStatement","src":"4640:80:24"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4290:3:24","nodeType":"YulIdentifier","src":"4290:3:24"},{"kind":"number","nativeSrc":"4295:2:24","nodeType":"YulLiteral","src":"4295:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4287:2:24","nodeType":"YulIdentifier","src":"4287:2:24"},"nativeSrc":"4287:11:24","nodeType":"YulFunctionCall","src":"4287:11:24"},"nativeSrc":"4284:446:24","nodeType":"YulIf","src":"4284:446:24"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4194:543:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4249:5:24","nodeType":"YulTypedName","src":"4249:5:24","type":""},{"name":"len","nativeSrc":"4256:3:24","nodeType":"YulTypedName","src":"4256:3:24","type":""},{"name":"startIndex","nativeSrc":"4261:10:24","nodeType":"YulTypedName","src":"4261:10:24","type":""}],"src":"4194:543:24"},{"body":{"nativeSrc":"4806:54:24","nodeType":"YulBlock","src":"4806:54:24","statements":[{"nativeSrc":"4816:37:24","nodeType":"YulAssignment","src":"4816:37:24","value":{"arguments":[{"name":"bits","nativeSrc":"4841:4:24","nodeType":"YulIdentifier","src":"4841:4:24"},{"name":"value","nativeSrc":"4847:5:24","nodeType":"YulIdentifier","src":"4847:5:24"}],"functionName":{"name":"shr","nativeSrc":"4837:3:24","nodeType":"YulIdentifier","src":"4837:3:24"},"nativeSrc":"4837:16:24","nodeType":"YulFunctionCall","src":"4837:16:24"},"variableNames":[{"name":"newValue","nativeSrc":"4816:8:24","nodeType":"YulIdentifier","src":"4816:8:24"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4743:117:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4781:4:24","nodeType":"YulTypedName","src":"4781:4:24","type":""},{"name":"value","nativeSrc":"4787:5:24","nodeType":"YulTypedName","src":"4787:5:24","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4797:8:24","nodeType":"YulTypedName","src":"4797:8:24","type":""}],"src":"4743:117:24"},{"body":{"nativeSrc":"4917:118:24","nodeType":"YulBlock","src":"4917:118:24","statements":[{"nativeSrc":"4927:68:24","nodeType":"YulVariableDeclaration","src":"4927:68:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4976:1:24","nodeType":"YulLiteral","src":"4976:1:24","type":"","value":"8"},{"name":"bytes","nativeSrc":"4979:5:24","nodeType":"YulIdentifier","src":"4979:5:24"}],"functionName":{"name":"mul","nativeSrc":"4972:3:24","nodeType":"YulIdentifier","src":"4972:3:24"},"nativeSrc":"4972:13:24","nodeType":"YulFunctionCall","src":"4972:13:24"},{"arguments":[{"kind":"number","nativeSrc":"4991:1:24","nodeType":"YulLiteral","src":"4991:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4987:3:24","nodeType":"YulIdentifier","src":"4987:3:24"},"nativeSrc":"4987:6:24","nodeType":"YulFunctionCall","src":"4987:6:24"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4943:28:24","nodeType":"YulIdentifier","src":"4943:28:24"},"nativeSrc":"4943:51:24","nodeType":"YulFunctionCall","src":"4943:51:24"}],"functionName":{"name":"not","nativeSrc":"4939:3:24","nodeType":"YulIdentifier","src":"4939:3:24"},"nativeSrc":"4939:56:24","nodeType":"YulFunctionCall","src":"4939:56:24"},"variables":[{"name":"mask","nativeSrc":"4931:4:24","nodeType":"YulTypedName","src":"4931:4:24","type":""}]},{"nativeSrc":"5004:25:24","nodeType":"YulAssignment","src":"5004:25:24","value":{"arguments":[{"name":"data","nativeSrc":"5018:4:24","nodeType":"YulIdentifier","src":"5018:4:24"},{"name":"mask","nativeSrc":"5024:4:24","nodeType":"YulIdentifier","src":"5024:4:24"}],"functionName":{"name":"and","nativeSrc":"5014:3:24","nodeType":"YulIdentifier","src":"5014:3:24"},"nativeSrc":"5014:15:24","nodeType":"YulFunctionCall","src":"5014:15:24"},"variableNames":[{"name":"result","nativeSrc":"5004:6:24","nodeType":"YulIdentifier","src":"5004:6:24"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4866:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4894:4:24","nodeType":"YulTypedName","src":"4894:4:24","type":""},{"name":"bytes","nativeSrc":"4900:5:24","nodeType":"YulTypedName","src":"4900:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4910:6:24","nodeType":"YulTypedName","src":"4910:6:24","type":""}],"src":"4866:169:24"},{"body":{"nativeSrc":"5121:214:24","nodeType":"YulBlock","src":"5121:214:24","statements":[{"nativeSrc":"5254:37:24","nodeType":"YulAssignment","src":"5254:37:24","value":{"arguments":[{"name":"data","nativeSrc":"5281:4:24","nodeType":"YulIdentifier","src":"5281:4:24"},{"name":"len","nativeSrc":"5287:3:24","nodeType":"YulIdentifier","src":"5287:3:24"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5262:18:24","nodeType":"YulIdentifier","src":"5262:18:24"},"nativeSrc":"5262:29:24","nodeType":"YulFunctionCall","src":"5262:29:24"},"variableNames":[{"name":"data","nativeSrc":"5254:4:24","nodeType":"YulIdentifier","src":"5254:4:24"}]},{"nativeSrc":"5300:29:24","nodeType":"YulAssignment","src":"5300:29:24","value":{"arguments":[{"name":"data","nativeSrc":"5311:4:24","nodeType":"YulIdentifier","src":"5311:4:24"},{"arguments":[{"kind":"number","nativeSrc":"5321:1:24","nodeType":"YulLiteral","src":"5321:1:24","type":"","value":"2"},{"name":"len","nativeSrc":"5324:3:24","nodeType":"YulIdentifier","src":"5324:3:24"}],"functionName":{"name":"mul","nativeSrc":"5317:3:24","nodeType":"YulIdentifier","src":"5317:3:24"},"nativeSrc":"5317:11:24","nodeType":"YulFunctionCall","src":"5317:11:24"}],"functionName":{"name":"or","nativeSrc":"5308:2:24","nodeType":"YulIdentifier","src":"5308:2:24"},"nativeSrc":"5308:21:24","nodeType":"YulFunctionCall","src":"5308:21:24"},"variableNames":[{"name":"used","nativeSrc":"5300:4:24","nodeType":"YulIdentifier","src":"5300:4:24"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5040:295:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5102:4:24","nodeType":"YulTypedName","src":"5102:4:24","type":""},{"name":"len","nativeSrc":"5108:3:24","nodeType":"YulTypedName","src":"5108:3:24","type":""}],"returnVariables":[{"name":"used","nativeSrc":"5116:4:24","nodeType":"YulTypedName","src":"5116:4:24","type":""}],"src":"5040:295:24"},{"body":{"nativeSrc":"5432:1303:24","nodeType":"YulBlock","src":"5432:1303:24","statements":[{"nativeSrc":"5443:51:24","nodeType":"YulVariableDeclaration","src":"5443:51:24","value":{"arguments":[{"name":"src","nativeSrc":"5490:3:24","nodeType":"YulIdentifier","src":"5490:3:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5457:32:24","nodeType":"YulIdentifier","src":"5457:32:24"},"nativeSrc":"5457:37:24","nodeType":"YulFunctionCall","src":"5457:37:24"},"variables":[{"name":"newLen","nativeSrc":"5447:6:24","nodeType":"YulTypedName","src":"5447:6:24","type":""}]},{"body":{"nativeSrc":"5579:22:24","nodeType":"YulBlock","src":"5579:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5581:16:24","nodeType":"YulIdentifier","src":"5581:16:24"},"nativeSrc":"5581:18:24","nodeType":"YulFunctionCall","src":"5581:18:24"},"nativeSrc":"5581:18:24","nodeType":"YulExpressionStatement","src":"5581:18:24"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5551:6:24","nodeType":"YulIdentifier","src":"5551:6:24"},{"kind":"number","nativeSrc":"5559:18:24","nodeType":"YulLiteral","src":"5559:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5548:2:24","nodeType":"YulIdentifier","src":"5548:2:24"},"nativeSrc":"5548:30:24","nodeType":"YulFunctionCall","src":"5548:30:24"},"nativeSrc":"5545:56:24","nodeType":"YulIf","src":"5545:56:24"},{"nativeSrc":"5611:52:24","nodeType":"YulVariableDeclaration","src":"5611:52:24","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5657:4:24","nodeType":"YulIdentifier","src":"5657:4:24"}],"functionName":{"name":"sload","nativeSrc":"5651:5:24","nodeType":"YulIdentifier","src":"5651:5:24"},"nativeSrc":"5651:11:24","nodeType":"YulFunctionCall","src":"5651:11:24"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5625:25:24","nodeType":"YulIdentifier","src":"5625:25:24"},"nativeSrc":"5625:38:24","nodeType":"YulFunctionCall","src":"5625:38:24"},"variables":[{"name":"oldLen","nativeSrc":"5615:6:24","nodeType":"YulTypedName","src":"5615:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5756:4:24","nodeType":"YulIdentifier","src":"5756:4:24"},{"name":"oldLen","nativeSrc":"5762:6:24","nodeType":"YulIdentifier","src":"5762:6:24"},{"name":"newLen","nativeSrc":"5770:6:24","nodeType":"YulIdentifier","src":"5770:6:24"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5710:45:24","nodeType":"YulIdentifier","src":"5710:45:24"},"nativeSrc":"5710:67:24","nodeType":"YulFunctionCall","src":"5710:67:24"},"nativeSrc":"5710:67:24","nodeType":"YulExpressionStatement","src":"5710:67:24"},{"nativeSrc":"5787:18:24","nodeType":"YulVariableDeclaration","src":"5787:18:24","value":{"kind":"number","nativeSrc":"5804:1:24","nodeType":"YulLiteral","src":"5804:1:24","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5791:9:24","nodeType":"YulTypedName","src":"5791:9:24","type":""}]},{"nativeSrc":"5815:17:24","nodeType":"YulAssignment","src":"5815:17:24","value":{"kind":"number","nativeSrc":"5828:4:24","nodeType":"YulLiteral","src":"5828:4:24","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5815:9:24","nodeType":"YulIdentifier","src":"5815:9:24"}]},{"cases":[{"body":{"nativeSrc":"5879:611:24","nodeType":"YulBlock","src":"5879:611:24","statements":[{"nativeSrc":"5893:37:24","nodeType":"YulVariableDeclaration","src":"5893:37:24","value":{"arguments":[{"name":"newLen","nativeSrc":"5912:6:24","nodeType":"YulIdentifier","src":"5912:6:24"},{"arguments":[{"kind":"number","nativeSrc":"5924:4:24","nodeType":"YulLiteral","src":"5924:4:24","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5920:3:24","nodeType":"YulIdentifier","src":"5920:3:24"},"nativeSrc":"5920:9:24","nodeType":"YulFunctionCall","src":"5920:9:24"}],"functionName":{"name":"and","nativeSrc":"5908:3:24","nodeType":"YulIdentifier","src":"5908:3:24"},"nativeSrc":"5908:22:24","nodeType":"YulFunctionCall","src":"5908:22:24"},"variables":[{"name":"loopEnd","nativeSrc":"5897:7:24","nodeType":"YulTypedName","src":"5897:7:24","type":""}]},{"nativeSrc":"5944:51:24","nodeType":"YulVariableDeclaration","src":"5944:51:24","value":{"arguments":[{"name":"slot","nativeSrc":"5990:4:24","nodeType":"YulIdentifier","src":"5990:4:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5958:31:24","nodeType":"YulIdentifier","src":"5958:31:24"},"nativeSrc":"5958:37:24","nodeType":"YulFunctionCall","src":"5958:37:24"},"variables":[{"name":"dstPtr","nativeSrc":"5948:6:24","nodeType":"YulTypedName","src":"5948:6:24","type":""}]},{"nativeSrc":"6008:10:24","nodeType":"YulVariableDeclaration","src":"6008:10:24","value":{"kind":"number","nativeSrc":"6017:1:24","nodeType":"YulLiteral","src":"6017:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6012:1:24","nodeType":"YulTypedName","src":"6012:1:24","type":""}]},{"body":{"nativeSrc":"6076:163:24","nodeType":"YulBlock","src":"6076:163:24","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6101:6:24","nodeType":"YulIdentifier","src":"6101:6:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6119:3:24","nodeType":"YulIdentifier","src":"6119:3:24"},{"name":"srcOffset","nativeSrc":"6124:9:24","nodeType":"YulIdentifier","src":"6124:9:24"}],"functionName":{"name":"add","nativeSrc":"6115:3:24","nodeType":"YulIdentifier","src":"6115:3:24"},"nativeSrc":"6115:19:24","nodeType":"YulFunctionCall","src":"6115:19:24"}],"functionName":{"name":"mload","nativeSrc":"6109:5:24","nodeType":"YulIdentifier","src":"6109:5:24"},"nativeSrc":"6109:26:24","nodeType":"YulFunctionCall","src":"6109:26:24"}],"functionName":{"name":"sstore","nativeSrc":"6094:6:24","nodeType":"YulIdentifier","src":"6094:6:24"},"nativeSrc":"6094:42:24","nodeType":"YulFunctionCall","src":"6094:42:24"},"nativeSrc":"6094:42:24","nodeType":"YulExpressionStatement","src":"6094:42:24"},{"nativeSrc":"6153:24:24","nodeType":"YulAssignment","src":"6153:24:24","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6167:6:24","nodeType":"YulIdentifier","src":"6167:6:24"},{"kind":"number","nativeSrc":"6175:1:24","nodeType":"YulLiteral","src":"6175:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6163:3:24","nodeType":"YulIdentifier","src":"6163:3:24"},"nativeSrc":"6163:14:24","nodeType":"YulFunctionCall","src":"6163:14:24"},"variableNames":[{"name":"dstPtr","nativeSrc":"6153:6:24","nodeType":"YulIdentifier","src":"6153:6:24"}]},{"nativeSrc":"6194:31:24","nodeType":"YulAssignment","src":"6194:31:24","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6211:9:24","nodeType":"YulIdentifier","src":"6211:9:24"},{"kind":"number","nativeSrc":"6222:2:24","nodeType":"YulLiteral","src":"6222:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6207:3:24","nodeType":"YulIdentifier","src":"6207:3:24"},"nativeSrc":"6207:18:24","nodeType":"YulFunctionCall","src":"6207:18:24"},"variableNames":[{"name":"srcOffset","nativeSrc":"6194:9:24","nodeType":"YulIdentifier","src":"6194:9:24"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6042:1:24","nodeType":"YulIdentifier","src":"6042:1:24"},{"name":"loopEnd","nativeSrc":"6045:7:24","nodeType":"YulIdentifier","src":"6045:7:24"}],"functionName":{"name":"lt","nativeSrc":"6039:2:24","nodeType":"YulIdentifier","src":"6039:2:24"},"nativeSrc":"6039:14:24","nodeType":"YulFunctionCall","src":"6039:14:24"},"nativeSrc":"6031:208:24","nodeType":"YulForLoop","post":{"nativeSrc":"6054:21:24","nodeType":"YulBlock","src":"6054:21:24","statements":[{"nativeSrc":"6056:17:24","nodeType":"YulAssignment","src":"6056:17:24","value":{"arguments":[{"name":"i","nativeSrc":"6065:1:24","nodeType":"YulIdentifier","src":"6065:1:24"},{"kind":"number","nativeSrc":"6068:4:24","nodeType":"YulLiteral","src":"6068:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6061:3:24","nodeType":"YulIdentifier","src":"6061:3:24"},"nativeSrc":"6061:12:24","nodeType":"YulFunctionCall","src":"6061:12:24"},"variableNames":[{"name":"i","nativeSrc":"6056:1:24","nodeType":"YulIdentifier","src":"6056:1:24"}]}]},"pre":{"nativeSrc":"6035:3:24","nodeType":"YulBlock","src":"6035:3:24","statements":[]},"src":"6031:208:24"},{"body":{"nativeSrc":"6275:156:24","nodeType":"YulBlock","src":"6275:156:24","statements":[{"nativeSrc":"6293:43:24","nodeType":"YulVariableDeclaration","src":"6293:43:24","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6320:3:24","nodeType":"YulIdentifier","src":"6320:3:24"},{"name":"srcOffset","nativeSrc":"6325:9:24","nodeType":"YulIdentifier","src":"6325:9:24"}],"functionName":{"name":"add","nativeSrc":"6316:3:24","nodeType":"YulIdentifier","src":"6316:3:24"},"nativeSrc":"6316:19:24","nodeType":"YulFunctionCall","src":"6316:19:24"}],"functionName":{"name":"mload","nativeSrc":"6310:5:24","nodeType":"YulIdentifier","src":"6310:5:24"},"nativeSrc":"6310:26:24","nodeType":"YulFunctionCall","src":"6310:26:24"},"variables":[{"name":"lastValue","nativeSrc":"6297:9:24","nodeType":"YulTypedName","src":"6297:9:24","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6360:6:24","nodeType":"YulIdentifier","src":"6360:6:24"},{"arguments":[{"name":"lastValue","nativeSrc":"6387:9:24","nodeType":"YulIdentifier","src":"6387:9:24"},{"arguments":[{"name":"newLen","nativeSrc":"6402:6:24","nodeType":"YulIdentifier","src":"6402:6:24"},{"kind":"number","nativeSrc":"6410:4:24","nodeType":"YulLiteral","src":"6410:4:24","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6398:3:24","nodeType":"YulIdentifier","src":"6398:3:24"},"nativeSrc":"6398:17:24","nodeType":"YulFunctionCall","src":"6398:17:24"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6368:18:24","nodeType":"YulIdentifier","src":"6368:18:24"},"nativeSrc":"6368:48:24","nodeType":"YulFunctionCall","src":"6368:48:24"}],"functionName":{"name":"sstore","nativeSrc":"6353:6:24","nodeType":"YulIdentifier","src":"6353:6:24"},"nativeSrc":"6353:64:24","nodeType":"YulFunctionCall","src":"6353:64:24"},"nativeSrc":"6353:64:24","nodeType":"YulExpressionStatement","src":"6353:64:24"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6258:7:24","nodeType":"YulIdentifier","src":"6258:7:24"},{"name":"newLen","nativeSrc":"6267:6:24","nodeType":"YulIdentifier","src":"6267:6:24"}],"functionName":{"name":"lt","nativeSrc":"6255:2:24","nodeType":"YulIdentifier","src":"6255:2:24"},"nativeSrc":"6255:19:24","nodeType":"YulFunctionCall","src":"6255:19:24"},"nativeSrc":"6252:179:24","nodeType":"YulIf","src":"6252:179:24"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6451:4:24","nodeType":"YulIdentifier","src":"6451:4:24"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6465:6:24","nodeType":"YulIdentifier","src":"6465:6:24"},{"kind":"number","nativeSrc":"6473:1:24","nodeType":"YulLiteral","src":"6473:1:24","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6461:3:24","nodeType":"YulIdentifier","src":"6461:3:24"},"nativeSrc":"6461:14:24","nodeType":"YulFunctionCall","src":"6461:14:24"},{"kind":"number","nativeSrc":"6477:1:24","nodeType":"YulLiteral","src":"6477:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6457:3:24","nodeType":"YulIdentifier","src":"6457:3:24"},"nativeSrc":"6457:22:24","nodeType":"YulFunctionCall","src":"6457:22:24"}],"functionName":{"name":"sstore","nativeSrc":"6444:6:24","nodeType":"YulIdentifier","src":"6444:6:24"},"nativeSrc":"6444:36:24","nodeType":"YulFunctionCall","src":"6444:36:24"},"nativeSrc":"6444:36:24","nodeType":"YulExpressionStatement","src":"6444:36:24"}]},"nativeSrc":"5872:618:24","nodeType":"YulCase","src":"5872:618:24","value":{"kind":"number","nativeSrc":"5877:1:24","nodeType":"YulLiteral","src":"5877:1:24","type":"","value":"1"}},{"body":{"nativeSrc":"6507:222:24","nodeType":"YulBlock","src":"6507:222:24","statements":[{"nativeSrc":"6521:14:24","nodeType":"YulVariableDeclaration","src":"6521:14:24","value":{"kind":"number","nativeSrc":"6534:1:24","nodeType":"YulLiteral","src":"6534:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6525:5:24","nodeType":"YulTypedName","src":"6525:5:24","type":""}]},{"body":{"nativeSrc":"6558:67:24","nodeType":"YulBlock","src":"6558:67:24","statements":[{"nativeSrc":"6576:35:24","nodeType":"YulAssignment","src":"6576:35:24","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6595:3:24","nodeType":"YulIdentifier","src":"6595:3:24"},{"name":"srcOffset","nativeSrc":"6600:9:24","nodeType":"YulIdentifier","src":"6600:9:24"}],"functionName":{"name":"add","nativeSrc":"6591:3:24","nodeType":"YulIdentifier","src":"6591:3:24"},"nativeSrc":"6591:19:24","nodeType":"YulFunctionCall","src":"6591:19:24"}],"functionName":{"name":"mload","nativeSrc":"6585:5:24","nodeType":"YulIdentifier","src":"6585:5:24"},"nativeSrc":"6585:26:24","nodeType":"YulFunctionCall","src":"6585:26:24"},"variableNames":[{"name":"value","nativeSrc":"6576:5:24","nodeType":"YulIdentifier","src":"6576:5:24"}]}]},"condition":{"name":"newLen","nativeSrc":"6551:6:24","nodeType":"YulIdentifier","src":"6551:6:24"},"nativeSrc":"6548:77:24","nodeType":"YulIf","src":"6548:77:24"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6645:4:24","nodeType":"YulIdentifier","src":"6645:4:24"},{"arguments":[{"name":"value","nativeSrc":"6704:5:24","nodeType":"YulIdentifier","src":"6704:5:24"},{"name":"newLen","nativeSrc":"6711:6:24","nodeType":"YulIdentifier","src":"6711:6:24"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6651:52:24","nodeType":"YulIdentifier","src":"6651:52:24"},"nativeSrc":"6651:67:24","nodeType":"YulFunctionCall","src":"6651:67:24"}],"functionName":{"name":"sstore","nativeSrc":"6638:6:24","nodeType":"YulIdentifier","src":"6638:6:24"},"nativeSrc":"6638:81:24","nodeType":"YulFunctionCall","src":"6638:81:24"},"nativeSrc":"6638:81:24","nodeType":"YulExpressionStatement","src":"6638:81:24"}]},"nativeSrc":"6499:230:24","nodeType":"YulCase","src":"6499:230:24","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5852:6:24","nodeType":"YulIdentifier","src":"5852:6:24"},{"kind":"number","nativeSrc":"5860:2:24","nodeType":"YulLiteral","src":"5860:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5849:2:24","nodeType":"YulIdentifier","src":"5849:2:24"},"nativeSrc":"5849:14:24","nodeType":"YulFunctionCall","src":"5849:14:24"},"nativeSrc":"5842:887:24","nodeType":"YulSwitch","src":"5842:887:24"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5340:1395:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5421:4:24","nodeType":"YulTypedName","src":"5421:4:24","type":""},{"name":"src","nativeSrc":"5427:3:24","nodeType":"YulTypedName","src":"5427:3:24","type":""}],"src":"5340:1395:24"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051613f91380380613f91833981810160405281019061003291906102d2565b60405180602001604052806000815250610051816100eb60201b60201c565b506000600460006101000a81548160ff0219169083151502179055506100806000801b846100fe60201b60201c565b506100b17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a836100fe60201b60201c565b506100e27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826100fe60201b60201c565b50505050610647565b80600290816100fa9190610575565b5050565b600061011083836101fc60201b60201c565b6101f15760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061018e61026760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101f6565b600090505b92915050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029f82610274565b9050919050565b6102af81610294565b81146102ba57600080fd5b50565b6000815190506102cc816102a6565b92915050565b6000806000606084860312156102eb576102ea61026f565b5b60006102f9868287016102bd565b935050602061030a868287016102bd565b925050604061031b868287016102bd565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103a657607f821691505b6020821081036103b9576103b861035f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e4565b61042b86836103e4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061047261046d61046884610443565b61044d565b610443565b9050919050565b6000819050919050565b61048c83610457565b6104a061049882610479565b8484546103f1565b825550505050565b600090565b6104b56104a8565b6104c0818484610483565b505050565b5b818110156104e4576104d96000826104ad565b6001810190506104c6565b5050565b601f821115610529576104fa816103bf565b610503846103d4565b81016020851015610512578190505b61052661051e856103d4565b8301826104c5565b50505b505050565b600082821c905092915050565b600061054c6000198460080261052e565b1980831691505092915050565b6000610565838361053b565b9150826002028217905092915050565b61057e82610325565b67ffffffffffffffff81111561059757610596610330565b5b6105a1825461038e565b6105ac8282856104e8565b600060209050601f8311600181146105df57600084156105cd578287015190505b6105d78582610559565b86555061063f565b601f1984166105ed866103bf565b60005b82811015610615578489015182556001820191506020850194506020810190506105f0565b86831015610632578489015161062e601f89168261053b565b8355505b6001600288020188555050505b505050505050565b61393b806106566000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80635c975abb116100f9578063a22cb46511610097578063e63ab1e911610071578063e63ab1e9146104a1578063e985e9c5146104bf578063f242432a146104ef578063f5298aca1461050b576101a8565b8063a22cb4651461044b578063d539139314610467578063d547741f14610485576101a8565b80637f345710116100d35780637f345710146103d55780638456cb59146103f357806391d14854146103fd578063a217fddf1461042d576101a8565b80635c975abb1461037f5780636b20c4541461039d578063731133e9146103b9576101a8565b80632e240ade1161016657806336568abe1161014057806336568abe1461030d5780633f4ba83a146103295780634e1273f414610333578063503a28bd14610363576101a8565b80632e240ade146102a55780632eb2c2d6146102d55780632f2ff15d146102f1576101a8565b8062fdd58e146101ad57806301ffc9a7146101dd57806302fe53051461020d5780630e89341c146102295780631f7fdffa14610259578063248a9ca314610275575b600080fd5b6101c760048036038101906101c29190612558565b610527565b6040516101d491906125a7565b60405180910390f35b6101f760048036038101906101f2919061261a565b610581565b6040516102049190612662565b60405180910390f35b610227600480360381019061022291906127c3565b610593565b005b610243600480360381019061023e919061280c565b6105ca565b60405161025091906128b8565b60405180910390f35b610273600480360381019061026e9190612a43565b61060b565b005b61028f600480360381019061028a9190612b34565b610648565b60405161029c9190612b70565b60405180910390f35b6102bf60048036038101906102ba9190612b8b565b610668565b6040516102cc9190612ca5565b60405180910390f35b6102ef60048036038101906102ea9190612cc7565b61071d565b005b61030b60048036038101906103069190612d96565b6107c5565b005b61032760048036038101906103229190612d96565b6107e7565b005b610331610862565b005b61034d60048036038101906103489190612e99565b610897565b60405161035a9190612ca5565b60405180910390f35b61037d60048036038101906103789190612f11565b6109a0565b005b610387610a43565b6040516103949190612662565b60405180910390f35b6103b760048036038101906103b29190612fe8565b610a5a565b005b6103d360048036038101906103ce9190613073565b610b06565b005b6103dd610b43565b6040516103ea9190612b70565b60405180910390f35b6103fb610b67565b005b61041760048036038101906104129190612d96565b610b9c565b6040516104249190612662565b60405180910390f35b610435610c07565b6040516104429190612b70565b60405180910390f35b61046560048036038101906104609190613122565b610c0e565b005b61046f610c24565b60405161047c9190612b70565b60405180910390f35b61049f600480360381019061049a9190612d96565b610c48565b005b6104a9610c6a565b6040516104b69190612b70565b60405180910390f35b6104d960048036038101906104d49190613162565b610c8e565b6040516104e69190612662565b60405180910390f35b610509600480360381019061050491906131a2565b610d22565b005b61052560048036038101906105209190613239565b610dca565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061058c82610e76565b9050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c6105bd81610ef0565b6105c682610f04565b5050565b606060006105d783610f17565b9050806105e384610fab565b6040516020016105f49291906132c8565b604051602081830303815290604052915050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661063581610ef0565b61064185858585611079565b5050505050565b600060036000838152602001908152602001600020600101549050919050565b60606000825167ffffffffffffffff81111561068757610686612698565b5b6040519080825280602002602001820160405280156106b55781602001602082028036833780820191505090505b50905060005b8351811015610712576106e8858583815181106106db576106da6132ec565b5b6020026020010151610527565b8282815181106106fb576106fa6132ec565b5b6020026020010181815250508060010190506106bb565b508091505092915050565b60006107276110ff565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561076c575061076a8682610c8e565b155b156107b05780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107a792919061332a565b60405180910390fd5b6107bd8686868686611107565b505050505050565b6107ce82610648565b6107d781610ef0565b6107e183836111ff565b50505050565b6107ef6110ff565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610853576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085d82826112f1565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61088c81610ef0565b6108946113e4565b50565b606081518351146108e357815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016108da929190613353565b60405180910390fd5b6000835167ffffffffffffffff811115610900576108ff612698565b5b60405190808252806020026020018201604052801561092e5781602001602082028036833780820191505090505b50905060005b84518110156109955761096b610953828761144790919063ffffffff16565b610966838761145b90919063ffffffff16565b610527565b82828151811061097e5761097d6132ec565b5b602002602001018181525050806001019050610934565b508091505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109ca81610ef0565b60005b8551811015610a3b57610a308682815181106109ec576109eb6132ec565b5b6020026020010151868381518110610a0757610a066132ec565b5b6020026020010151868481518110610a2257610a216132ec565b5b60200260200101518661146f565b8060010190506109cd565b505050505050565b6000600460009054906101000a900460ff16905090565b610a626110ff565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610aab5750610aa983610aa46110ff565b610c8e565b155b15610af657610ab86110ff565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610aed92919061332a565b60405180910390fd5b610b01838383611508565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b3081610ef0565b610b3c8585858561146f565b5050505050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c81565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b9181610ef0565b610b9961159c565b50565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b610c20610c196110ff565b83836115ff565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c5182610648565b610c5a81610ef0565b610c6483836112f1565b50505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610d2c6110ff565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610d715750610d6f8682610c8e565b155b15610db55780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610dac92919061332a565b60405180910390fd5b610dc2868686868661176f565b505050505050565b610dd26110ff565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e1b5750610e1983610e146110ff565b610c8e565b155b15610e6657610e286110ff565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610e5d92919061332a565b60405180910390fd5b610e7183838361187a565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ee95750610ee882611921565b5b9050919050565b610f0181610efc6110ff565b611a03565b50565b8060029081610f139190613588565b5050565b606060028054610f26906133ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610f52906133ab565b8015610f9f5780601f10610f7457610100808354040283529160200191610f9f565b820191906000526020600020905b815481529060010190602001808311610f8257829003601f168201915b50505050509050919050565b606060006001610fba84611a54565b01905060008167ffffffffffffffff811115610fd957610fd8612698565b5b6040519080825280601f01601f19166020018201604052801561100b5781602001600182028036833780820191505090505b509050600082602001820190505b60011561106e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110625761106161365a565b5b04945060008503611019575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110eb5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110e29190613689565b60405180910390fd5b6110f9600085858585611ba7565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111795760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111709190613689565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111eb5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016111e29190613689565b60405180910390fd5b6111f88585858585611ba7565b5050505050565b600061120b8383610b9c565b6112e65760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112836110ff565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506112eb565b600090505b92915050565b60006112fd8383610b9c565b156113d95760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506113766110ff565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506113de565b600090505b92915050565b6113ec611c59565b6000600460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6114306110ff565b60405161143d9190613689565b60405180910390a1565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114e15760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114d89190613689565b60405180910390fd5b6000806114ee8585611c99565b91509150611500600087848487611ba7565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361157a5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016115719190613689565b60405180910390fd5b611597836000848460405180602001604052806000815250611ba7565b505050565b6115a4611cc9565b6001600460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115e86110ff565b6040516115f59190613689565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116715760006040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016116689190613689565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117629190612662565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117e15760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117d89190613689565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036118535760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161184a9190613689565b60405180910390fd5b6000806118608585611c99565b915091506118718787848487611ba7565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118ec5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016118e39190613689565b60405180910390fd5b6000806118f98484611c99565b9150915061191a856000848460405180602001604052806000815250611ba7565b5050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806119ec57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806119fc57506119fb82611d0a565b5b9050919050565b611a0d8282610b9c565b611a505780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611a479291906136a4565b60405180910390fd5b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611ab2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611aa857611aa761365a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611aef576d04ee2d6d415b85acef81000000008381611ae557611ae461365a565b5b0492506020810190505b662386f26fc100008310611b1e57662386f26fc100008381611b1457611b1361365a565b5b0492506010810190505b6305f5e1008310611b47576305f5e1008381611b3d57611b3c61365a565b5b0492506008810190505b6127108310611b6c576127108381611b6257611b6161365a565b5b0492506004810190505b60648310611b8f5760648381611b8557611b8461365a565b5b0492506002810190505b600a8310611b9e576001810190505b80915050919050565b611bb385858585611d74565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611c52576000611bf16110ff565b90506001845103611c41576000611c1260008661145b90919063ffffffff16565b90506000611c2a60008661145b90919063ffffffff16565b9050611c3a838989858589611d86565b5050611c50565b611c4f818787878787611f3a565b5b505b5050505050565b611c61610a43565b611c97576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611cd1610a43565b15611d08576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611d80848484846120ee565b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611f32578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611de7959493929190613722565b6020604051808303816000875af1925050508015611e2357506040513d601f19601f82011682018060405250810190611e209190613791565b60015b611ea7573d8060008114611e53576040519150601f19603f3d011682016040523d82523d6000602084013e611e58565b606091505b506000815103611e9f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611e969190613689565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f3057846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611f279190613689565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156120e6578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611f9b9594939291906137be565b6020604051808303816000875af1925050508015611fd757506040513d601f19601f82011682018060405250810190611fd49190613791565b60015b61205b573d8060008114612007576040519150601f19603f3d011682016040523d82523d6000602084013e61200c565b606091505b50600081510361205357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161204a9190613689565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146120e457846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016120db9190613689565b60405180910390fd5b505b505050505050565b6120f6611cc9565b61210284848484612108565b50505050565b805182511461215257815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401612149929190613353565b60405180910390fd5b600061215c6110ff565b905060005b835181101561236b57600061217f828661145b90919063ffffffff16565b90506000612196838661145b90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146122c357600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561226b57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016122629493929190613826565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461235e578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612356919061389a565b925050819055505b5050806001019050612161565b50600183510361242a57600061238b60008561145b90919063ffffffff16565b905060006123a360008561145b90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161241b929190613353565b60405180910390a450506124a9565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516124a09291906138ce565b60405180910390a45b5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124ef826124c4565b9050919050565b6124ff816124e4565b811461250a57600080fd5b50565b60008135905061251c816124f6565b92915050565b6000819050919050565b61253581612522565b811461254057600080fd5b50565b6000813590506125528161252c565b92915050565b6000806040838503121561256f5761256e6124ba565b5b600061257d8582860161250d565b925050602061258e85828601612543565b9150509250929050565b6125a181612522565b82525050565b60006020820190506125bc6000830184612598565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6125f7816125c2565b811461260257600080fd5b50565b600081359050612614816125ee565b92915050565b6000602082840312156126305761262f6124ba565b5b600061263e84828501612605565b91505092915050565b60008115159050919050565b61265c81612647565b82525050565b60006020820190506126776000830184612653565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126d082612687565b810181811067ffffffffffffffff821117156126ef576126ee612698565b5b80604052505050565b60006127026124b0565b905061270e82826126c7565b919050565b600067ffffffffffffffff82111561272e5761272d612698565b5b61273782612687565b9050602081019050919050565b82818337600083830152505050565b600061276661276184612713565b6126f8565b90508281526020810184848401111561278257612781612682565b5b61278d848285612744565b509392505050565b600082601f8301126127aa576127a961267d565b5b81356127ba848260208601612753565b91505092915050565b6000602082840312156127d9576127d86124ba565b5b600082013567ffffffffffffffff8111156127f7576127f66124bf565b5b61280384828501612795565b91505092915050565b600060208284031215612822576128216124ba565b5b600061283084828501612543565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612873578082015181840152602081019050612858565b60008484015250505050565b600061288a82612839565b6128948185612844565b93506128a4818560208601612855565b6128ad81612687565b840191505092915050565b600060208201905081810360008301526128d2818461287f565b905092915050565b600067ffffffffffffffff8211156128f5576128f4612698565b5b602082029050602081019050919050565b600080fd5b600061291e612919846128da565b6126f8565b9050808382526020820190506020840283018581111561294157612940612906565b5b835b8181101561296a57806129568882612543565b845260208401935050602081019050612943565b5050509392505050565b600082601f8301126129895761298861267d565b5b813561299984826020860161290b565b91505092915050565b600067ffffffffffffffff8211156129bd576129bc612698565b5b6129c682612687565b9050602081019050919050565b60006129e66129e1846129a2565b6126f8565b905082815260208101848484011115612a0257612a01612682565b5b612a0d848285612744565b509392505050565b600082601f830112612a2a57612a2961267d565b5b8135612a3a8482602086016129d3565b91505092915050565b60008060008060808587031215612a5d57612a5c6124ba565b5b6000612a6b8782880161250d565b945050602085013567ffffffffffffffff811115612a8c57612a8b6124bf565b5b612a9887828801612974565b935050604085013567ffffffffffffffff811115612ab957612ab86124bf565b5b612ac587828801612974565b925050606085013567ffffffffffffffff811115612ae657612ae56124bf565b5b612af287828801612a15565b91505092959194509250565b6000819050919050565b612b1181612afe565b8114612b1c57600080fd5b50565b600081359050612b2e81612b08565b92915050565b600060208284031215612b4a57612b496124ba565b5b6000612b5884828501612b1f565b91505092915050565b612b6a81612afe565b82525050565b6000602082019050612b856000830184612b61565b92915050565b60008060408385031215612ba257612ba16124ba565b5b6000612bb08582860161250d565b925050602083013567ffffffffffffffff811115612bd157612bd06124bf565b5b612bdd85828601612974565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612c1c81612522565b82525050565b6000612c2e8383612c13565b60208301905092915050565b6000602082019050919050565b6000612c5282612be7565b612c5c8185612bf2565b9350612c6783612c03565b8060005b83811015612c98578151612c7f8882612c22565b9750612c8a83612c3a565b925050600181019050612c6b565b5085935050505092915050565b60006020820190508181036000830152612cbf8184612c47565b905092915050565b600080600080600060a08688031215612ce357612ce26124ba565b5b6000612cf18882890161250d565b9550506020612d028882890161250d565b945050604086013567ffffffffffffffff811115612d2357612d226124bf565b5b612d2f88828901612974565b935050606086013567ffffffffffffffff811115612d5057612d4f6124bf565b5b612d5c88828901612974565b925050608086013567ffffffffffffffff811115612d7d57612d7c6124bf565b5b612d8988828901612a15565b9150509295509295909350565b60008060408385031215612dad57612dac6124ba565b5b6000612dbb85828601612b1f565b9250506020612dcc8582860161250d565b9150509250929050565b600067ffffffffffffffff821115612df157612df0612698565b5b602082029050602081019050919050565b6000612e15612e1084612dd6565b6126f8565b90508083825260208201905060208402830185811115612e3857612e37612906565b5b835b81811015612e615780612e4d888261250d565b845260208401935050602081019050612e3a565b5050509392505050565b600082601f830112612e8057612e7f61267d565b5b8135612e90848260208601612e02565b91505092915050565b60008060408385031215612eb057612eaf6124ba565b5b600083013567ffffffffffffffff811115612ece57612ecd6124bf565b5b612eda85828601612e6b565b925050602083013567ffffffffffffffff811115612efb57612efa6124bf565b5b612f0785828601612974565b9150509250929050565b60008060008060808587031215612f2b57612f2a6124ba565b5b600085013567ffffffffffffffff811115612f4957612f486124bf565b5b612f5587828801612e6b565b945050602085013567ffffffffffffffff811115612f7657612f756124bf565b5b612f8287828801612974565b935050604085013567ffffffffffffffff811115612fa357612fa26124bf565b5b612faf87828801612974565b925050606085013567ffffffffffffffff811115612fd057612fcf6124bf565b5b612fdc87828801612a15565b91505092959194509250565b600080600060608486031215613001576130006124ba565b5b600061300f8682870161250d565b935050602084013567ffffffffffffffff8111156130305761302f6124bf565b5b61303c86828701612974565b925050604084013567ffffffffffffffff81111561305d5761305c6124bf565b5b61306986828701612974565b9150509250925092565b6000806000806080858703121561308d5761308c6124ba565b5b600061309b8782880161250d565b94505060206130ac87828801612543565b93505060406130bd87828801612543565b925050606085013567ffffffffffffffff8111156130de576130dd6124bf565b5b6130ea87828801612a15565b91505092959194509250565b6130ff81612647565b811461310a57600080fd5b50565b60008135905061311c816130f6565b92915050565b60008060408385031215613139576131386124ba565b5b60006131478582860161250d565b92505060206131588582860161310d565b9150509250929050565b60008060408385031215613179576131786124ba565b5b60006131878582860161250d565b92505060206131988582860161250d565b9150509250929050565b600080600080600060a086880312156131be576131bd6124ba565b5b60006131cc8882890161250d565b95505060206131dd8882890161250d565b94505060406131ee88828901612543565b93505060606131ff88828901612543565b925050608086013567ffffffffffffffff8111156132205761321f6124bf565b5b61322c88828901612a15565b9150509295509295909350565b600080600060608486031215613252576132516124ba565b5b60006132608682870161250d565b935050602061327186828701612543565b925050604061328286828701612543565b9150509250925092565b600081905092915050565b60006132a282612839565b6132ac818561328c565b93506132bc818560208601612855565b80840191505092915050565b60006132d48285613297565b91506132e08284613297565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b613324816124e4565b82525050565b600060408201905061333f600083018561331b565b61334c602083018461331b565b9392505050565b60006040820190506133686000830185612598565b6133756020830184612598565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806133c357607f821691505b6020821081036133d6576133d561337c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261343e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613401565b6134488683613401565b95508019841693508086168417925050509392505050565b6000819050919050565b600061348561348061347b84612522565b613460565b612522565b9050919050565b6000819050919050565b61349f8361346a565b6134b36134ab8261348c565b84845461340e565b825550505050565b600090565b6134c86134bb565b6134d3818484613496565b505050565b5b818110156134f7576134ec6000826134c0565b6001810190506134d9565b5050565b601f82111561353c5761350d816133dc565b613516846133f1565b81016020851015613525578190505b613539613531856133f1565b8301826134d8565b50505b505050565b600082821c905092915050565b600061355f60001984600802613541565b1980831691505092915050565b6000613578838361354e565b9150826002028217905092915050565b61359182612839565b67ffffffffffffffff8111156135aa576135a9612698565b5b6135b482546133ab565b6135bf8282856134fb565b600060209050601f8311600181146135f257600084156135e0578287015190505b6135ea858261356c565b865550613652565b601f198416613600866133dc565b60005b8281101561362857848901518255600182019150602085019450602081019050613603565b868310156136455784890151613641601f89168261354e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060208201905061369e600083018461331b565b92915050565b60006040820190506136b9600083018561331b565b6136c66020830184612b61565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006136f4826136cd565b6136fe81856136d8565b935061370e818560208601612855565b61371781612687565b840191505092915050565b600060a082019050613737600083018861331b565b613744602083018761331b565b6137516040830186612598565b61375e6060830185612598565b818103608083015261377081846136e9565b90509695505050505050565b60008151905061378b816125ee565b92915050565b6000602082840312156137a7576137a66124ba565b5b60006137b58482850161377c565b91505092915050565b600060a0820190506137d3600083018861331b565b6137e0602083018761331b565b81810360408301526137f28186612c47565b905081810360608301526138068185612c47565b9050818103608083015261381a81846136e9565b90509695505050505050565b600060808201905061383b600083018761331b565b6138486020830186612598565b6138556040830185612598565b6138626060830184612598565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138a582612522565b91506138b083612522565b92508282019050808211156138c8576138c761386b565b5b92915050565b600060408201905081810360008301526138e88185612c47565b905081810360208301526138fc8184612c47565b9050939250505056fea26469706673582212208f20f8c33d714f1774160ce14da404406f3187464dbdd62044f55d913f8e3e7364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3F91 CODESIZE SUB DUP1 PUSH2 0x3F91 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51 DUP2 PUSH2 0xEB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x80 PUSH1 0x0 DUP1 SHL DUP5 PUSH2 0xFE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xB1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH2 0xFE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xFE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0x647 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110 DUP4 DUP4 PUSH2 0x1FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F1 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18E PUSH2 0x267 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F DUP3 PUSH2 0x274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF DUP2 PUSH2 0x294 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CC DUP2 PUSH2 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EB JUMPI PUSH2 0x2EA PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x30A DUP7 DUP3 DUP8 ADD PUSH2 0x2BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31B DUP7 DUP3 DUP8 ADD PUSH2 0x2BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B9 JUMPI PUSH2 0x3B8 PUSH2 0x35F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x421 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x42B DUP7 DUP4 PUSH2 0x3E4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 PUSH2 0x46D PUSH2 0x468 DUP5 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48C DUP4 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0x498 DUP3 PUSH2 0x479 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3F1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x4C0 DUP2 DUP5 DUP5 PUSH2 0x483 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4D9 PUSH1 0x0 DUP3 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x529 JUMPI PUSH2 0x4FA DUP2 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x503 DUP5 PUSH2 0x3D4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x512 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x526 PUSH2 0x51E DUP6 PUSH2 0x3D4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x52E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 DUP4 DUP4 PUSH2 0x53B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x57E DUP3 PUSH2 0x325 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x597 JUMPI PUSH2 0x596 PUSH2 0x330 JUMP JUMPDEST JUMPDEST PUSH2 0x5A1 DUP3 SLOAD PUSH2 0x38E JUMP JUMPDEST PUSH2 0x5AC DUP3 DUP3 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5DF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5CD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5D7 DUP6 DUP3 PUSH2 0x559 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5ED DUP7 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x615 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5F0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x632 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x62E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x53B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x393B DUP1 PUSH2 0x656 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x50B JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x485 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x7F345710 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7F345710 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x42D JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x3B9 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x2E240ADE GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x503A28BD EQ PUSH2 0x363 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x2E240ADE EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F1 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x275 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x2A43 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2F11 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2FE8 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0xB67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x3122 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A9 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x3162 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP3 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0x5BD DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x5C6 DUP3 PUSH2 0xF04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5D7 DUP4 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5E3 DUP5 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F4 SWAP3 SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x635 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x641 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1079 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x687 JUMPI PUSH2 0x686 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH2 0x6E8 DUP6 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x527 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x6BB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x727 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH2 0x76A DUP7 DUP3 PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7B0 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BD DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CE DUP3 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x7E1 DUP4 DUP4 PUSH2 0x11FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D DUP3 DUP3 PUSH2 0x12F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x88C DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x13E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8E3 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x8FF PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x92E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x995 JUMPI PUSH2 0x96B PUSH2 0x953 DUP3 DUP8 PUSH2 0x1447 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x966 DUP4 DUP8 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x934 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x9CA DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA30 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9EC JUMPI PUSH2 0x9EB PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x146F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x9CD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA62 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI POP PUSH2 0xAA9 DUP4 PUSH2 0xAA4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAF6 JUMPI PUSH2 0xAB8 PUSH2 0x10FF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAED SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB01 DUP4 DUP4 DUP4 PUSH2 0x1508 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xB30 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0xB3C DUP6 DUP6 DUP6 DUP6 PUSH2 0x146F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C DUP2 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB91 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0xB99 PUSH2 0x159C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0xC19 PUSH2 0x10FF JUMP JUMPDEST DUP4 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC51 DUP3 PUSH2 0x648 JUMP JUMPDEST PUSH2 0xC5A DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0xC64 DUP4 DUP4 PUSH2 0x12F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2C PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI POP PUSH2 0xD6F DUP7 DUP3 PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xDB5 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x176F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDD2 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xE1B JUMPI POP PUSH2 0xE19 DUP4 PUSH2 0xE14 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE66 JUMPI PUSH2 0xE28 PUSH2 0x10FF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE71 DUP4 DUP4 DUP4 PUSH2 0x187A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xEE9 JUMPI POP PUSH2 0xEE8 DUP3 PUSH2 0x1921 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF01 DUP2 PUSH2 0xEFC PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x3588 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xF26 SWAP1 PUSH2 0x33AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF52 SWAP1 PUSH2 0x33AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF9F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF74 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF9F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF82 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xFBA DUP5 PUSH2 0x1A54 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x100B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x106E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1062 JUMPI PUSH2 0x1061 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1019 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F9 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1179 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x12E6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1283 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FD DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1376 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1430 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14EE DUP6 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1500 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x157A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1597 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15A4 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x15E8 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1671 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1668 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1762 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D8 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1853 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1860 DUP6 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1871 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E3 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18F9 DUP5 DUP5 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x191A DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x19EC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x19FC JUMPI POP PUSH2 0x19FB DUP3 PUSH2 0x1D0A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP3 DUP3 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x1A50 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A47 SWAP3 SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1AB2 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1AA8 JUMPI PUSH2 0x1AA7 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1AEF JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1AE5 JUMPI PUSH2 0x1AE4 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1B1E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B47 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B6C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1B62 JUMPI PUSH2 0x1B61 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B8F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B85 JUMPI PUSH2 0x1B84 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1B9E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB3 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C52 JUMPI PUSH1 0x0 PUSH2 0x1BF1 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1C41 JUMPI PUSH1 0x0 PUSH2 0x1C12 PUSH1 0x0 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C2A PUSH1 0x0 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C3A DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1D86 JUMP JUMPDEST POP POP PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x1C4F DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1F3A JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C61 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x1C97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD1 PUSH2 0xA43 JUMP JUMPDEST ISZERO PUSH2 0x1D08 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D80 DUP5 DUP5 DUP5 DUP5 PUSH2 0x20EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1F32 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E23 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E20 SWAP2 SWAP1 PUSH2 0x3791 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1EA7 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E53 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1E9F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E96 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1F30 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F27 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x20E6 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1FD7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD4 SWAP2 SWAP1 PUSH2 0x3791 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x205B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2007 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x200C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2053 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204A SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x20E4 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20F6 PUSH2 0x1CC9 JUMP JUMPDEST PUSH2 0x2102 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2108 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x2152 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2149 SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x215C PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x236B JUMPI PUSH1 0x0 PUSH2 0x217F DUP3 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2196 DUP4 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x226B JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2262 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x235E JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2356 SWAP2 SWAP1 PUSH2 0x389A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2161 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x242A JUMPI PUSH1 0x0 PUSH2 0x238B PUSH1 0x0 DUP6 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23A3 PUSH1 0x0 DUP6 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x241B SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x24A9 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x24A0 SWAP3 SWAP2 SWAP1 PUSH2 0x38CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EF DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x250A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x251C DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2535 DUP2 PUSH2 0x2522 JUMP JUMPDEST DUP2 EQ PUSH2 0x2540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2552 DUP2 PUSH2 0x252C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x256F JUMPI PUSH2 0x256E PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257D DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x258E DUP6 DUP3 DUP7 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25A1 DUP2 PUSH2 0x2522 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x25C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2614 DUP2 PUSH2 0x25EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH2 0x262F PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x263E DUP5 DUP3 DUP6 ADD PUSH2 0x2605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265C DUP2 PUSH2 0x2647 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2677 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26D0 DUP3 PUSH2 0x2687 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26EF JUMPI PUSH2 0x26EE PUSH2 0x2698 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2702 PUSH2 0x24B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x270E DUP3 DUP3 PUSH2 0x26C7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x272E JUMPI PUSH2 0x272D PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH2 0x2737 DUP3 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2766 PUSH2 0x2761 DUP5 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST PUSH2 0x278D DUP5 DUP3 DUP6 PUSH2 0x2744 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27AA JUMPI PUSH2 0x27A9 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2753 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27F6 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2803 DUP5 DUP3 DUP6 ADD PUSH2 0x2795 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2822 JUMPI PUSH2 0x2821 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2830 DUP5 DUP3 DUP6 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2873 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288A DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x2894 DUP2 DUP6 PUSH2 0x2844 JUMP JUMPDEST SWAP4 POP PUSH2 0x28A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x28AD DUP2 PUSH2 0x2687 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D2 DUP2 DUP5 PUSH2 0x287F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28F5 JUMPI PUSH2 0x28F4 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x291E PUSH2 0x2919 DUP5 PUSH2 0x28DA JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2941 JUMPI PUSH2 0x2940 PUSH2 0x2906 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x296A JUMPI DUP1 PUSH2 0x2956 DUP9 DUP3 PUSH2 0x2543 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2943 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2989 JUMPI PUSH2 0x2988 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2999 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29BD JUMPI PUSH2 0x29BC PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH2 0x29C6 DUP3 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E6 PUSH2 0x29E1 DUP5 PUSH2 0x29A2 JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A02 JUMPI PUSH2 0x2A01 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST PUSH2 0x2A0D DUP5 DUP3 DUP6 PUSH2 0x2744 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A2A JUMPI PUSH2 0x2A29 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A3A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x29D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A5D JUMPI PUSH2 0x2A5C PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A6B DUP8 DUP3 DUP9 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A8C JUMPI PUSH2 0x2A8B PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2A98 DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AB9 JUMPI PUSH2 0x2AB8 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2AC5 DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AE6 JUMPI PUSH2 0x2AE5 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2AF2 DUP8 DUP3 DUP9 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B11 DUP2 PUSH2 0x2AFE JUMP JUMPDEST DUP2 EQ PUSH2 0x2B1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2E DUP2 PUSH2 0x2B08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B4A JUMPI PUSH2 0x2B49 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B58 DUP5 DUP3 DUP6 ADD PUSH2 0x2B1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B6A DUP2 PUSH2 0x2AFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BA2 JUMPI PUSH2 0x2BA1 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BB0 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BD1 JUMPI PUSH2 0x2BD0 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2BDD DUP6 DUP3 DUP7 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2522 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2E DUP4 DUP4 PUSH2 0x2C13 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C52 DUP3 PUSH2 0x2BE7 JUMP JUMPDEST PUSH2 0x2C5C DUP2 DUP6 PUSH2 0x2BF2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C67 DUP4 PUSH2 0x2C03 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C98 JUMPI DUP2 MLOAD PUSH2 0x2C7F DUP9 DUP3 PUSH2 0x2C22 JUMP JUMPDEST SWAP8 POP PUSH2 0x2C8A DUP4 PUSH2 0x2C3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C6B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBF DUP2 DUP5 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2CE3 JUMPI PUSH2 0x2CE2 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CF1 DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2D02 DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2D2F DUP9 DUP3 DUP10 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D50 JUMPI PUSH2 0x2D4F PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2D5C DUP9 DUP3 DUP10 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D7D JUMPI PUSH2 0x2D7C PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2D89 DUP9 DUP3 DUP10 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DBB DUP6 DUP3 DUP7 ADD PUSH2 0x2B1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DCC DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DF1 JUMPI PUSH2 0x2DF0 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E15 PUSH2 0x2E10 DUP5 PUSH2 0x2DD6 JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2E38 JUMPI PUSH2 0x2E37 PUSH2 0x2906 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E61 JUMPI DUP1 PUSH2 0x2E4D DUP9 DUP3 PUSH2 0x250D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E3A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E80 JUMPI PUSH2 0x2E7F PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E90 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2EAF PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ECE JUMPI PUSH2 0x2ECD PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2EDA DUP6 DUP3 DUP7 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EFB JUMPI PUSH2 0x2EFA PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2F07 DUP6 DUP3 DUP7 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F2B JUMPI PUSH2 0x2F2A PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F49 JUMPI PUSH2 0x2F48 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2F55 DUP8 DUP3 DUP9 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F76 JUMPI PUSH2 0x2F75 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2F82 DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FA3 JUMPI PUSH2 0x2FA2 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2FAF DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FD0 JUMPI PUSH2 0x2FCF PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2FDC DUP8 DUP3 DUP9 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3001 JUMPI PUSH2 0x3000 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300F DUP7 DUP3 DUP8 ADD PUSH2 0x250D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3030 JUMPI PUSH2 0x302F PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x303C DUP7 DUP3 DUP8 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x305D JUMPI PUSH2 0x305C PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x3069 DUP7 DUP3 DUP8 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x308D JUMPI PUSH2 0x308C PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309B DUP8 DUP3 DUP9 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x30AC DUP8 DUP3 DUP9 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x30BD DUP8 DUP3 DUP9 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30DE JUMPI PUSH2 0x30DD PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x30EA DUP8 DUP3 DUP9 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x30FF DUP2 PUSH2 0x2647 JUMP JUMPDEST DUP2 EQ PUSH2 0x310A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x311C DUP2 PUSH2 0x30F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3139 JUMPI PUSH2 0x3138 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3147 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3158 DUP6 DUP3 DUP7 ADD PUSH2 0x310D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3179 JUMPI PUSH2 0x3178 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3187 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3198 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x31BE JUMPI PUSH2 0x31BD PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31CC DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x31DD DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x31EE DUP9 DUP3 DUP10 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x31FF DUP9 DUP3 DUP10 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3220 JUMPI PUSH2 0x321F PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x322C DUP9 DUP3 DUP10 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH2 0x3251 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3260 DUP7 DUP3 DUP8 ADD PUSH2 0x250D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3271 DUP7 DUP3 DUP8 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3282 DUP7 DUP3 DUP8 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A2 DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x32AC DUP2 DUP6 PUSH2 0x328C JUMP JUMPDEST SWAP4 POP PUSH2 0x32BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2855 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D4 DUP3 DUP6 PUSH2 0x3297 JUMP JUMPDEST SWAP2 POP PUSH2 0x32E0 DUP3 DUP5 PUSH2 0x3297 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3324 DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x333F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x334C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x331B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3368 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3375 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2598 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x33C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x33D6 JUMPI PUSH2 0x33D5 PUSH2 0x337C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x343E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x3448 DUP7 DUP4 PUSH2 0x3401 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3485 PUSH2 0x3480 PUSH2 0x347B DUP5 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x3460 JUMP JUMPDEST PUSH2 0x2522 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349F DUP4 PUSH2 0x346A JUMP JUMPDEST PUSH2 0x34B3 PUSH2 0x34AB DUP3 PUSH2 0x348C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x340E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x34C8 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x34D3 DUP2 DUP5 DUP5 PUSH2 0x3496 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34F7 JUMPI PUSH2 0x34EC PUSH1 0x0 DUP3 PUSH2 0x34C0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x353C JUMPI PUSH2 0x350D DUP2 PUSH2 0x33DC JUMP JUMPDEST PUSH2 0x3516 DUP5 PUSH2 0x33F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3525 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3539 PUSH2 0x3531 DUP6 PUSH2 0x33F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x34D8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3541 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 DUP4 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3591 DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35AA JUMPI PUSH2 0x35A9 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH2 0x35B4 DUP3 SLOAD PUSH2 0x33AB JUMP JUMPDEST PUSH2 0x35BF DUP3 DUP3 DUP6 PUSH2 0x34FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35F2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x35E0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35EA DUP6 DUP3 PUSH2 0x356C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3600 DUP7 PUSH2 0x33DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3628 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3603 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3645 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3641 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x354E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x369E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x331B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36B9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x36C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F4 DUP3 PUSH2 0x36CD JUMP JUMPDEST PUSH2 0x36FE DUP2 DUP6 PUSH2 0x36D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x370E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x3717 DUP2 PUSH2 0x2687 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3737 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x3744 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x3751 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x375E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2598 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3770 DUP2 DUP5 PUSH2 0x36E9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x378B DUP2 PUSH2 0x25EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A7 JUMPI PUSH2 0x37A6 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B5 DUP5 DUP3 DUP6 ADD PUSH2 0x377C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x37D3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x37E0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x331B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x37F2 DUP2 DUP7 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3806 DUP2 DUP6 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x381A DUP2 DUP5 PUSH2 0x36E9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x383B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x3848 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3855 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3862 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2598 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38A5 DUP3 PUSH2 0x2522 JUMP JUMPDEST SWAP2 POP PUSH2 0x38B0 DUP4 PUSH2 0x2522 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x38C8 JUMPI PUSH2 0x38C7 PUSH2 0x386B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38E8 DUP2 DUP6 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x38FC DUP2 DUP5 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 KECCAK256 0xF8 0xC3 RETURNDATASIZE PUSH18 0x4F1774160CE14DA404406F3187464DBDD620 PREVRANDAO CREATE2 TSTORE SWAP2 EXTCODEHASH DUP15 RETURNDATACOPY PUSH20 0x64736F6C634300081C0033000000000000000000 ","sourceMap":"520:2298:23:-:0;;;842:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1249:62:3;;;;;;;;;;;;1291:13;1299:4;1291:7;;;:13;;:::i;:::-;1249:62;1241:5:14;1231:7;;:15;;;;;;;;;;;;;;;;;;926:44:23::1;2232:4:0;937:18:23::0;::::1;957:12;926:10;;;:44;;:::i;:::-;;976:31;717:24;1000:6;976:10;;;:31;;:::i;:::-;;1013;783:24;1037:6;1013:10;;;:31;;:::i;:::-;;842:207:::0;;;520:2298;;10290:86:3;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;88:117:24:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;520:2298:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":3079,"id":29,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_7154":{"entryPoint":3108,"id":7154,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_7149":{"entryPoint":3178,"id":7149,"parameterSlots":0,"returnSlots":0},"@URI_SETTER_ROLE_7144":{"entryPoint":2883,"id":7144,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1431":{"entryPoint":7321,"id":1431,"parameterSlots":2,"returnSlots":2},"@_burnBatch_1375":{"entryPoint":5384,"id":1375,"parameterSlots":3,"returnSlots":0},"@_burn_1336":{"entryPoint":6266,"id":1336,"parameterSlots":3,"returnSlots":0},"@_checkRole_114":{"entryPoint":6659,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":3824,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":4607,"id":256,"parameterSlots":2,"returnSlots":1},"@_mintBatch_1286":{"entryPoint":4217,"id":1286,"parameterSlots":4,"returnSlots":0},"@_mint_1245":{"entryPoint":5231,"id":1245,"parameterSlots":4,"returnSlots":0},"@_msgSender_2808":{"entryPoint":4351,"id":2808,"parameterSlots":0,"returnSlots":1},"@_pause_2978":{"entryPoint":5532,"id":2978,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_2949":{"entryPoint":7369,"id":2949,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2962":{"entryPoint":7257,"id":2962,"parameterSlots":0,"returnSlots":0},"@_revokeRole_294":{"entryPoint":4849,"id":294,"parameterSlots":2,"returnSlots":1},"@_safeBatchTransferFrom_1182":{"entryPoint":4359,"id":1182,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1127":{"entryPoint":5999,"id":1127,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1415":{"entryPoint":5631,"id":1415,"parameterSlots":3,"returnSlots":0},"@_setURI_1193":{"entryPoint":3844,"id":1193,"parameterSlots":1,"returnSlots":0},"@_unpause_2994":{"entryPoint":5092,"id":2994,"parameterSlots":0,"returnSlots":0},"@_updateWithAcceptanceCheck_1061":{"entryPoint":7079,"id":1061,"parameterSlots":5,"returnSlots":0},"@_update_1715":{"entryPoint":8430,"id":1715,"parameterSlots":4,"returnSlots":0},"@_update_7411":{"entryPoint":7540,"id":7411,"parameterSlots":4,"returnSlots":0},"@_update_981":{"entryPoint":8456,"id":981,"parameterSlots":4,"returnSlots":0},"@balanceOfBatchOneAddr_7235":{"entryPoint":1640,"id":7235,"parameterSlots":2,"returnSlots":1},"@balanceOfBatch_705":{"entryPoint":2199,"id":705,"parameterSlots":2,"returnSlots":1},"@balanceOf_635":{"entryPoint":1319,"id":635,"parameterSlots":2,"returnSlots":1},"@burnBatch_1676":{"entryPoint":2650,"id":1676,"parameterSlots":3,"returnSlots":0},"@burn_1639":{"entryPoint":3530,"id":1639,"parameterSlots":3,"returnSlots":0},"@checkOnERC1155BatchReceived_1885":{"entryPoint":7994,"id":1885,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1811":{"entryPoint":7558,"id":1811,"parameterSlots":6,"returnSlots":0},"@getRoleAdmin_128":{"entryPoint":1608,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1989,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":2972,"id":80,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_738":{"entryPoint":3214,"id":738,"parameterSlots":2,"returnSlots":1},"@log10_4983":{"entryPoint":6740,"id":4983,"parameterSlots":1,"returnSlots":1},"@mintBatchAddr_7385":{"entryPoint":2464,"id":7385,"parameterSlots":4,"returnSlots":0},"@mintBatch_7341":{"entryPoint":1547,"id":7341,"parameterSlots":4,"returnSlots":0},"@mint_7317":{"entryPoint":2822,"id":7317,"parameterSlots":4,"returnSlots":0},"@pause_7285":{"entryPoint":2919,"id":7285,"parameterSlots":0,"returnSlots":0},"@paused_2937":{"entryPoint":2627,"id":2937,"parameterSlots":0,"returnSlots":1},"@renounceRole_189":{"entryPoint":2023,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":3144,"id":166,"parameterSlots":2,"returnSlots":0},"@safeBatchTransferFrom_828":{"entryPoint":1821,"id":828,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_782":{"entryPoint":3362,"id":782,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_721":{"entryPoint":3086,"id":721,"parameterSlots":2,"returnSlots":0},"@setURI_7248":{"entryPoint":1427,"id":7248,"parameterSlots":1,"returnSlots":0},"@supportsInterface_3592":{"entryPoint":7434,"id":3592,"parameterSlots":1,"returnSlots":1},"@supportsInterface_607":{"entryPoint":6433,"id":607,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":3702,"id":62,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7427":{"entryPoint":1409,"id":7427,"parameterSlots":1,"returnSlots":1},"@toString_3317":{"entryPoint":4011,"id":3317,"parameterSlots":1,"returnSlots":1},"@unpause_7295":{"entryPoint":2146,"id":7295,"parameterSlots":0,"returnSlots":0},"@unsafeMemoryAccess_2704":{"entryPoint":5191,"id":2704,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_2730":{"entryPoint":5211,"id":2730,"parameterSlots":2,"returnSlots":1},"@uri_618":{"entryPoint":3863,"id":618,"parameterSlots":1,"returnSlots":1},"@uri_7275":{"entryPoint":1482,"id":7275,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":11778,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10507,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":10707,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10067,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":11883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":12557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":10773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12642,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":11463,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":12706,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11147,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12264,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":10819,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12578,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9560,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":12857,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":12403,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11929,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":12049,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":11060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":11670,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":10179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13083,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9811,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11105,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11283,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9624,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13000,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":13098,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14270,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14114,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":13988,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14374,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14542,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13139,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":9976,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9392,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":11734,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10458,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10658,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10003,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11267,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":13276,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11239,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14029,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10297,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11322,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11250,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14040,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10308,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12940,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14490,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":13563,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9799,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11006,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9666,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9412,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9506,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":13528,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":13418,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":13704,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10052,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10325,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":13297,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":13227,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":13676,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9927,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":13408,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":13646,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":14443,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13914,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":13180,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13036,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9880,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":13452,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9853,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10502,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9858,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9407,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9402,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9863,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":13313,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":13633,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":13504,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":13326,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":13462,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9462,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12534,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11016,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9710,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9516,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":13499,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:38282:24","nodeType":"YulBlock","src":"0:38282:24","statements":[{"body":{"nativeSrc":"47:35:24","nodeType":"YulBlock","src":"47:35:24","statements":[{"nativeSrc":"57:19:24","nodeType":"YulAssignment","src":"57:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:24","nodeType":"YulLiteral","src":"73:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:24","nodeType":"YulIdentifier","src":"67:5:24"},"nativeSrc":"67:9:24","nodeType":"YulFunctionCall","src":"67:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:24","nodeType":"YulIdentifier","src":"57:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:24","nodeType":"YulTypedName","src":"40:6:24","type":""}],"src":"7:75:24"},{"body":{"nativeSrc":"177:28:24","nodeType":"YulBlock","src":"177:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:24","nodeType":"YulLiteral","src":"194:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:24","nodeType":"YulLiteral","src":"197:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:24","nodeType":"YulIdentifier","src":"187:6:24"},"nativeSrc":"187:12:24","nodeType":"YulFunctionCall","src":"187:12:24"},"nativeSrc":"187:12:24","nodeType":"YulExpressionStatement","src":"187:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:24","nodeType":"YulFunctionDefinition","src":"88:117:24"},{"body":{"nativeSrc":"300:28:24","nodeType":"YulBlock","src":"300:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:24","nodeType":"YulFunctionDefinition","src":"211:117:24"},{"body":{"nativeSrc":"379:81:24","nodeType":"YulBlock","src":"379:81:24","statements":[{"nativeSrc":"389:65:24","nodeType":"YulAssignment","src":"389:65:24","value":{"arguments":[{"name":"value","nativeSrc":"404:5:24","nodeType":"YulIdentifier","src":"404:5:24"},{"kind":"number","nativeSrc":"411:42:24","nodeType":"YulLiteral","src":"411:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:24","nodeType":"YulIdentifier","src":"400:3:24"},"nativeSrc":"400:54:24","nodeType":"YulFunctionCall","src":"400:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:24","nodeType":"YulIdentifier","src":"389:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:24","nodeType":"YulTypedName","src":"361:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:24","nodeType":"YulTypedName","src":"371:7:24","type":""}],"src":"334:126:24"},{"body":{"nativeSrc":"511:51:24","nodeType":"YulBlock","src":"511:51:24","statements":[{"nativeSrc":"521:35:24","nodeType":"YulAssignment","src":"521:35:24","value":{"arguments":[{"name":"value","nativeSrc":"550:5:24","nodeType":"YulIdentifier","src":"550:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:24","nodeType":"YulIdentifier","src":"532:17:24"},"nativeSrc":"532:24:24","nodeType":"YulFunctionCall","src":"532:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:24","nodeType":"YulIdentifier","src":"521:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:24","nodeType":"YulTypedName","src":"493:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:24","nodeType":"YulTypedName","src":"503:7:24","type":""}],"src":"466:96:24"},{"body":{"nativeSrc":"611:79:24","nodeType":"YulBlock","src":"611:79:24","statements":[{"body":{"nativeSrc":"668:16:24","nodeType":"YulBlock","src":"668:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:24","nodeType":"YulLiteral","src":"677:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:24","nodeType":"YulLiteral","src":"680:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:24","nodeType":"YulIdentifier","src":"670:6:24"},"nativeSrc":"670:12:24","nodeType":"YulFunctionCall","src":"670:12:24"},"nativeSrc":"670:12:24","nodeType":"YulExpressionStatement","src":"670:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:24","nodeType":"YulIdentifier","src":"634:5:24"},{"arguments":[{"name":"value","nativeSrc":"659:5:24","nodeType":"YulIdentifier","src":"659:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:24","nodeType":"YulIdentifier","src":"641:17:24"},"nativeSrc":"641:24:24","nodeType":"YulFunctionCall","src":"641:24:24"}],"functionName":{"name":"eq","nativeSrc":"631:2:24","nodeType":"YulIdentifier","src":"631:2:24"},"nativeSrc":"631:35:24","nodeType":"YulFunctionCall","src":"631:35:24"}],"functionName":{"name":"iszero","nativeSrc":"624:6:24","nodeType":"YulIdentifier","src":"624:6:24"},"nativeSrc":"624:43:24","nodeType":"YulFunctionCall","src":"624:43:24"},"nativeSrc":"621:63:24","nodeType":"YulIf","src":"621:63:24"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:24","nodeType":"YulTypedName","src":"604:5:24","type":""}],"src":"568:122:24"},{"body":{"nativeSrc":"748:87:24","nodeType":"YulBlock","src":"748:87:24","statements":[{"nativeSrc":"758:29:24","nodeType":"YulAssignment","src":"758:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:24","nodeType":"YulIdentifier","src":"780:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:24","nodeType":"YulIdentifier","src":"767:12:24"},"nativeSrc":"767:20:24","nodeType":"YulFunctionCall","src":"767:20:24"},"variableNames":[{"name":"value","nativeSrc":"758:5:24","nodeType":"YulIdentifier","src":"758:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:24","nodeType":"YulIdentifier","src":"823:5:24"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:24","nodeType":"YulIdentifier","src":"796:26:24"},"nativeSrc":"796:33:24","nodeType":"YulFunctionCall","src":"796:33:24"},"nativeSrc":"796:33:24","nodeType":"YulExpressionStatement","src":"796:33:24"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:24","nodeType":"YulTypedName","src":"726:6:24","type":""},{"name":"end","nativeSrc":"734:3:24","nodeType":"YulTypedName","src":"734:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:24","nodeType":"YulTypedName","src":"742:5:24","type":""}],"src":"696:139:24"},{"body":{"nativeSrc":"886:32:24","nodeType":"YulBlock","src":"886:32:24","statements":[{"nativeSrc":"896:16:24","nodeType":"YulAssignment","src":"896:16:24","value":{"name":"value","nativeSrc":"907:5:24","nodeType":"YulIdentifier","src":"907:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:24","nodeType":"YulIdentifier","src":"896:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:24","nodeType":"YulTypedName","src":"868:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:24","nodeType":"YulTypedName","src":"878:7:24","type":""}],"src":"841:77:24"},{"body":{"nativeSrc":"967:79:24","nodeType":"YulBlock","src":"967:79:24","statements":[{"body":{"nativeSrc":"1024:16:24","nodeType":"YulBlock","src":"1024:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:24","nodeType":"YulLiteral","src":"1033:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:24","nodeType":"YulLiteral","src":"1036:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:24","nodeType":"YulIdentifier","src":"1026:6:24"},"nativeSrc":"1026:12:24","nodeType":"YulFunctionCall","src":"1026:12:24"},"nativeSrc":"1026:12:24","nodeType":"YulExpressionStatement","src":"1026:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:24","nodeType":"YulIdentifier","src":"990:5:24"},{"arguments":[{"name":"value","nativeSrc":"1015:5:24","nodeType":"YulIdentifier","src":"1015:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:24","nodeType":"YulIdentifier","src":"997:17:24"},"nativeSrc":"997:24:24","nodeType":"YulFunctionCall","src":"997:24:24"}],"functionName":{"name":"eq","nativeSrc":"987:2:24","nodeType":"YulIdentifier","src":"987:2:24"},"nativeSrc":"987:35:24","nodeType":"YulFunctionCall","src":"987:35:24"}],"functionName":{"name":"iszero","nativeSrc":"980:6:24","nodeType":"YulIdentifier","src":"980:6:24"},"nativeSrc":"980:43:24","nodeType":"YulFunctionCall","src":"980:43:24"},"nativeSrc":"977:63:24","nodeType":"YulIf","src":"977:63:24"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:24","nodeType":"YulTypedName","src":"960:5:24","type":""}],"src":"924:122:24"},{"body":{"nativeSrc":"1104:87:24","nodeType":"YulBlock","src":"1104:87:24","statements":[{"nativeSrc":"1114:29:24","nodeType":"YulAssignment","src":"1114:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:24","nodeType":"YulIdentifier","src":"1136:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:24","nodeType":"YulIdentifier","src":"1123:12:24"},"nativeSrc":"1123:20:24","nodeType":"YulFunctionCall","src":"1123:20:24"},"variableNames":[{"name":"value","nativeSrc":"1114:5:24","nodeType":"YulIdentifier","src":"1114:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:24","nodeType":"YulIdentifier","src":"1179:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:24","nodeType":"YulIdentifier","src":"1152:26:24"},"nativeSrc":"1152:33:24","nodeType":"YulFunctionCall","src":"1152:33:24"},"nativeSrc":"1152:33:24","nodeType":"YulExpressionStatement","src":"1152:33:24"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:24","nodeType":"YulTypedName","src":"1082:6:24","type":""},{"name":"end","nativeSrc":"1090:3:24","nodeType":"YulTypedName","src":"1090:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:24","nodeType":"YulTypedName","src":"1098:5:24","type":""}],"src":"1052:139:24"},{"body":{"nativeSrc":"1280:391:24","nodeType":"YulBlock","src":"1280:391:24","statements":[{"body":{"nativeSrc":"1326:83:24","nodeType":"YulBlock","src":"1326:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:24","nodeType":"YulIdentifier","src":"1328:77:24"},"nativeSrc":"1328:79:24","nodeType":"YulFunctionCall","src":"1328:79:24"},"nativeSrc":"1328:79:24","nodeType":"YulExpressionStatement","src":"1328:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:24","nodeType":"YulIdentifier","src":"1301:7:24"},{"name":"headStart","nativeSrc":"1310:9:24","nodeType":"YulIdentifier","src":"1310:9:24"}],"functionName":{"name":"sub","nativeSrc":"1297:3:24","nodeType":"YulIdentifier","src":"1297:3:24"},"nativeSrc":"1297:23:24","nodeType":"YulFunctionCall","src":"1297:23:24"},{"kind":"number","nativeSrc":"1322:2:24","nodeType":"YulLiteral","src":"1322:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:24","nodeType":"YulIdentifier","src":"1293:3:24"},"nativeSrc":"1293:32:24","nodeType":"YulFunctionCall","src":"1293:32:24"},"nativeSrc":"1290:119:24","nodeType":"YulIf","src":"1290:119:24"},{"nativeSrc":"1419:117:24","nodeType":"YulBlock","src":"1419:117:24","statements":[{"nativeSrc":"1434:15:24","nodeType":"YulVariableDeclaration","src":"1434:15:24","value":{"kind":"number","nativeSrc":"1448:1:24","nodeType":"YulLiteral","src":"1448:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:24","nodeType":"YulTypedName","src":"1438:6:24","type":""}]},{"nativeSrc":"1463:63:24","nodeType":"YulAssignment","src":"1463:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:24","nodeType":"YulIdentifier","src":"1498:9:24"},{"name":"offset","nativeSrc":"1509:6:24","nodeType":"YulIdentifier","src":"1509:6:24"}],"functionName":{"name":"add","nativeSrc":"1494:3:24","nodeType":"YulIdentifier","src":"1494:3:24"},"nativeSrc":"1494:22:24","nodeType":"YulFunctionCall","src":"1494:22:24"},{"name":"dataEnd","nativeSrc":"1518:7:24","nodeType":"YulIdentifier","src":"1518:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:24","nodeType":"YulIdentifier","src":"1473:20:24"},"nativeSrc":"1473:53:24","nodeType":"YulFunctionCall","src":"1473:53:24"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:24","nodeType":"YulIdentifier","src":"1463:6:24"}]}]},{"nativeSrc":"1546:118:24","nodeType":"YulBlock","src":"1546:118:24","statements":[{"nativeSrc":"1561:16:24","nodeType":"YulVariableDeclaration","src":"1561:16:24","value":{"kind":"number","nativeSrc":"1575:2:24","nodeType":"YulLiteral","src":"1575:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:24","nodeType":"YulTypedName","src":"1565:6:24","type":""}]},{"nativeSrc":"1591:63:24","nodeType":"YulAssignment","src":"1591:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:24","nodeType":"YulIdentifier","src":"1626:9:24"},{"name":"offset","nativeSrc":"1637:6:24","nodeType":"YulIdentifier","src":"1637:6:24"}],"functionName":{"name":"add","nativeSrc":"1622:3:24","nodeType":"YulIdentifier","src":"1622:3:24"},"nativeSrc":"1622:22:24","nodeType":"YulFunctionCall","src":"1622:22:24"},{"name":"dataEnd","nativeSrc":"1646:7:24","nodeType":"YulIdentifier","src":"1646:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:24","nodeType":"YulIdentifier","src":"1601:20:24"},"nativeSrc":"1601:53:24","nodeType":"YulFunctionCall","src":"1601:53:24"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:24","nodeType":"YulIdentifier","src":"1591:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:24","nodeType":"YulTypedName","src":"1242:9:24","type":""},{"name":"dataEnd","nativeSrc":"1253:7:24","nodeType":"YulTypedName","src":"1253:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:24","nodeType":"YulTypedName","src":"1265:6:24","type":""},{"name":"value1","nativeSrc":"1273:6:24","nodeType":"YulTypedName","src":"1273:6:24","type":""}],"src":"1197:474:24"},{"body":{"nativeSrc":"1742:53:24","nodeType":"YulBlock","src":"1742:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1759:3:24","nodeType":"YulIdentifier","src":"1759:3:24"},{"arguments":[{"name":"value","nativeSrc":"1782:5:24","nodeType":"YulIdentifier","src":"1782:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1764:17:24","nodeType":"YulIdentifier","src":"1764:17:24"},"nativeSrc":"1764:24:24","nodeType":"YulFunctionCall","src":"1764:24:24"}],"functionName":{"name":"mstore","nativeSrc":"1752:6:24","nodeType":"YulIdentifier","src":"1752:6:24"},"nativeSrc":"1752:37:24","nodeType":"YulFunctionCall","src":"1752:37:24"},"nativeSrc":"1752:37:24","nodeType":"YulExpressionStatement","src":"1752:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1677:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1730:5:24","nodeType":"YulTypedName","src":"1730:5:24","type":""},{"name":"pos","nativeSrc":"1737:3:24","nodeType":"YulTypedName","src":"1737:3:24","type":""}],"src":"1677:118:24"},{"body":{"nativeSrc":"1899:124:24","nodeType":"YulBlock","src":"1899:124:24","statements":[{"nativeSrc":"1909:26:24","nodeType":"YulAssignment","src":"1909:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1921:9:24","nodeType":"YulIdentifier","src":"1921:9:24"},{"kind":"number","nativeSrc":"1932:2:24","nodeType":"YulLiteral","src":"1932:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:24","nodeType":"YulIdentifier","src":"1917:3:24"},"nativeSrc":"1917:18:24","nodeType":"YulFunctionCall","src":"1917:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1909:4:24","nodeType":"YulIdentifier","src":"1909:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1989:6:24","nodeType":"YulIdentifier","src":"1989:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"2002:9:24","nodeType":"YulIdentifier","src":"2002:9:24"},{"kind":"number","nativeSrc":"2013:1:24","nodeType":"YulLiteral","src":"2013:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1998:3:24","nodeType":"YulIdentifier","src":"1998:3:24"},"nativeSrc":"1998:17:24","nodeType":"YulFunctionCall","src":"1998:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1945:43:24","nodeType":"YulIdentifier","src":"1945:43:24"},"nativeSrc":"1945:71:24","nodeType":"YulFunctionCall","src":"1945:71:24"},"nativeSrc":"1945:71:24","nodeType":"YulExpressionStatement","src":"1945:71:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1801:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1871:9:24","nodeType":"YulTypedName","src":"1871:9:24","type":""},{"name":"value0","nativeSrc":"1883:6:24","nodeType":"YulTypedName","src":"1883:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1894:4:24","nodeType":"YulTypedName","src":"1894:4:24","type":""}],"src":"1801:222:24"},{"body":{"nativeSrc":"2073:105:24","nodeType":"YulBlock","src":"2073:105:24","statements":[{"nativeSrc":"2083:89:24","nodeType":"YulAssignment","src":"2083:89:24","value":{"arguments":[{"name":"value","nativeSrc":"2098:5:24","nodeType":"YulIdentifier","src":"2098:5:24"},{"kind":"number","nativeSrc":"2105:66:24","nodeType":"YulLiteral","src":"2105:66:24","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"2094:3:24","nodeType":"YulIdentifier","src":"2094:3:24"},"nativeSrc":"2094:78:24","nodeType":"YulFunctionCall","src":"2094:78:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2083:7:24","nodeType":"YulIdentifier","src":"2083:7:24"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"2029:149:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2055:5:24","nodeType":"YulTypedName","src":"2055:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2065:7:24","nodeType":"YulTypedName","src":"2065:7:24","type":""}],"src":"2029:149:24"},{"body":{"nativeSrc":"2226:78:24","nodeType":"YulBlock","src":"2226:78:24","statements":[{"body":{"nativeSrc":"2282:16:24","nodeType":"YulBlock","src":"2282:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2291:1:24","nodeType":"YulLiteral","src":"2291:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2294:1:24","nodeType":"YulLiteral","src":"2294:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2284:6:24","nodeType":"YulIdentifier","src":"2284:6:24"},"nativeSrc":"2284:12:24","nodeType":"YulFunctionCall","src":"2284:12:24"},"nativeSrc":"2284:12:24","nodeType":"YulExpressionStatement","src":"2284:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2249:5:24","nodeType":"YulIdentifier","src":"2249:5:24"},{"arguments":[{"name":"value","nativeSrc":"2273:5:24","nodeType":"YulIdentifier","src":"2273:5:24"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"2256:16:24","nodeType":"YulIdentifier","src":"2256:16:24"},"nativeSrc":"2256:23:24","nodeType":"YulFunctionCall","src":"2256:23:24"}],"functionName":{"name":"eq","nativeSrc":"2246:2:24","nodeType":"YulIdentifier","src":"2246:2:24"},"nativeSrc":"2246:34:24","nodeType":"YulFunctionCall","src":"2246:34:24"}],"functionName":{"name":"iszero","nativeSrc":"2239:6:24","nodeType":"YulIdentifier","src":"2239:6:24"},"nativeSrc":"2239:42:24","nodeType":"YulFunctionCall","src":"2239:42:24"},"nativeSrc":"2236:62:24","nodeType":"YulIf","src":"2236:62:24"}]},"name":"validator_revert_t_bytes4","nativeSrc":"2184:120:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2219:5:24","nodeType":"YulTypedName","src":"2219:5:24","type":""}],"src":"2184:120:24"},{"body":{"nativeSrc":"2361:86:24","nodeType":"YulBlock","src":"2361:86:24","statements":[{"nativeSrc":"2371:29:24","nodeType":"YulAssignment","src":"2371:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"2393:6:24","nodeType":"YulIdentifier","src":"2393:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"2380:12:24","nodeType":"YulIdentifier","src":"2380:12:24"},"nativeSrc":"2380:20:24","nodeType":"YulFunctionCall","src":"2380:20:24"},"variableNames":[{"name":"value","nativeSrc":"2371:5:24","nodeType":"YulIdentifier","src":"2371:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2435:5:24","nodeType":"YulIdentifier","src":"2435:5:24"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"2409:25:24","nodeType":"YulIdentifier","src":"2409:25:24"},"nativeSrc":"2409:32:24","nodeType":"YulFunctionCall","src":"2409:32:24"},"nativeSrc":"2409:32:24","nodeType":"YulExpressionStatement","src":"2409:32:24"}]},"name":"abi_decode_t_bytes4","nativeSrc":"2310:137:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2339:6:24","nodeType":"YulTypedName","src":"2339:6:24","type":""},{"name":"end","nativeSrc":"2347:3:24","nodeType":"YulTypedName","src":"2347:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2355:5:24","nodeType":"YulTypedName","src":"2355:5:24","type":""}],"src":"2310:137:24"},{"body":{"nativeSrc":"2518:262:24","nodeType":"YulBlock","src":"2518:262:24","statements":[{"body":{"nativeSrc":"2564:83:24","nodeType":"YulBlock","src":"2564:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2566:77:24","nodeType":"YulIdentifier","src":"2566:77:24"},"nativeSrc":"2566:79:24","nodeType":"YulFunctionCall","src":"2566:79:24"},"nativeSrc":"2566:79:24","nodeType":"YulExpressionStatement","src":"2566:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2539:7:24","nodeType":"YulIdentifier","src":"2539:7:24"},{"name":"headStart","nativeSrc":"2548:9:24","nodeType":"YulIdentifier","src":"2548:9:24"}],"functionName":{"name":"sub","nativeSrc":"2535:3:24","nodeType":"YulIdentifier","src":"2535:3:24"},"nativeSrc":"2535:23:24","nodeType":"YulFunctionCall","src":"2535:23:24"},{"kind":"number","nativeSrc":"2560:2:24","nodeType":"YulLiteral","src":"2560:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2531:3:24","nodeType":"YulIdentifier","src":"2531:3:24"},"nativeSrc":"2531:32:24","nodeType":"YulFunctionCall","src":"2531:32:24"},"nativeSrc":"2528:119:24","nodeType":"YulIf","src":"2528:119:24"},{"nativeSrc":"2657:116:24","nodeType":"YulBlock","src":"2657:116:24","statements":[{"nativeSrc":"2672:15:24","nodeType":"YulVariableDeclaration","src":"2672:15:24","value":{"kind":"number","nativeSrc":"2686:1:24","nodeType":"YulLiteral","src":"2686:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2676:6:24","nodeType":"YulTypedName","src":"2676:6:24","type":""}]},{"nativeSrc":"2701:62:24","nodeType":"YulAssignment","src":"2701:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2735:9:24","nodeType":"YulIdentifier","src":"2735:9:24"},{"name":"offset","nativeSrc":"2746:6:24","nodeType":"YulIdentifier","src":"2746:6:24"}],"functionName":{"name":"add","nativeSrc":"2731:3:24","nodeType":"YulIdentifier","src":"2731:3:24"},"nativeSrc":"2731:22:24","nodeType":"YulFunctionCall","src":"2731:22:24"},{"name":"dataEnd","nativeSrc":"2755:7:24","nodeType":"YulIdentifier","src":"2755:7:24"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"2711:19:24","nodeType":"YulIdentifier","src":"2711:19:24"},"nativeSrc":"2711:52:24","nodeType":"YulFunctionCall","src":"2711:52:24"},"variableNames":[{"name":"value0","nativeSrc":"2701:6:24","nodeType":"YulIdentifier","src":"2701:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"2453:327:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2488:9:24","nodeType":"YulTypedName","src":"2488:9:24","type":""},{"name":"dataEnd","nativeSrc":"2499:7:24","nodeType":"YulTypedName","src":"2499:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2511:6:24","nodeType":"YulTypedName","src":"2511:6:24","type":""}],"src":"2453:327:24"},{"body":{"nativeSrc":"2828:48:24","nodeType":"YulBlock","src":"2828:48:24","statements":[{"nativeSrc":"2838:32:24","nodeType":"YulAssignment","src":"2838:32:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2863:5:24","nodeType":"YulIdentifier","src":"2863:5:24"}],"functionName":{"name":"iszero","nativeSrc":"2856:6:24","nodeType":"YulIdentifier","src":"2856:6:24"},"nativeSrc":"2856:13:24","nodeType":"YulFunctionCall","src":"2856:13:24"}],"functionName":{"name":"iszero","nativeSrc":"2849:6:24","nodeType":"YulIdentifier","src":"2849:6:24"},"nativeSrc":"2849:21:24","nodeType":"YulFunctionCall","src":"2849:21:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2838:7:24","nodeType":"YulIdentifier","src":"2838:7:24"}]}]},"name":"cleanup_t_bool","nativeSrc":"2786:90:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2810:5:24","nodeType":"YulTypedName","src":"2810:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2820:7:24","nodeType":"YulTypedName","src":"2820:7:24","type":""}],"src":"2786:90:24"},{"body":{"nativeSrc":"2941:50:24","nodeType":"YulBlock","src":"2941:50:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2958:3:24","nodeType":"YulIdentifier","src":"2958:3:24"},{"arguments":[{"name":"value","nativeSrc":"2978:5:24","nodeType":"YulIdentifier","src":"2978:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"2963:14:24","nodeType":"YulIdentifier","src":"2963:14:24"},"nativeSrc":"2963:21:24","nodeType":"YulFunctionCall","src":"2963:21:24"}],"functionName":{"name":"mstore","nativeSrc":"2951:6:24","nodeType":"YulIdentifier","src":"2951:6:24"},"nativeSrc":"2951:34:24","nodeType":"YulFunctionCall","src":"2951:34:24"},"nativeSrc":"2951:34:24","nodeType":"YulExpressionStatement","src":"2951:34:24"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2882:109:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2929:5:24","nodeType":"YulTypedName","src":"2929:5:24","type":""},{"name":"pos","nativeSrc":"2936:3:24","nodeType":"YulTypedName","src":"2936:3:24","type":""}],"src":"2882:109:24"},{"body":{"nativeSrc":"3089:118:24","nodeType":"YulBlock","src":"3089:118:24","statements":[{"nativeSrc":"3099:26:24","nodeType":"YulAssignment","src":"3099:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3111:9:24","nodeType":"YulIdentifier","src":"3111:9:24"},{"kind":"number","nativeSrc":"3122:2:24","nodeType":"YulLiteral","src":"3122:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3107:3:24","nodeType":"YulIdentifier","src":"3107:3:24"},"nativeSrc":"3107:18:24","nodeType":"YulFunctionCall","src":"3107:18:24"},"variableNames":[{"name":"tail","nativeSrc":"3099:4:24","nodeType":"YulIdentifier","src":"3099:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3173:6:24","nodeType":"YulIdentifier","src":"3173:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"3186:9:24","nodeType":"YulIdentifier","src":"3186:9:24"},{"kind":"number","nativeSrc":"3197:1:24","nodeType":"YulLiteral","src":"3197:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3182:3:24","nodeType":"YulIdentifier","src":"3182:3:24"},"nativeSrc":"3182:17:24","nodeType":"YulFunctionCall","src":"3182:17:24"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3135:37:24","nodeType":"YulIdentifier","src":"3135:37:24"},"nativeSrc":"3135:65:24","nodeType":"YulFunctionCall","src":"3135:65:24"},"nativeSrc":"3135:65:24","nodeType":"YulExpressionStatement","src":"3135:65:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"2997:210:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3061:9:24","nodeType":"YulTypedName","src":"3061:9:24","type":""},{"name":"value0","nativeSrc":"3073:6:24","nodeType":"YulTypedName","src":"3073:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3084:4:24","nodeType":"YulTypedName","src":"3084:4:24","type":""}],"src":"2997:210:24"},{"body":{"nativeSrc":"3302:28:24","nodeType":"YulBlock","src":"3302:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3319:1:24","nodeType":"YulLiteral","src":"3319:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3322:1:24","nodeType":"YulLiteral","src":"3322:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3312:6:24","nodeType":"YulIdentifier","src":"3312:6:24"},"nativeSrc":"3312:12:24","nodeType":"YulFunctionCall","src":"3312:12:24"},"nativeSrc":"3312:12:24","nodeType":"YulExpressionStatement","src":"3312:12:24"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3213:117:24","nodeType":"YulFunctionDefinition","src":"3213:117:24"},{"body":{"nativeSrc":"3425:28:24","nodeType":"YulBlock","src":"3425:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3442:1:24","nodeType":"YulLiteral","src":"3442:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3445:1:24","nodeType":"YulLiteral","src":"3445:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3435:6:24","nodeType":"YulIdentifier","src":"3435:6:24"},"nativeSrc":"3435:12:24","nodeType":"YulFunctionCall","src":"3435:12:24"},"nativeSrc":"3435:12:24","nodeType":"YulExpressionStatement","src":"3435:12:24"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3336:117:24","nodeType":"YulFunctionDefinition","src":"3336:117:24"},{"body":{"nativeSrc":"3507:54:24","nodeType":"YulBlock","src":"3507:54:24","statements":[{"nativeSrc":"3517:38:24","nodeType":"YulAssignment","src":"3517:38:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3535:5:24","nodeType":"YulIdentifier","src":"3535:5:24"},{"kind":"number","nativeSrc":"3542:2:24","nodeType":"YulLiteral","src":"3542:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3531:3:24","nodeType":"YulIdentifier","src":"3531:3:24"},"nativeSrc":"3531:14:24","nodeType":"YulFunctionCall","src":"3531:14:24"},{"arguments":[{"kind":"number","nativeSrc":"3551:2:24","nodeType":"YulLiteral","src":"3551:2:24","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3547:3:24","nodeType":"YulIdentifier","src":"3547:3:24"},"nativeSrc":"3547:7:24","nodeType":"YulFunctionCall","src":"3547:7:24"}],"functionName":{"name":"and","nativeSrc":"3527:3:24","nodeType":"YulIdentifier","src":"3527:3:24"},"nativeSrc":"3527:28:24","nodeType":"YulFunctionCall","src":"3527:28:24"},"variableNames":[{"name":"result","nativeSrc":"3517:6:24","nodeType":"YulIdentifier","src":"3517:6:24"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3459:102:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3490:5:24","nodeType":"YulTypedName","src":"3490:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3500:6:24","nodeType":"YulTypedName","src":"3500:6:24","type":""}],"src":"3459:102:24"},{"body":{"nativeSrc":"3595:152:24","nodeType":"YulBlock","src":"3595:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3612:1:24","nodeType":"YulLiteral","src":"3612:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3615:77:24","nodeType":"YulLiteral","src":"3615:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3605:6:24","nodeType":"YulIdentifier","src":"3605:6:24"},"nativeSrc":"3605:88:24","nodeType":"YulFunctionCall","src":"3605:88:24"},"nativeSrc":"3605:88:24","nodeType":"YulExpressionStatement","src":"3605:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3709:1:24","nodeType":"YulLiteral","src":"3709:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"3712:4:24","nodeType":"YulLiteral","src":"3712:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3702:6:24","nodeType":"YulIdentifier","src":"3702:6:24"},"nativeSrc":"3702:15:24","nodeType":"YulFunctionCall","src":"3702:15:24"},"nativeSrc":"3702:15:24","nodeType":"YulExpressionStatement","src":"3702:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3733:1:24","nodeType":"YulLiteral","src":"3733:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3736:4:24","nodeType":"YulLiteral","src":"3736:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3726:6:24","nodeType":"YulIdentifier","src":"3726:6:24"},"nativeSrc":"3726:15:24","nodeType":"YulFunctionCall","src":"3726:15:24"},"nativeSrc":"3726:15:24","nodeType":"YulExpressionStatement","src":"3726:15:24"}]},"name":"panic_error_0x41","nativeSrc":"3567:180:24","nodeType":"YulFunctionDefinition","src":"3567:180:24"},{"body":{"nativeSrc":"3796:238:24","nodeType":"YulBlock","src":"3796:238:24","statements":[{"nativeSrc":"3806:58:24","nodeType":"YulVariableDeclaration","src":"3806:58:24","value":{"arguments":[{"name":"memPtr","nativeSrc":"3828:6:24","nodeType":"YulIdentifier","src":"3828:6:24"},{"arguments":[{"name":"size","nativeSrc":"3858:4:24","nodeType":"YulIdentifier","src":"3858:4:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3836:21:24","nodeType":"YulIdentifier","src":"3836:21:24"},"nativeSrc":"3836:27:24","nodeType":"YulFunctionCall","src":"3836:27:24"}],"functionName":{"name":"add","nativeSrc":"3824:3:24","nodeType":"YulIdentifier","src":"3824:3:24"},"nativeSrc":"3824:40:24","nodeType":"YulFunctionCall","src":"3824:40:24"},"variables":[{"name":"newFreePtr","nativeSrc":"3810:10:24","nodeType":"YulTypedName","src":"3810:10:24","type":""}]},{"body":{"nativeSrc":"3975:22:24","nodeType":"YulBlock","src":"3975:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3977:16:24","nodeType":"YulIdentifier","src":"3977:16:24"},"nativeSrc":"3977:18:24","nodeType":"YulFunctionCall","src":"3977:18:24"},"nativeSrc":"3977:18:24","nodeType":"YulExpressionStatement","src":"3977:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3918:10:24","nodeType":"YulIdentifier","src":"3918:10:24"},{"kind":"number","nativeSrc":"3930:18:24","nodeType":"YulLiteral","src":"3930:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3915:2:24","nodeType":"YulIdentifier","src":"3915:2:24"},"nativeSrc":"3915:34:24","nodeType":"YulFunctionCall","src":"3915:34:24"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3954:10:24","nodeType":"YulIdentifier","src":"3954:10:24"},{"name":"memPtr","nativeSrc":"3966:6:24","nodeType":"YulIdentifier","src":"3966:6:24"}],"functionName":{"name":"lt","nativeSrc":"3951:2:24","nodeType":"YulIdentifier","src":"3951:2:24"},"nativeSrc":"3951:22:24","nodeType":"YulFunctionCall","src":"3951:22:24"}],"functionName":{"name":"or","nativeSrc":"3912:2:24","nodeType":"YulIdentifier","src":"3912:2:24"},"nativeSrc":"3912:62:24","nodeType":"YulFunctionCall","src":"3912:62:24"},"nativeSrc":"3909:88:24","nodeType":"YulIf","src":"3909:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4013:2:24","nodeType":"YulLiteral","src":"4013:2:24","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4017:10:24","nodeType":"YulIdentifier","src":"4017:10:24"}],"functionName":{"name":"mstore","nativeSrc":"4006:6:24","nodeType":"YulIdentifier","src":"4006:6:24"},"nativeSrc":"4006:22:24","nodeType":"YulFunctionCall","src":"4006:22:24"},"nativeSrc":"4006:22:24","nodeType":"YulExpressionStatement","src":"4006:22:24"}]},"name":"finalize_allocation","nativeSrc":"3753:281:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3782:6:24","nodeType":"YulTypedName","src":"3782:6:24","type":""},{"name":"size","nativeSrc":"3790:4:24","nodeType":"YulTypedName","src":"3790:4:24","type":""}],"src":"3753:281:24"},{"body":{"nativeSrc":"4081:88:24","nodeType":"YulBlock","src":"4081:88:24","statements":[{"nativeSrc":"4091:30:24","nodeType":"YulAssignment","src":"4091:30:24","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"4101:18:24","nodeType":"YulIdentifier","src":"4101:18:24"},"nativeSrc":"4101:20:24","nodeType":"YulFunctionCall","src":"4101:20:24"},"variableNames":[{"name":"memPtr","nativeSrc":"4091:6:24","nodeType":"YulIdentifier","src":"4091:6:24"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4150:6:24","nodeType":"YulIdentifier","src":"4150:6:24"},{"name":"size","nativeSrc":"4158:4:24","nodeType":"YulIdentifier","src":"4158:4:24"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4130:19:24","nodeType":"YulIdentifier","src":"4130:19:24"},"nativeSrc":"4130:33:24","nodeType":"YulFunctionCall","src":"4130:33:24"},"nativeSrc":"4130:33:24","nodeType":"YulExpressionStatement","src":"4130:33:24"}]},"name":"allocate_memory","nativeSrc":"4040:129:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"4065:4:24","nodeType":"YulTypedName","src":"4065:4:24","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"4074:6:24","nodeType":"YulTypedName","src":"4074:6:24","type":""}],"src":"4040:129:24"},{"body":{"nativeSrc":"4242:241:24","nodeType":"YulBlock","src":"4242:241:24","statements":[{"body":{"nativeSrc":"4347:22:24","nodeType":"YulBlock","src":"4347:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4349:16:24","nodeType":"YulIdentifier","src":"4349:16:24"},"nativeSrc":"4349:18:24","nodeType":"YulFunctionCall","src":"4349:18:24"},"nativeSrc":"4349:18:24","nodeType":"YulExpressionStatement","src":"4349:18:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4319:6:24","nodeType":"YulIdentifier","src":"4319:6:24"},{"kind":"number","nativeSrc":"4327:18:24","nodeType":"YulLiteral","src":"4327:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4316:2:24","nodeType":"YulIdentifier","src":"4316:2:24"},"nativeSrc":"4316:30:24","nodeType":"YulFunctionCall","src":"4316:30:24"},"nativeSrc":"4313:56:24","nodeType":"YulIf","src":"4313:56:24"},{"nativeSrc":"4379:37:24","nodeType":"YulAssignment","src":"4379:37:24","value":{"arguments":[{"name":"length","nativeSrc":"4409:6:24","nodeType":"YulIdentifier","src":"4409:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4387:21:24","nodeType":"YulIdentifier","src":"4387:21:24"},"nativeSrc":"4387:29:24","nodeType":"YulFunctionCall","src":"4387:29:24"},"variableNames":[{"name":"size","nativeSrc":"4379:4:24","nodeType":"YulIdentifier","src":"4379:4:24"}]},{"nativeSrc":"4453:23:24","nodeType":"YulAssignment","src":"4453:23:24","value":{"arguments":[{"name":"size","nativeSrc":"4465:4:24","nodeType":"YulIdentifier","src":"4465:4:24"},{"kind":"number","nativeSrc":"4471:4:24","nodeType":"YulLiteral","src":"4471:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4461:3:24","nodeType":"YulIdentifier","src":"4461:3:24"},"nativeSrc":"4461:15:24","nodeType":"YulFunctionCall","src":"4461:15:24"},"variableNames":[{"name":"size","nativeSrc":"4453:4:24","nodeType":"YulIdentifier","src":"4453:4:24"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4175:308:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"4226:6:24","nodeType":"YulTypedName","src":"4226:6:24","type":""}],"returnVariables":[{"name":"size","nativeSrc":"4237:4:24","nodeType":"YulTypedName","src":"4237:4:24","type":""}],"src":"4175:308:24"},{"body":{"nativeSrc":"4553:84:24","nodeType":"YulBlock","src":"4553:84:24","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4577:3:24","nodeType":"YulIdentifier","src":"4577:3:24"},{"name":"src","nativeSrc":"4582:3:24","nodeType":"YulIdentifier","src":"4582:3:24"},{"name":"length","nativeSrc":"4587:6:24","nodeType":"YulIdentifier","src":"4587:6:24"}],"functionName":{"name":"calldatacopy","nativeSrc":"4564:12:24","nodeType":"YulIdentifier","src":"4564:12:24"},"nativeSrc":"4564:30:24","nodeType":"YulFunctionCall","src":"4564:30:24"},"nativeSrc":"4564:30:24","nodeType":"YulExpressionStatement","src":"4564:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4614:3:24","nodeType":"YulIdentifier","src":"4614:3:24"},{"name":"length","nativeSrc":"4619:6:24","nodeType":"YulIdentifier","src":"4619:6:24"}],"functionName":{"name":"add","nativeSrc":"4610:3:24","nodeType":"YulIdentifier","src":"4610:3:24"},"nativeSrc":"4610:16:24","nodeType":"YulFunctionCall","src":"4610:16:24"},{"kind":"number","nativeSrc":"4628:1:24","nodeType":"YulLiteral","src":"4628:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4603:6:24","nodeType":"YulIdentifier","src":"4603:6:24"},"nativeSrc":"4603:27:24","nodeType":"YulFunctionCall","src":"4603:27:24"},"nativeSrc":"4603:27:24","nodeType":"YulExpressionStatement","src":"4603:27:24"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4489:148:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4535:3:24","nodeType":"YulTypedName","src":"4535:3:24","type":""},{"name":"dst","nativeSrc":"4540:3:24","nodeType":"YulTypedName","src":"4540:3:24","type":""},{"name":"length","nativeSrc":"4545:6:24","nodeType":"YulTypedName","src":"4545:6:24","type":""}],"src":"4489:148:24"},{"body":{"nativeSrc":"4727:341:24","nodeType":"YulBlock","src":"4727:341:24","statements":[{"nativeSrc":"4737:75:24","nodeType":"YulAssignment","src":"4737:75:24","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4804:6:24","nodeType":"YulIdentifier","src":"4804:6:24"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4762:41:24","nodeType":"YulIdentifier","src":"4762:41:24"},"nativeSrc":"4762:49:24","nodeType":"YulFunctionCall","src":"4762:49:24"}],"functionName":{"name":"allocate_memory","nativeSrc":"4746:15:24","nodeType":"YulIdentifier","src":"4746:15:24"},"nativeSrc":"4746:66:24","nodeType":"YulFunctionCall","src":"4746:66:24"},"variableNames":[{"name":"array","nativeSrc":"4737:5:24","nodeType":"YulIdentifier","src":"4737:5:24"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"4828:5:24","nodeType":"YulIdentifier","src":"4828:5:24"},{"name":"length","nativeSrc":"4835:6:24","nodeType":"YulIdentifier","src":"4835:6:24"}],"functionName":{"name":"mstore","nativeSrc":"4821:6:24","nodeType":"YulIdentifier","src":"4821:6:24"},"nativeSrc":"4821:21:24","nodeType":"YulFunctionCall","src":"4821:21:24"},"nativeSrc":"4821:21:24","nodeType":"YulExpressionStatement","src":"4821:21:24"},{"nativeSrc":"4851:27:24","nodeType":"YulVariableDeclaration","src":"4851:27:24","value":{"arguments":[{"name":"array","nativeSrc":"4866:5:24","nodeType":"YulIdentifier","src":"4866:5:24"},{"kind":"number","nativeSrc":"4873:4:24","nodeType":"YulLiteral","src":"4873:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4862:3:24","nodeType":"YulIdentifier","src":"4862:3:24"},"nativeSrc":"4862:16:24","nodeType":"YulFunctionCall","src":"4862:16:24"},"variables":[{"name":"dst","nativeSrc":"4855:3:24","nodeType":"YulTypedName","src":"4855:3:24","type":""}]},{"body":{"nativeSrc":"4916:83:24","nodeType":"YulBlock","src":"4916:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4918:77:24","nodeType":"YulIdentifier","src":"4918:77:24"},"nativeSrc":"4918:79:24","nodeType":"YulFunctionCall","src":"4918:79:24"},"nativeSrc":"4918:79:24","nodeType":"YulExpressionStatement","src":"4918:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4897:3:24","nodeType":"YulIdentifier","src":"4897:3:24"},{"name":"length","nativeSrc":"4902:6:24","nodeType":"YulIdentifier","src":"4902:6:24"}],"functionName":{"name":"add","nativeSrc":"4893:3:24","nodeType":"YulIdentifier","src":"4893:3:24"},"nativeSrc":"4893:16:24","nodeType":"YulFunctionCall","src":"4893:16:24"},{"name":"end","nativeSrc":"4911:3:24","nodeType":"YulIdentifier","src":"4911:3:24"}],"functionName":{"name":"gt","nativeSrc":"4890:2:24","nodeType":"YulIdentifier","src":"4890:2:24"},"nativeSrc":"4890:25:24","nodeType":"YulFunctionCall","src":"4890:25:24"},"nativeSrc":"4887:112:24","nodeType":"YulIf","src":"4887:112:24"},{"expression":{"arguments":[{"name":"src","nativeSrc":"5045:3:24","nodeType":"YulIdentifier","src":"5045:3:24"},{"name":"dst","nativeSrc":"5050:3:24","nodeType":"YulIdentifier","src":"5050:3:24"},{"name":"length","nativeSrc":"5055:6:24","nodeType":"YulIdentifier","src":"5055:6:24"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"5008:36:24","nodeType":"YulIdentifier","src":"5008:36:24"},"nativeSrc":"5008:54:24","nodeType":"YulFunctionCall","src":"5008:54:24"},"nativeSrc":"5008:54:24","nodeType":"YulExpressionStatement","src":"5008:54:24"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4643:425:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4700:3:24","nodeType":"YulTypedName","src":"4700:3:24","type":""},{"name":"length","nativeSrc":"4705:6:24","nodeType":"YulTypedName","src":"4705:6:24","type":""},{"name":"end","nativeSrc":"4713:3:24","nodeType":"YulTypedName","src":"4713:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4721:5:24","nodeType":"YulTypedName","src":"4721:5:24","type":""}],"src":"4643:425:24"},{"body":{"nativeSrc":"5150:278:24","nodeType":"YulBlock","src":"5150:278:24","statements":[{"body":{"nativeSrc":"5199:83:24","nodeType":"YulBlock","src":"5199:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5201:77:24","nodeType":"YulIdentifier","src":"5201:77:24"},"nativeSrc":"5201:79:24","nodeType":"YulFunctionCall","src":"5201:79:24"},"nativeSrc":"5201:79:24","nodeType":"YulExpressionStatement","src":"5201:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5178:6:24","nodeType":"YulIdentifier","src":"5178:6:24"},{"kind":"number","nativeSrc":"5186:4:24","nodeType":"YulLiteral","src":"5186:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5174:3:24","nodeType":"YulIdentifier","src":"5174:3:24"},"nativeSrc":"5174:17:24","nodeType":"YulFunctionCall","src":"5174:17:24"},{"name":"end","nativeSrc":"5193:3:24","nodeType":"YulIdentifier","src":"5193:3:24"}],"functionName":{"name":"slt","nativeSrc":"5170:3:24","nodeType":"YulIdentifier","src":"5170:3:24"},"nativeSrc":"5170:27:24","nodeType":"YulFunctionCall","src":"5170:27:24"}],"functionName":{"name":"iszero","nativeSrc":"5163:6:24","nodeType":"YulIdentifier","src":"5163:6:24"},"nativeSrc":"5163:35:24","nodeType":"YulFunctionCall","src":"5163:35:24"},"nativeSrc":"5160:122:24","nodeType":"YulIf","src":"5160:122:24"},{"nativeSrc":"5291:34:24","nodeType":"YulVariableDeclaration","src":"5291:34:24","value":{"arguments":[{"name":"offset","nativeSrc":"5318:6:24","nodeType":"YulIdentifier","src":"5318:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"5305:12:24","nodeType":"YulIdentifier","src":"5305:12:24"},"nativeSrc":"5305:20:24","nodeType":"YulFunctionCall","src":"5305:20:24"},"variables":[{"name":"length","nativeSrc":"5295:6:24","nodeType":"YulTypedName","src":"5295:6:24","type":""}]},{"nativeSrc":"5334:88:24","nodeType":"YulAssignment","src":"5334:88:24","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5395:6:24","nodeType":"YulIdentifier","src":"5395:6:24"},{"kind":"number","nativeSrc":"5403:4:24","nodeType":"YulLiteral","src":"5403:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5391:3:24","nodeType":"YulIdentifier","src":"5391:3:24"},"nativeSrc":"5391:17:24","nodeType":"YulFunctionCall","src":"5391:17:24"},{"name":"length","nativeSrc":"5410:6:24","nodeType":"YulIdentifier","src":"5410:6:24"},{"name":"end","nativeSrc":"5418:3:24","nodeType":"YulIdentifier","src":"5418:3:24"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"5343:47:24","nodeType":"YulIdentifier","src":"5343:47:24"},"nativeSrc":"5343:79:24","nodeType":"YulFunctionCall","src":"5343:79:24"},"variableNames":[{"name":"array","nativeSrc":"5334:5:24","nodeType":"YulIdentifier","src":"5334:5:24"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5088:340:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5128:6:24","nodeType":"YulTypedName","src":"5128:6:24","type":""},{"name":"end","nativeSrc":"5136:3:24","nodeType":"YulTypedName","src":"5136:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5144:5:24","nodeType":"YulTypedName","src":"5144:5:24","type":""}],"src":"5088:340:24"},{"body":{"nativeSrc":"5510:433:24","nodeType":"YulBlock","src":"5510:433:24","statements":[{"body":{"nativeSrc":"5556:83:24","nodeType":"YulBlock","src":"5556:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5558:77:24","nodeType":"YulIdentifier","src":"5558:77:24"},"nativeSrc":"5558:79:24","nodeType":"YulFunctionCall","src":"5558:79:24"},"nativeSrc":"5558:79:24","nodeType":"YulExpressionStatement","src":"5558:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5531:7:24","nodeType":"YulIdentifier","src":"5531:7:24"},{"name":"headStart","nativeSrc":"5540:9:24","nodeType":"YulIdentifier","src":"5540:9:24"}],"functionName":{"name":"sub","nativeSrc":"5527:3:24","nodeType":"YulIdentifier","src":"5527:3:24"},"nativeSrc":"5527:23:24","nodeType":"YulFunctionCall","src":"5527:23:24"},{"kind":"number","nativeSrc":"5552:2:24","nodeType":"YulLiteral","src":"5552:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5523:3:24","nodeType":"YulIdentifier","src":"5523:3:24"},"nativeSrc":"5523:32:24","nodeType":"YulFunctionCall","src":"5523:32:24"},"nativeSrc":"5520:119:24","nodeType":"YulIf","src":"5520:119:24"},{"nativeSrc":"5649:287:24","nodeType":"YulBlock","src":"5649:287:24","statements":[{"nativeSrc":"5664:45:24","nodeType":"YulVariableDeclaration","src":"5664:45:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5695:9:24","nodeType":"YulIdentifier","src":"5695:9:24"},{"kind":"number","nativeSrc":"5706:1:24","nodeType":"YulLiteral","src":"5706:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5691:3:24","nodeType":"YulIdentifier","src":"5691:3:24"},"nativeSrc":"5691:17:24","nodeType":"YulFunctionCall","src":"5691:17:24"}],"functionName":{"name":"calldataload","nativeSrc":"5678:12:24","nodeType":"YulIdentifier","src":"5678:12:24"},"nativeSrc":"5678:31:24","nodeType":"YulFunctionCall","src":"5678:31:24"},"variables":[{"name":"offset","nativeSrc":"5668:6:24","nodeType":"YulTypedName","src":"5668:6:24","type":""}]},{"body":{"nativeSrc":"5756:83:24","nodeType":"YulBlock","src":"5756:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"5758:77:24","nodeType":"YulIdentifier","src":"5758:77:24"},"nativeSrc":"5758:79:24","nodeType":"YulFunctionCall","src":"5758:79:24"},"nativeSrc":"5758:79:24","nodeType":"YulExpressionStatement","src":"5758:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5728:6:24","nodeType":"YulIdentifier","src":"5728:6:24"},{"kind":"number","nativeSrc":"5736:18:24","nodeType":"YulLiteral","src":"5736:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5725:2:24","nodeType":"YulIdentifier","src":"5725:2:24"},"nativeSrc":"5725:30:24","nodeType":"YulFunctionCall","src":"5725:30:24"},"nativeSrc":"5722:117:24","nodeType":"YulIf","src":"5722:117:24"},{"nativeSrc":"5853:73:24","nodeType":"YulAssignment","src":"5853:73:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5898:9:24","nodeType":"YulIdentifier","src":"5898:9:24"},{"name":"offset","nativeSrc":"5909:6:24","nodeType":"YulIdentifier","src":"5909:6:24"}],"functionName":{"name":"add","nativeSrc":"5894:3:24","nodeType":"YulIdentifier","src":"5894:3:24"},"nativeSrc":"5894:22:24","nodeType":"YulFunctionCall","src":"5894:22:24"},{"name":"dataEnd","nativeSrc":"5918:7:24","nodeType":"YulIdentifier","src":"5918:7:24"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5863:30:24","nodeType":"YulIdentifier","src":"5863:30:24"},"nativeSrc":"5863:63:24","nodeType":"YulFunctionCall","src":"5863:63:24"},"variableNames":[{"name":"value0","nativeSrc":"5853:6:24","nodeType":"YulIdentifier","src":"5853:6:24"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"5434:509:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5480:9:24","nodeType":"YulTypedName","src":"5480:9:24","type":""},{"name":"dataEnd","nativeSrc":"5491:7:24","nodeType":"YulTypedName","src":"5491:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5503:6:24","nodeType":"YulTypedName","src":"5503:6:24","type":""}],"src":"5434:509:24"},{"body":{"nativeSrc":"6015:263:24","nodeType":"YulBlock","src":"6015:263:24","statements":[{"body":{"nativeSrc":"6061:83:24","nodeType":"YulBlock","src":"6061:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6063:77:24","nodeType":"YulIdentifier","src":"6063:77:24"},"nativeSrc":"6063:79:24","nodeType":"YulFunctionCall","src":"6063:79:24"},"nativeSrc":"6063:79:24","nodeType":"YulExpressionStatement","src":"6063:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6036:7:24","nodeType":"YulIdentifier","src":"6036:7:24"},{"name":"headStart","nativeSrc":"6045:9:24","nodeType":"YulIdentifier","src":"6045:9:24"}],"functionName":{"name":"sub","nativeSrc":"6032:3:24","nodeType":"YulIdentifier","src":"6032:3:24"},"nativeSrc":"6032:23:24","nodeType":"YulFunctionCall","src":"6032:23:24"},{"kind":"number","nativeSrc":"6057:2:24","nodeType":"YulLiteral","src":"6057:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6028:3:24","nodeType":"YulIdentifier","src":"6028:3:24"},"nativeSrc":"6028:32:24","nodeType":"YulFunctionCall","src":"6028:32:24"},"nativeSrc":"6025:119:24","nodeType":"YulIf","src":"6025:119:24"},{"nativeSrc":"6154:117:24","nodeType":"YulBlock","src":"6154:117:24","statements":[{"nativeSrc":"6169:15:24","nodeType":"YulVariableDeclaration","src":"6169:15:24","value":{"kind":"number","nativeSrc":"6183:1:24","nodeType":"YulLiteral","src":"6183:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6173:6:24","nodeType":"YulTypedName","src":"6173:6:24","type":""}]},{"nativeSrc":"6198:63:24","nodeType":"YulAssignment","src":"6198:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6233:9:24","nodeType":"YulIdentifier","src":"6233:9:24"},{"name":"offset","nativeSrc":"6244:6:24","nodeType":"YulIdentifier","src":"6244:6:24"}],"functionName":{"name":"add","nativeSrc":"6229:3:24","nodeType":"YulIdentifier","src":"6229:3:24"},"nativeSrc":"6229:22:24","nodeType":"YulFunctionCall","src":"6229:22:24"},{"name":"dataEnd","nativeSrc":"6253:7:24","nodeType":"YulIdentifier","src":"6253:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6208:20:24","nodeType":"YulIdentifier","src":"6208:20:24"},"nativeSrc":"6208:53:24","nodeType":"YulFunctionCall","src":"6208:53:24"},"variableNames":[{"name":"value0","nativeSrc":"6198:6:24","nodeType":"YulIdentifier","src":"6198:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5949:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5985:9:24","nodeType":"YulTypedName","src":"5985:9:24","type":""},{"name":"dataEnd","nativeSrc":"5996:7:24","nodeType":"YulTypedName","src":"5996:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6008:6:24","nodeType":"YulTypedName","src":"6008:6:24","type":""}],"src":"5949:329:24"},{"body":{"nativeSrc":"6343:40:24","nodeType":"YulBlock","src":"6343:40:24","statements":[{"nativeSrc":"6354:22:24","nodeType":"YulAssignment","src":"6354:22:24","value":{"arguments":[{"name":"value","nativeSrc":"6370:5:24","nodeType":"YulIdentifier","src":"6370:5:24"}],"functionName":{"name":"mload","nativeSrc":"6364:5:24","nodeType":"YulIdentifier","src":"6364:5:24"},"nativeSrc":"6364:12:24","nodeType":"YulFunctionCall","src":"6364:12:24"},"variableNames":[{"name":"length","nativeSrc":"6354:6:24","nodeType":"YulIdentifier","src":"6354:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"6284:99:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6326:5:24","nodeType":"YulTypedName","src":"6326:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6336:6:24","nodeType":"YulTypedName","src":"6336:6:24","type":""}],"src":"6284:99:24"},{"body":{"nativeSrc":"6485:73:24","nodeType":"YulBlock","src":"6485:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6502:3:24","nodeType":"YulIdentifier","src":"6502:3:24"},{"name":"length","nativeSrc":"6507:6:24","nodeType":"YulIdentifier","src":"6507:6:24"}],"functionName":{"name":"mstore","nativeSrc":"6495:6:24","nodeType":"YulIdentifier","src":"6495:6:24"},"nativeSrc":"6495:19:24","nodeType":"YulFunctionCall","src":"6495:19:24"},"nativeSrc":"6495:19:24","nodeType":"YulExpressionStatement","src":"6495:19:24"},{"nativeSrc":"6523:29:24","nodeType":"YulAssignment","src":"6523:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"6542:3:24","nodeType":"YulIdentifier","src":"6542:3:24"},{"kind":"number","nativeSrc":"6547:4:24","nodeType":"YulLiteral","src":"6547:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6538:3:24","nodeType":"YulIdentifier","src":"6538:3:24"},"nativeSrc":"6538:14:24","nodeType":"YulFunctionCall","src":"6538:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"6523:11:24","nodeType":"YulIdentifier","src":"6523:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6389:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6457:3:24","nodeType":"YulTypedName","src":"6457:3:24","type":""},{"name":"length","nativeSrc":"6462:6:24","nodeType":"YulTypedName","src":"6462:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6473:11:24","nodeType":"YulTypedName","src":"6473:11:24","type":""}],"src":"6389:169:24"},{"body":{"nativeSrc":"6626:186:24","nodeType":"YulBlock","src":"6626:186:24","statements":[{"nativeSrc":"6637:10:24","nodeType":"YulVariableDeclaration","src":"6637:10:24","value":{"kind":"number","nativeSrc":"6646:1:24","nodeType":"YulLiteral","src":"6646:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6641:1:24","nodeType":"YulTypedName","src":"6641:1:24","type":""}]},{"body":{"nativeSrc":"6706:63:24","nodeType":"YulBlock","src":"6706:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6731:3:24","nodeType":"YulIdentifier","src":"6731:3:24"},{"name":"i","nativeSrc":"6736:1:24","nodeType":"YulIdentifier","src":"6736:1:24"}],"functionName":{"name":"add","nativeSrc":"6727:3:24","nodeType":"YulIdentifier","src":"6727:3:24"},"nativeSrc":"6727:11:24","nodeType":"YulFunctionCall","src":"6727:11:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6750:3:24","nodeType":"YulIdentifier","src":"6750:3:24"},{"name":"i","nativeSrc":"6755:1:24","nodeType":"YulIdentifier","src":"6755:1:24"}],"functionName":{"name":"add","nativeSrc":"6746:3:24","nodeType":"YulIdentifier","src":"6746:3:24"},"nativeSrc":"6746:11:24","nodeType":"YulFunctionCall","src":"6746:11:24"}],"functionName":{"name":"mload","nativeSrc":"6740:5:24","nodeType":"YulIdentifier","src":"6740:5:24"},"nativeSrc":"6740:18:24","nodeType":"YulFunctionCall","src":"6740:18:24"}],"functionName":{"name":"mstore","nativeSrc":"6720:6:24","nodeType":"YulIdentifier","src":"6720:6:24"},"nativeSrc":"6720:39:24","nodeType":"YulFunctionCall","src":"6720:39:24"},"nativeSrc":"6720:39:24","nodeType":"YulExpressionStatement","src":"6720:39:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6667:1:24","nodeType":"YulIdentifier","src":"6667:1:24"},{"name":"length","nativeSrc":"6670:6:24","nodeType":"YulIdentifier","src":"6670:6:24"}],"functionName":{"name":"lt","nativeSrc":"6664:2:24","nodeType":"YulIdentifier","src":"6664:2:24"},"nativeSrc":"6664:13:24","nodeType":"YulFunctionCall","src":"6664:13:24"},"nativeSrc":"6656:113:24","nodeType":"YulForLoop","post":{"nativeSrc":"6678:19:24","nodeType":"YulBlock","src":"6678:19:24","statements":[{"nativeSrc":"6680:15:24","nodeType":"YulAssignment","src":"6680:15:24","value":{"arguments":[{"name":"i","nativeSrc":"6689:1:24","nodeType":"YulIdentifier","src":"6689:1:24"},{"kind":"number","nativeSrc":"6692:2:24","nodeType":"YulLiteral","src":"6692:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6685:3:24","nodeType":"YulIdentifier","src":"6685:3:24"},"nativeSrc":"6685:10:24","nodeType":"YulFunctionCall","src":"6685:10:24"},"variableNames":[{"name":"i","nativeSrc":"6680:1:24","nodeType":"YulIdentifier","src":"6680:1:24"}]}]},"pre":{"nativeSrc":"6660:3:24","nodeType":"YulBlock","src":"6660:3:24","statements":[]},"src":"6656:113:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6789:3:24","nodeType":"YulIdentifier","src":"6789:3:24"},{"name":"length","nativeSrc":"6794:6:24","nodeType":"YulIdentifier","src":"6794:6:24"}],"functionName":{"name":"add","nativeSrc":"6785:3:24","nodeType":"YulIdentifier","src":"6785:3:24"},"nativeSrc":"6785:16:24","nodeType":"YulFunctionCall","src":"6785:16:24"},{"kind":"number","nativeSrc":"6803:1:24","nodeType":"YulLiteral","src":"6803:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6778:6:24","nodeType":"YulIdentifier","src":"6778:6:24"},"nativeSrc":"6778:27:24","nodeType":"YulFunctionCall","src":"6778:27:24"},"nativeSrc":"6778:27:24","nodeType":"YulExpressionStatement","src":"6778:27:24"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6564:248:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6608:3:24","nodeType":"YulTypedName","src":"6608:3:24","type":""},{"name":"dst","nativeSrc":"6613:3:24","nodeType":"YulTypedName","src":"6613:3:24","type":""},{"name":"length","nativeSrc":"6618:6:24","nodeType":"YulTypedName","src":"6618:6:24","type":""}],"src":"6564:248:24"},{"body":{"nativeSrc":"6910:285:24","nodeType":"YulBlock","src":"6910:285:24","statements":[{"nativeSrc":"6920:53:24","nodeType":"YulVariableDeclaration","src":"6920:53:24","value":{"arguments":[{"name":"value","nativeSrc":"6967:5:24","nodeType":"YulIdentifier","src":"6967:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"6934:32:24","nodeType":"YulIdentifier","src":"6934:32:24"},"nativeSrc":"6934:39:24","nodeType":"YulFunctionCall","src":"6934:39:24"},"variables":[{"name":"length","nativeSrc":"6924:6:24","nodeType":"YulTypedName","src":"6924:6:24","type":""}]},{"nativeSrc":"6982:78:24","nodeType":"YulAssignment","src":"6982:78:24","value":{"arguments":[{"name":"pos","nativeSrc":"7048:3:24","nodeType":"YulIdentifier","src":"7048:3:24"},{"name":"length","nativeSrc":"7053:6:24","nodeType":"YulIdentifier","src":"7053:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6989:58:24","nodeType":"YulIdentifier","src":"6989:58:24"},"nativeSrc":"6989:71:24","nodeType":"YulFunctionCall","src":"6989:71:24"},"variableNames":[{"name":"pos","nativeSrc":"6982:3:24","nodeType":"YulIdentifier","src":"6982:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7108:5:24","nodeType":"YulIdentifier","src":"7108:5:24"},{"kind":"number","nativeSrc":"7115:4:24","nodeType":"YulLiteral","src":"7115:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7104:3:24","nodeType":"YulIdentifier","src":"7104:3:24"},"nativeSrc":"7104:16:24","nodeType":"YulFunctionCall","src":"7104:16:24"},{"name":"pos","nativeSrc":"7122:3:24","nodeType":"YulIdentifier","src":"7122:3:24"},{"name":"length","nativeSrc":"7127:6:24","nodeType":"YulIdentifier","src":"7127:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7069:34:24","nodeType":"YulIdentifier","src":"7069:34:24"},"nativeSrc":"7069:65:24","nodeType":"YulFunctionCall","src":"7069:65:24"},"nativeSrc":"7069:65:24","nodeType":"YulExpressionStatement","src":"7069:65:24"},{"nativeSrc":"7143:46:24","nodeType":"YulAssignment","src":"7143:46:24","value":{"arguments":[{"name":"pos","nativeSrc":"7154:3:24","nodeType":"YulIdentifier","src":"7154:3:24"},{"arguments":[{"name":"length","nativeSrc":"7181:6:24","nodeType":"YulIdentifier","src":"7181:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7159:21:24","nodeType":"YulIdentifier","src":"7159:21:24"},"nativeSrc":"7159:29:24","nodeType":"YulFunctionCall","src":"7159:29:24"}],"functionName":{"name":"add","nativeSrc":"7150:3:24","nodeType":"YulIdentifier","src":"7150:3:24"},"nativeSrc":"7150:39:24","nodeType":"YulFunctionCall","src":"7150:39:24"},"variableNames":[{"name":"end","nativeSrc":"7143:3:24","nodeType":"YulIdentifier","src":"7143:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"6818:377:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6891:5:24","nodeType":"YulTypedName","src":"6891:5:24","type":""},{"name":"pos","nativeSrc":"6898:3:24","nodeType":"YulTypedName","src":"6898:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6906:3:24","nodeType":"YulTypedName","src":"6906:3:24","type":""}],"src":"6818:377:24"},{"body":{"nativeSrc":"7319:195:24","nodeType":"YulBlock","src":"7319:195:24","statements":[{"nativeSrc":"7329:26:24","nodeType":"YulAssignment","src":"7329:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"7341:9:24","nodeType":"YulIdentifier","src":"7341:9:24"},{"kind":"number","nativeSrc":"7352:2:24","nodeType":"YulLiteral","src":"7352:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7337:3:24","nodeType":"YulIdentifier","src":"7337:3:24"},"nativeSrc":"7337:18:24","nodeType":"YulFunctionCall","src":"7337:18:24"},"variableNames":[{"name":"tail","nativeSrc":"7329:4:24","nodeType":"YulIdentifier","src":"7329:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7376:9:24","nodeType":"YulIdentifier","src":"7376:9:24"},{"kind":"number","nativeSrc":"7387:1:24","nodeType":"YulLiteral","src":"7387:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7372:3:24","nodeType":"YulIdentifier","src":"7372:3:24"},"nativeSrc":"7372:17:24","nodeType":"YulFunctionCall","src":"7372:17:24"},{"arguments":[{"name":"tail","nativeSrc":"7395:4:24","nodeType":"YulIdentifier","src":"7395:4:24"},{"name":"headStart","nativeSrc":"7401:9:24","nodeType":"YulIdentifier","src":"7401:9:24"}],"functionName":{"name":"sub","nativeSrc":"7391:3:24","nodeType":"YulIdentifier","src":"7391:3:24"},"nativeSrc":"7391:20:24","nodeType":"YulFunctionCall","src":"7391:20:24"}],"functionName":{"name":"mstore","nativeSrc":"7365:6:24","nodeType":"YulIdentifier","src":"7365:6:24"},"nativeSrc":"7365:47:24","nodeType":"YulFunctionCall","src":"7365:47:24"},"nativeSrc":"7365:47:24","nodeType":"YulExpressionStatement","src":"7365:47:24"},{"nativeSrc":"7421:86:24","nodeType":"YulAssignment","src":"7421:86:24","value":{"arguments":[{"name":"value0","nativeSrc":"7493:6:24","nodeType":"YulIdentifier","src":"7493:6:24"},{"name":"tail","nativeSrc":"7502:4:24","nodeType":"YulIdentifier","src":"7502:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7429:63:24","nodeType":"YulIdentifier","src":"7429:63:24"},"nativeSrc":"7429:78:24","nodeType":"YulFunctionCall","src":"7429:78:24"},"variableNames":[{"name":"tail","nativeSrc":"7421:4:24","nodeType":"YulIdentifier","src":"7421:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7201:313:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7291:9:24","nodeType":"YulTypedName","src":"7291:9:24","type":""},{"name":"value0","nativeSrc":"7303:6:24","nodeType":"YulTypedName","src":"7303:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7314:4:24","nodeType":"YulTypedName","src":"7314:4:24","type":""}],"src":"7201:313:24"},{"body":{"nativeSrc":"7602:229:24","nodeType":"YulBlock","src":"7602:229:24","statements":[{"body":{"nativeSrc":"7707:22:24","nodeType":"YulBlock","src":"7707:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7709:16:24","nodeType":"YulIdentifier","src":"7709:16:24"},"nativeSrc":"7709:18:24","nodeType":"YulFunctionCall","src":"7709:18:24"},"nativeSrc":"7709:18:24","nodeType":"YulExpressionStatement","src":"7709:18:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7679:6:24","nodeType":"YulIdentifier","src":"7679:6:24"},{"kind":"number","nativeSrc":"7687:18:24","nodeType":"YulLiteral","src":"7687:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7676:2:24","nodeType":"YulIdentifier","src":"7676:2:24"},"nativeSrc":"7676:30:24","nodeType":"YulFunctionCall","src":"7676:30:24"},"nativeSrc":"7673:56:24","nodeType":"YulIf","src":"7673:56:24"},{"nativeSrc":"7739:25:24","nodeType":"YulAssignment","src":"7739:25:24","value":{"arguments":[{"name":"length","nativeSrc":"7751:6:24","nodeType":"YulIdentifier","src":"7751:6:24"},{"kind":"number","nativeSrc":"7759:4:24","nodeType":"YulLiteral","src":"7759:4:24","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"7747:3:24","nodeType":"YulIdentifier","src":"7747:3:24"},"nativeSrc":"7747:17:24","nodeType":"YulFunctionCall","src":"7747:17:24"},"variableNames":[{"name":"size","nativeSrc":"7739:4:24","nodeType":"YulIdentifier","src":"7739:4:24"}]},{"nativeSrc":"7801:23:24","nodeType":"YulAssignment","src":"7801:23:24","value":{"arguments":[{"name":"size","nativeSrc":"7813:4:24","nodeType":"YulIdentifier","src":"7813:4:24"},{"kind":"number","nativeSrc":"7819:4:24","nodeType":"YulLiteral","src":"7819:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7809:3:24","nodeType":"YulIdentifier","src":"7809:3:24"},"nativeSrc":"7809:15:24","nodeType":"YulFunctionCall","src":"7809:15:24"},"variableNames":[{"name":"size","nativeSrc":"7801:4:24","nodeType":"YulIdentifier","src":"7801:4:24"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7520:311:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7586:6:24","nodeType":"YulTypedName","src":"7586:6:24","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7597:4:24","nodeType":"YulTypedName","src":"7597:4:24","type":""}],"src":"7520:311:24"},{"body":{"nativeSrc":"7926:28:24","nodeType":"YulBlock","src":"7926:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7943:1:24","nodeType":"YulLiteral","src":"7943:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"7946:1:24","nodeType":"YulLiteral","src":"7946:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7936:6:24","nodeType":"YulIdentifier","src":"7936:6:24"},"nativeSrc":"7936:12:24","nodeType":"YulFunctionCall","src":"7936:12:24"},"nativeSrc":"7936:12:24","nodeType":"YulExpressionStatement","src":"7936:12:24"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7837:117:24","nodeType":"YulFunctionDefinition","src":"7837:117:24"},{"body":{"nativeSrc":"8079:608:24","nodeType":"YulBlock","src":"8079:608:24","statements":[{"nativeSrc":"8089:90:24","nodeType":"YulAssignment","src":"8089:90:24","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8171:6:24","nodeType":"YulIdentifier","src":"8171:6:24"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8114:56:24","nodeType":"YulIdentifier","src":"8114:56:24"},"nativeSrc":"8114:64:24","nodeType":"YulFunctionCall","src":"8114:64:24"}],"functionName":{"name":"allocate_memory","nativeSrc":"8098:15:24","nodeType":"YulIdentifier","src":"8098:15:24"},"nativeSrc":"8098:81:24","nodeType":"YulFunctionCall","src":"8098:81:24"},"variableNames":[{"name":"array","nativeSrc":"8089:5:24","nodeType":"YulIdentifier","src":"8089:5:24"}]},{"nativeSrc":"8188:16:24","nodeType":"YulVariableDeclaration","src":"8188:16:24","value":{"name":"array","nativeSrc":"8199:5:24","nodeType":"YulIdentifier","src":"8199:5:24"},"variables":[{"name":"dst","nativeSrc":"8192:3:24","nodeType":"YulTypedName","src":"8192:3:24","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8221:5:24","nodeType":"YulIdentifier","src":"8221:5:24"},{"name":"length","nativeSrc":"8228:6:24","nodeType":"YulIdentifier","src":"8228:6:24"}],"functionName":{"name":"mstore","nativeSrc":"8214:6:24","nodeType":"YulIdentifier","src":"8214:6:24"},"nativeSrc":"8214:21:24","nodeType":"YulFunctionCall","src":"8214:21:24"},"nativeSrc":"8214:21:24","nodeType":"YulExpressionStatement","src":"8214:21:24"},{"nativeSrc":"8244:23:24","nodeType":"YulAssignment","src":"8244:23:24","value":{"arguments":[{"name":"array","nativeSrc":"8255:5:24","nodeType":"YulIdentifier","src":"8255:5:24"},{"kind":"number","nativeSrc":"8262:4:24","nodeType":"YulLiteral","src":"8262:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8251:3:24","nodeType":"YulIdentifier","src":"8251:3:24"},"nativeSrc":"8251:16:24","nodeType":"YulFunctionCall","src":"8251:16:24"},"variableNames":[{"name":"dst","nativeSrc":"8244:3:24","nodeType":"YulIdentifier","src":"8244:3:24"}]},{"nativeSrc":"8277:44:24","nodeType":"YulVariableDeclaration","src":"8277:44:24","value":{"arguments":[{"name":"offset","nativeSrc":"8295:6:24","nodeType":"YulIdentifier","src":"8295:6:24"},{"arguments":[{"name":"length","nativeSrc":"8307:6:24","nodeType":"YulIdentifier","src":"8307:6:24"},{"kind":"number","nativeSrc":"8315:4:24","nodeType":"YulLiteral","src":"8315:4:24","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"8303:3:24","nodeType":"YulIdentifier","src":"8303:3:24"},"nativeSrc":"8303:17:24","nodeType":"YulFunctionCall","src":"8303:17:24"}],"functionName":{"name":"add","nativeSrc":"8291:3:24","nodeType":"YulIdentifier","src":"8291:3:24"},"nativeSrc":"8291:30:24","nodeType":"YulFunctionCall","src":"8291:30:24"},"variables":[{"name":"srcEnd","nativeSrc":"8281:6:24","nodeType":"YulTypedName","src":"8281:6:24","type":""}]},{"body":{"nativeSrc":"8349:103:24","nodeType":"YulBlock","src":"8349:103:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"8363:77:24","nodeType":"YulIdentifier","src":"8363:77:24"},"nativeSrc":"8363:79:24","nodeType":"YulFunctionCall","src":"8363:79:24"},"nativeSrc":"8363:79:24","nodeType":"YulExpressionStatement","src":"8363:79:24"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"8336:6:24","nodeType":"YulIdentifier","src":"8336:6:24"},{"name":"end","nativeSrc":"8344:3:24","nodeType":"YulIdentifier","src":"8344:3:24"}],"functionName":{"name":"gt","nativeSrc":"8333:2:24","nodeType":"YulIdentifier","src":"8333:2:24"},"nativeSrc":"8333:15:24","nodeType":"YulFunctionCall","src":"8333:15:24"},"nativeSrc":"8330:122:24","nodeType":"YulIf","src":"8330:122:24"},{"body":{"nativeSrc":"8537:144:24","nodeType":"YulBlock","src":"8537:144:24","statements":[{"nativeSrc":"8552:21:24","nodeType":"YulVariableDeclaration","src":"8552:21:24","value":{"name":"src","nativeSrc":"8570:3:24","nodeType":"YulIdentifier","src":"8570:3:24"},"variables":[{"name":"elementPos","nativeSrc":"8556:10:24","nodeType":"YulTypedName","src":"8556:10:24","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"8594:3:24","nodeType":"YulIdentifier","src":"8594:3:24"},{"arguments":[{"name":"elementPos","nativeSrc":"8620:10:24","nodeType":"YulIdentifier","src":"8620:10:24"},{"name":"end","nativeSrc":"8632:3:24","nodeType":"YulIdentifier","src":"8632:3:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8599:20:24","nodeType":"YulIdentifier","src":"8599:20:24"},"nativeSrc":"8599:37:24","nodeType":"YulFunctionCall","src":"8599:37:24"}],"functionName":{"name":"mstore","nativeSrc":"8587:6:24","nodeType":"YulIdentifier","src":"8587:6:24"},"nativeSrc":"8587:50:24","nodeType":"YulFunctionCall","src":"8587:50:24"},"nativeSrc":"8587:50:24","nodeType":"YulExpressionStatement","src":"8587:50:24"},{"nativeSrc":"8650:21:24","nodeType":"YulAssignment","src":"8650:21:24","value":{"arguments":[{"name":"dst","nativeSrc":"8661:3:24","nodeType":"YulIdentifier","src":"8661:3:24"},{"kind":"number","nativeSrc":"8666:4:24","nodeType":"YulLiteral","src":"8666:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8657:3:24","nodeType":"YulIdentifier","src":"8657:3:24"},"nativeSrc":"8657:14:24","nodeType":"YulFunctionCall","src":"8657:14:24"},"variableNames":[{"name":"dst","nativeSrc":"8650:3:24","nodeType":"YulIdentifier","src":"8650:3:24"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"8490:3:24","nodeType":"YulIdentifier","src":"8490:3:24"},{"name":"srcEnd","nativeSrc":"8495:6:24","nodeType":"YulIdentifier","src":"8495:6:24"}],"functionName":{"name":"lt","nativeSrc":"8487:2:24","nodeType":"YulIdentifier","src":"8487:2:24"},"nativeSrc":"8487:15:24","nodeType":"YulFunctionCall","src":"8487:15:24"},"nativeSrc":"8461:220:24","nodeType":"YulForLoop","post":{"nativeSrc":"8503:25:24","nodeType":"YulBlock","src":"8503:25:24","statements":[{"nativeSrc":"8505:21:24","nodeType":"YulAssignment","src":"8505:21:24","value":{"arguments":[{"name":"src","nativeSrc":"8516:3:24","nodeType":"YulIdentifier","src":"8516:3:24"},{"kind":"number","nativeSrc":"8521:4:24","nodeType":"YulLiteral","src":"8521:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8512:3:24","nodeType":"YulIdentifier","src":"8512:3:24"},"nativeSrc":"8512:14:24","nodeType":"YulFunctionCall","src":"8512:14:24"},"variableNames":[{"name":"src","nativeSrc":"8505:3:24","nodeType":"YulIdentifier","src":"8505:3:24"}]}]},"pre":{"nativeSrc":"8465:21:24","nodeType":"YulBlock","src":"8465:21:24","statements":[{"nativeSrc":"8467:17:24","nodeType":"YulVariableDeclaration","src":"8467:17:24","value":{"name":"offset","nativeSrc":"8478:6:24","nodeType":"YulIdentifier","src":"8478:6:24"},"variables":[{"name":"src","nativeSrc":"8471:3:24","nodeType":"YulTypedName","src":"8471:3:24","type":""}]}]},"src":"8461:220:24"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7977:710:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8049:6:24","nodeType":"YulTypedName","src":"8049:6:24","type":""},{"name":"length","nativeSrc":"8057:6:24","nodeType":"YulTypedName","src":"8057:6:24","type":""},{"name":"end","nativeSrc":"8065:3:24","nodeType":"YulTypedName","src":"8065:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8073:5:24","nodeType":"YulTypedName","src":"8073:5:24","type":""}],"src":"7977:710:24"},{"body":{"nativeSrc":"8787:293:24","nodeType":"YulBlock","src":"8787:293:24","statements":[{"body":{"nativeSrc":"8836:83:24","nodeType":"YulBlock","src":"8836:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8838:77:24","nodeType":"YulIdentifier","src":"8838:77:24"},"nativeSrc":"8838:79:24","nodeType":"YulFunctionCall","src":"8838:79:24"},"nativeSrc":"8838:79:24","nodeType":"YulExpressionStatement","src":"8838:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8815:6:24","nodeType":"YulIdentifier","src":"8815:6:24"},{"kind":"number","nativeSrc":"8823:4:24","nodeType":"YulLiteral","src":"8823:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8811:3:24","nodeType":"YulIdentifier","src":"8811:3:24"},"nativeSrc":"8811:17:24","nodeType":"YulFunctionCall","src":"8811:17:24"},{"name":"end","nativeSrc":"8830:3:24","nodeType":"YulIdentifier","src":"8830:3:24"}],"functionName":{"name":"slt","nativeSrc":"8807:3:24","nodeType":"YulIdentifier","src":"8807:3:24"},"nativeSrc":"8807:27:24","nodeType":"YulFunctionCall","src":"8807:27:24"}],"functionName":{"name":"iszero","nativeSrc":"8800:6:24","nodeType":"YulIdentifier","src":"8800:6:24"},"nativeSrc":"8800:35:24","nodeType":"YulFunctionCall","src":"8800:35:24"},"nativeSrc":"8797:122:24","nodeType":"YulIf","src":"8797:122:24"},{"nativeSrc":"8928:34:24","nodeType":"YulVariableDeclaration","src":"8928:34:24","value":{"arguments":[{"name":"offset","nativeSrc":"8955:6:24","nodeType":"YulIdentifier","src":"8955:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"8942:12:24","nodeType":"YulIdentifier","src":"8942:12:24"},"nativeSrc":"8942:20:24","nodeType":"YulFunctionCall","src":"8942:20:24"},"variables":[{"name":"length","nativeSrc":"8932:6:24","nodeType":"YulTypedName","src":"8932:6:24","type":""}]},{"nativeSrc":"8971:103:24","nodeType":"YulAssignment","src":"8971:103:24","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9047:6:24","nodeType":"YulIdentifier","src":"9047:6:24"},{"kind":"number","nativeSrc":"9055:4:24","nodeType":"YulLiteral","src":"9055:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9043:3:24","nodeType":"YulIdentifier","src":"9043:3:24"},"nativeSrc":"9043:17:24","nodeType":"YulFunctionCall","src":"9043:17:24"},{"name":"length","nativeSrc":"9062:6:24","nodeType":"YulIdentifier","src":"9062:6:24"},{"name":"end","nativeSrc":"9070:3:24","nodeType":"YulIdentifier","src":"9070:3:24"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8980:62:24","nodeType":"YulIdentifier","src":"8980:62:24"},"nativeSrc":"8980:94:24","nodeType":"YulFunctionCall","src":"8980:94:24"},"variableNames":[{"name":"array","nativeSrc":"8971:5:24","nodeType":"YulIdentifier","src":"8971:5:24"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8710:370:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8765:6:24","nodeType":"YulTypedName","src":"8765:6:24","type":""},{"name":"end","nativeSrc":"8773:3:24","nodeType":"YulTypedName","src":"8773:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8781:5:24","nodeType":"YulTypedName","src":"8781:5:24","type":""}],"src":"8710:370:24"},{"body":{"nativeSrc":"9152:241:24","nodeType":"YulBlock","src":"9152:241:24","statements":[{"body":{"nativeSrc":"9257:22:24","nodeType":"YulBlock","src":"9257:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9259:16:24","nodeType":"YulIdentifier","src":"9259:16:24"},"nativeSrc":"9259:18:24","nodeType":"YulFunctionCall","src":"9259:18:24"},"nativeSrc":"9259:18:24","nodeType":"YulExpressionStatement","src":"9259:18:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9229:6:24","nodeType":"YulIdentifier","src":"9229:6:24"},{"kind":"number","nativeSrc":"9237:18:24","nodeType":"YulLiteral","src":"9237:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9226:2:24","nodeType":"YulIdentifier","src":"9226:2:24"},"nativeSrc":"9226:30:24","nodeType":"YulFunctionCall","src":"9226:30:24"},"nativeSrc":"9223:56:24","nodeType":"YulIf","src":"9223:56:24"},{"nativeSrc":"9289:37:24","nodeType":"YulAssignment","src":"9289:37:24","value":{"arguments":[{"name":"length","nativeSrc":"9319:6:24","nodeType":"YulIdentifier","src":"9319:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9297:21:24","nodeType":"YulIdentifier","src":"9297:21:24"},"nativeSrc":"9297:29:24","nodeType":"YulFunctionCall","src":"9297:29:24"},"variableNames":[{"name":"size","nativeSrc":"9289:4:24","nodeType":"YulIdentifier","src":"9289:4:24"}]},{"nativeSrc":"9363:23:24","nodeType":"YulAssignment","src":"9363:23:24","value":{"arguments":[{"name":"size","nativeSrc":"9375:4:24","nodeType":"YulIdentifier","src":"9375:4:24"},{"kind":"number","nativeSrc":"9381:4:24","nodeType":"YulLiteral","src":"9381:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9371:3:24","nodeType":"YulIdentifier","src":"9371:3:24"},"nativeSrc":"9371:15:24","nodeType":"YulFunctionCall","src":"9371:15:24"},"variableNames":[{"name":"size","nativeSrc":"9363:4:24","nodeType":"YulIdentifier","src":"9363:4:24"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9086:307:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"9136:6:24","nodeType":"YulTypedName","src":"9136:6:24","type":""}],"returnVariables":[{"name":"size","nativeSrc":"9147:4:24","nodeType":"YulTypedName","src":"9147:4:24","type":""}],"src":"9086:307:24"},{"body":{"nativeSrc":"9482:340:24","nodeType":"YulBlock","src":"9482:340:24","statements":[{"nativeSrc":"9492:74:24","nodeType":"YulAssignment","src":"9492:74:24","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"9558:6:24","nodeType":"YulIdentifier","src":"9558:6:24"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9517:40:24","nodeType":"YulIdentifier","src":"9517:40:24"},"nativeSrc":"9517:48:24","nodeType":"YulFunctionCall","src":"9517:48:24"}],"functionName":{"name":"allocate_memory","nativeSrc":"9501:15:24","nodeType":"YulIdentifier","src":"9501:15:24"},"nativeSrc":"9501:65:24","nodeType":"YulFunctionCall","src":"9501:65:24"},"variableNames":[{"name":"array","nativeSrc":"9492:5:24","nodeType":"YulIdentifier","src":"9492:5:24"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"9582:5:24","nodeType":"YulIdentifier","src":"9582:5:24"},{"name":"length","nativeSrc":"9589:6:24","nodeType":"YulIdentifier","src":"9589:6:24"}],"functionName":{"name":"mstore","nativeSrc":"9575:6:24","nodeType":"YulIdentifier","src":"9575:6:24"},"nativeSrc":"9575:21:24","nodeType":"YulFunctionCall","src":"9575:21:24"},"nativeSrc":"9575:21:24","nodeType":"YulExpressionStatement","src":"9575:21:24"},{"nativeSrc":"9605:27:24","nodeType":"YulVariableDeclaration","src":"9605:27:24","value":{"arguments":[{"name":"array","nativeSrc":"9620:5:24","nodeType":"YulIdentifier","src":"9620:5:24"},{"kind":"number","nativeSrc":"9627:4:24","nodeType":"YulLiteral","src":"9627:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9616:3:24","nodeType":"YulIdentifier","src":"9616:3:24"},"nativeSrc":"9616:16:24","nodeType":"YulFunctionCall","src":"9616:16:24"},"variables":[{"name":"dst","nativeSrc":"9609:3:24","nodeType":"YulTypedName","src":"9609:3:24","type":""}]},{"body":{"nativeSrc":"9670:83:24","nodeType":"YulBlock","src":"9670:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"9672:77:24","nodeType":"YulIdentifier","src":"9672:77:24"},"nativeSrc":"9672:79:24","nodeType":"YulFunctionCall","src":"9672:79:24"},"nativeSrc":"9672:79:24","nodeType":"YulExpressionStatement","src":"9672:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9651:3:24","nodeType":"YulIdentifier","src":"9651:3:24"},{"name":"length","nativeSrc":"9656:6:24","nodeType":"YulIdentifier","src":"9656:6:24"}],"functionName":{"name":"add","nativeSrc":"9647:3:24","nodeType":"YulIdentifier","src":"9647:3:24"},"nativeSrc":"9647:16:24","nodeType":"YulFunctionCall","src":"9647:16:24"},{"name":"end","nativeSrc":"9665:3:24","nodeType":"YulIdentifier","src":"9665:3:24"}],"functionName":{"name":"gt","nativeSrc":"9644:2:24","nodeType":"YulIdentifier","src":"9644:2:24"},"nativeSrc":"9644:25:24","nodeType":"YulFunctionCall","src":"9644:25:24"},"nativeSrc":"9641:112:24","nodeType":"YulIf","src":"9641:112:24"},{"expression":{"arguments":[{"name":"src","nativeSrc":"9799:3:24","nodeType":"YulIdentifier","src":"9799:3:24"},{"name":"dst","nativeSrc":"9804:3:24","nodeType":"YulIdentifier","src":"9804:3:24"},{"name":"length","nativeSrc":"9809:6:24","nodeType":"YulIdentifier","src":"9809:6:24"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9762:36:24","nodeType":"YulIdentifier","src":"9762:36:24"},"nativeSrc":"9762:54:24","nodeType":"YulFunctionCall","src":"9762:54:24"},"nativeSrc":"9762:54:24","nodeType":"YulExpressionStatement","src":"9762:54:24"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9399:423:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9455:3:24","nodeType":"YulTypedName","src":"9455:3:24","type":""},{"name":"length","nativeSrc":"9460:6:24","nodeType":"YulTypedName","src":"9460:6:24","type":""},{"name":"end","nativeSrc":"9468:3:24","nodeType":"YulTypedName","src":"9468:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9476:5:24","nodeType":"YulTypedName","src":"9476:5:24","type":""}],"src":"9399:423:24"},{"body":{"nativeSrc":"9902:277:24","nodeType":"YulBlock","src":"9902:277:24","statements":[{"body":{"nativeSrc":"9951:83:24","nodeType":"YulBlock","src":"9951:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9953:77:24","nodeType":"YulIdentifier","src":"9953:77:24"},"nativeSrc":"9953:79:24","nodeType":"YulFunctionCall","src":"9953:79:24"},"nativeSrc":"9953:79:24","nodeType":"YulExpressionStatement","src":"9953:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9930:6:24","nodeType":"YulIdentifier","src":"9930:6:24"},{"kind":"number","nativeSrc":"9938:4:24","nodeType":"YulLiteral","src":"9938:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9926:3:24","nodeType":"YulIdentifier","src":"9926:3:24"},"nativeSrc":"9926:17:24","nodeType":"YulFunctionCall","src":"9926:17:24"},{"name":"end","nativeSrc":"9945:3:24","nodeType":"YulIdentifier","src":"9945:3:24"}],"functionName":{"name":"slt","nativeSrc":"9922:3:24","nodeType":"YulIdentifier","src":"9922:3:24"},"nativeSrc":"9922:27:24","nodeType":"YulFunctionCall","src":"9922:27:24"}],"functionName":{"name":"iszero","nativeSrc":"9915:6:24","nodeType":"YulIdentifier","src":"9915:6:24"},"nativeSrc":"9915:35:24","nodeType":"YulFunctionCall","src":"9915:35:24"},"nativeSrc":"9912:122:24","nodeType":"YulIf","src":"9912:122:24"},{"nativeSrc":"10043:34:24","nodeType":"YulVariableDeclaration","src":"10043:34:24","value":{"arguments":[{"name":"offset","nativeSrc":"10070:6:24","nodeType":"YulIdentifier","src":"10070:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"10057:12:24","nodeType":"YulIdentifier","src":"10057:12:24"},"nativeSrc":"10057:20:24","nodeType":"YulFunctionCall","src":"10057:20:24"},"variables":[{"name":"length","nativeSrc":"10047:6:24","nodeType":"YulTypedName","src":"10047:6:24","type":""}]},{"nativeSrc":"10086:87:24","nodeType":"YulAssignment","src":"10086:87:24","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10146:6:24","nodeType":"YulIdentifier","src":"10146:6:24"},{"kind":"number","nativeSrc":"10154:4:24","nodeType":"YulLiteral","src":"10154:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10142:3:24","nodeType":"YulIdentifier","src":"10142:3:24"},"nativeSrc":"10142:17:24","nodeType":"YulFunctionCall","src":"10142:17:24"},{"name":"length","nativeSrc":"10161:6:24","nodeType":"YulIdentifier","src":"10161:6:24"},{"name":"end","nativeSrc":"10169:3:24","nodeType":"YulIdentifier","src":"10169:3:24"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"10095:46:24","nodeType":"YulIdentifier","src":"10095:46:24"},"nativeSrc":"10095:78:24","nodeType":"YulFunctionCall","src":"10095:78:24"},"variableNames":[{"name":"array","nativeSrc":"10086:5:24","nodeType":"YulIdentifier","src":"10086:5:24"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9841:338:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9880:6:24","nodeType":"YulTypedName","src":"9880:6:24","type":""},{"name":"end","nativeSrc":"9888:3:24","nodeType":"YulTypedName","src":"9888:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9896:5:24","nodeType":"YulTypedName","src":"9896:5:24","type":""}],"src":"9841:338:24"},{"body":{"nativeSrc":"10361:1187:24","nodeType":"YulBlock","src":"10361:1187:24","statements":[{"body":{"nativeSrc":"10408:83:24","nodeType":"YulBlock","src":"10408:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10410:77:24","nodeType":"YulIdentifier","src":"10410:77:24"},"nativeSrc":"10410:79:24","nodeType":"YulFunctionCall","src":"10410:79:24"},"nativeSrc":"10410:79:24","nodeType":"YulExpressionStatement","src":"10410:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10382:7:24","nodeType":"YulIdentifier","src":"10382:7:24"},{"name":"headStart","nativeSrc":"10391:9:24","nodeType":"YulIdentifier","src":"10391:9:24"}],"functionName":{"name":"sub","nativeSrc":"10378:3:24","nodeType":"YulIdentifier","src":"10378:3:24"},"nativeSrc":"10378:23:24","nodeType":"YulFunctionCall","src":"10378:23:24"},{"kind":"number","nativeSrc":"10403:3:24","nodeType":"YulLiteral","src":"10403:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"10374:3:24","nodeType":"YulIdentifier","src":"10374:3:24"},"nativeSrc":"10374:33:24","nodeType":"YulFunctionCall","src":"10374:33:24"},"nativeSrc":"10371:120:24","nodeType":"YulIf","src":"10371:120:24"},{"nativeSrc":"10501:117:24","nodeType":"YulBlock","src":"10501:117:24","statements":[{"nativeSrc":"10516:15:24","nodeType":"YulVariableDeclaration","src":"10516:15:24","value":{"kind":"number","nativeSrc":"10530:1:24","nodeType":"YulLiteral","src":"10530:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10520:6:24","nodeType":"YulTypedName","src":"10520:6:24","type":""}]},{"nativeSrc":"10545:63:24","nodeType":"YulAssignment","src":"10545:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10580:9:24","nodeType":"YulIdentifier","src":"10580:9:24"},{"name":"offset","nativeSrc":"10591:6:24","nodeType":"YulIdentifier","src":"10591:6:24"}],"functionName":{"name":"add","nativeSrc":"10576:3:24","nodeType":"YulIdentifier","src":"10576:3:24"},"nativeSrc":"10576:22:24","nodeType":"YulFunctionCall","src":"10576:22:24"},{"name":"dataEnd","nativeSrc":"10600:7:24","nodeType":"YulIdentifier","src":"10600:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10555:20:24","nodeType":"YulIdentifier","src":"10555:20:24"},"nativeSrc":"10555:53:24","nodeType":"YulFunctionCall","src":"10555:53:24"},"variableNames":[{"name":"value0","nativeSrc":"10545:6:24","nodeType":"YulIdentifier","src":"10545:6:24"}]}]},{"nativeSrc":"10628:303:24","nodeType":"YulBlock","src":"10628:303:24","statements":[{"nativeSrc":"10643:46:24","nodeType":"YulVariableDeclaration","src":"10643:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10674:9:24","nodeType":"YulIdentifier","src":"10674:9:24"},{"kind":"number","nativeSrc":"10685:2:24","nodeType":"YulLiteral","src":"10685:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10670:3:24","nodeType":"YulIdentifier","src":"10670:3:24"},"nativeSrc":"10670:18:24","nodeType":"YulFunctionCall","src":"10670:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"10657:12:24","nodeType":"YulIdentifier","src":"10657:12:24"},"nativeSrc":"10657:32:24","nodeType":"YulFunctionCall","src":"10657:32:24"},"variables":[{"name":"offset","nativeSrc":"10647:6:24","nodeType":"YulTypedName","src":"10647:6:24","type":""}]},{"body":{"nativeSrc":"10736:83:24","nodeType":"YulBlock","src":"10736:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10738:77:24","nodeType":"YulIdentifier","src":"10738:77:24"},"nativeSrc":"10738:79:24","nodeType":"YulFunctionCall","src":"10738:79:24"},"nativeSrc":"10738:79:24","nodeType":"YulExpressionStatement","src":"10738:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10708:6:24","nodeType":"YulIdentifier","src":"10708:6:24"},{"kind":"number","nativeSrc":"10716:18:24","nodeType":"YulLiteral","src":"10716:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10705:2:24","nodeType":"YulIdentifier","src":"10705:2:24"},"nativeSrc":"10705:30:24","nodeType":"YulFunctionCall","src":"10705:30:24"},"nativeSrc":"10702:117:24","nodeType":"YulIf","src":"10702:117:24"},{"nativeSrc":"10833:88:24","nodeType":"YulAssignment","src":"10833:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10893:9:24","nodeType":"YulIdentifier","src":"10893:9:24"},{"name":"offset","nativeSrc":"10904:6:24","nodeType":"YulIdentifier","src":"10904:6:24"}],"functionName":{"name":"add","nativeSrc":"10889:3:24","nodeType":"YulIdentifier","src":"10889:3:24"},"nativeSrc":"10889:22:24","nodeType":"YulFunctionCall","src":"10889:22:24"},{"name":"dataEnd","nativeSrc":"10913:7:24","nodeType":"YulIdentifier","src":"10913:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10843:45:24","nodeType":"YulIdentifier","src":"10843:45:24"},"nativeSrc":"10843:78:24","nodeType":"YulFunctionCall","src":"10843:78:24"},"variableNames":[{"name":"value1","nativeSrc":"10833:6:24","nodeType":"YulIdentifier","src":"10833:6:24"}]}]},{"nativeSrc":"10941:303:24","nodeType":"YulBlock","src":"10941:303:24","statements":[{"nativeSrc":"10956:46:24","nodeType":"YulVariableDeclaration","src":"10956:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10987:9:24","nodeType":"YulIdentifier","src":"10987:9:24"},{"kind":"number","nativeSrc":"10998:2:24","nodeType":"YulLiteral","src":"10998:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10983:3:24","nodeType":"YulIdentifier","src":"10983:3:24"},"nativeSrc":"10983:18:24","nodeType":"YulFunctionCall","src":"10983:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"10970:12:24","nodeType":"YulIdentifier","src":"10970:12:24"},"nativeSrc":"10970:32:24","nodeType":"YulFunctionCall","src":"10970:32:24"},"variables":[{"name":"offset","nativeSrc":"10960:6:24","nodeType":"YulTypedName","src":"10960:6:24","type":""}]},{"body":{"nativeSrc":"11049:83:24","nodeType":"YulBlock","src":"11049:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11051:77:24","nodeType":"YulIdentifier","src":"11051:77:24"},"nativeSrc":"11051:79:24","nodeType":"YulFunctionCall","src":"11051:79:24"},"nativeSrc":"11051:79:24","nodeType":"YulExpressionStatement","src":"11051:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11021:6:24","nodeType":"YulIdentifier","src":"11021:6:24"},{"kind":"number","nativeSrc":"11029:18:24","nodeType":"YulLiteral","src":"11029:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11018:2:24","nodeType":"YulIdentifier","src":"11018:2:24"},"nativeSrc":"11018:30:24","nodeType":"YulFunctionCall","src":"11018:30:24"},"nativeSrc":"11015:117:24","nodeType":"YulIf","src":"11015:117:24"},{"nativeSrc":"11146:88:24","nodeType":"YulAssignment","src":"11146:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11206:9:24","nodeType":"YulIdentifier","src":"11206:9:24"},{"name":"offset","nativeSrc":"11217:6:24","nodeType":"YulIdentifier","src":"11217:6:24"}],"functionName":{"name":"add","nativeSrc":"11202:3:24","nodeType":"YulIdentifier","src":"11202:3:24"},"nativeSrc":"11202:22:24","nodeType":"YulFunctionCall","src":"11202:22:24"},{"name":"dataEnd","nativeSrc":"11226:7:24","nodeType":"YulIdentifier","src":"11226:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11156:45:24","nodeType":"YulIdentifier","src":"11156:45:24"},"nativeSrc":"11156:78:24","nodeType":"YulFunctionCall","src":"11156:78:24"},"variableNames":[{"name":"value2","nativeSrc":"11146:6:24","nodeType":"YulIdentifier","src":"11146:6:24"}]}]},{"nativeSrc":"11254:287:24","nodeType":"YulBlock","src":"11254:287:24","statements":[{"nativeSrc":"11269:46:24","nodeType":"YulVariableDeclaration","src":"11269:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11300:9:24","nodeType":"YulIdentifier","src":"11300:9:24"},{"kind":"number","nativeSrc":"11311:2:24","nodeType":"YulLiteral","src":"11311:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11296:3:24","nodeType":"YulIdentifier","src":"11296:3:24"},"nativeSrc":"11296:18:24","nodeType":"YulFunctionCall","src":"11296:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"11283:12:24","nodeType":"YulIdentifier","src":"11283:12:24"},"nativeSrc":"11283:32:24","nodeType":"YulFunctionCall","src":"11283:32:24"},"variables":[{"name":"offset","nativeSrc":"11273:6:24","nodeType":"YulTypedName","src":"11273:6:24","type":""}]},{"body":{"nativeSrc":"11362:83:24","nodeType":"YulBlock","src":"11362:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11364:77:24","nodeType":"YulIdentifier","src":"11364:77:24"},"nativeSrc":"11364:79:24","nodeType":"YulFunctionCall","src":"11364:79:24"},"nativeSrc":"11364:79:24","nodeType":"YulExpressionStatement","src":"11364:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11334:6:24","nodeType":"YulIdentifier","src":"11334:6:24"},{"kind":"number","nativeSrc":"11342:18:24","nodeType":"YulLiteral","src":"11342:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11331:2:24","nodeType":"YulIdentifier","src":"11331:2:24"},"nativeSrc":"11331:30:24","nodeType":"YulFunctionCall","src":"11331:30:24"},"nativeSrc":"11328:117:24","nodeType":"YulIf","src":"11328:117:24"},{"nativeSrc":"11459:72:24","nodeType":"YulAssignment","src":"11459:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11503:9:24","nodeType":"YulIdentifier","src":"11503:9:24"},{"name":"offset","nativeSrc":"11514:6:24","nodeType":"YulIdentifier","src":"11514:6:24"}],"functionName":{"name":"add","nativeSrc":"11499:3:24","nodeType":"YulIdentifier","src":"11499:3:24"},"nativeSrc":"11499:22:24","nodeType":"YulFunctionCall","src":"11499:22:24"},{"name":"dataEnd","nativeSrc":"11523:7:24","nodeType":"YulIdentifier","src":"11523:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11469:29:24","nodeType":"YulIdentifier","src":"11469:29:24"},"nativeSrc":"11469:62:24","nodeType":"YulFunctionCall","src":"11469:62:24"},"variableNames":[{"name":"value3","nativeSrc":"11459:6:24","nodeType":"YulIdentifier","src":"11459:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"10185:1363:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10307:9:24","nodeType":"YulTypedName","src":"10307:9:24","type":""},{"name":"dataEnd","nativeSrc":"10318:7:24","nodeType":"YulTypedName","src":"10318:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10330:6:24","nodeType":"YulTypedName","src":"10330:6:24","type":""},{"name":"value1","nativeSrc":"10338:6:24","nodeType":"YulTypedName","src":"10338:6:24","type":""},{"name":"value2","nativeSrc":"10346:6:24","nodeType":"YulTypedName","src":"10346:6:24","type":""},{"name":"value3","nativeSrc":"10354:6:24","nodeType":"YulTypedName","src":"10354:6:24","type":""}],"src":"10185:1363:24"},{"body":{"nativeSrc":"11599:32:24","nodeType":"YulBlock","src":"11599:32:24","statements":[{"nativeSrc":"11609:16:24","nodeType":"YulAssignment","src":"11609:16:24","value":{"name":"value","nativeSrc":"11620:5:24","nodeType":"YulIdentifier","src":"11620:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"11609:7:24","nodeType":"YulIdentifier","src":"11609:7:24"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"11554:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11581:5:24","nodeType":"YulTypedName","src":"11581:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"11591:7:24","nodeType":"YulTypedName","src":"11591:7:24","type":""}],"src":"11554:77:24"},{"body":{"nativeSrc":"11680:79:24","nodeType":"YulBlock","src":"11680:79:24","statements":[{"body":{"nativeSrc":"11737:16:24","nodeType":"YulBlock","src":"11737:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11746:1:24","nodeType":"YulLiteral","src":"11746:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"11749:1:24","nodeType":"YulLiteral","src":"11749:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11739:6:24","nodeType":"YulIdentifier","src":"11739:6:24"},"nativeSrc":"11739:12:24","nodeType":"YulFunctionCall","src":"11739:12:24"},"nativeSrc":"11739:12:24","nodeType":"YulExpressionStatement","src":"11739:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11703:5:24","nodeType":"YulIdentifier","src":"11703:5:24"},{"arguments":[{"name":"value","nativeSrc":"11728:5:24","nodeType":"YulIdentifier","src":"11728:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11710:17:24","nodeType":"YulIdentifier","src":"11710:17:24"},"nativeSrc":"11710:24:24","nodeType":"YulFunctionCall","src":"11710:24:24"}],"functionName":{"name":"eq","nativeSrc":"11700:2:24","nodeType":"YulIdentifier","src":"11700:2:24"},"nativeSrc":"11700:35:24","nodeType":"YulFunctionCall","src":"11700:35:24"}],"functionName":{"name":"iszero","nativeSrc":"11693:6:24","nodeType":"YulIdentifier","src":"11693:6:24"},"nativeSrc":"11693:43:24","nodeType":"YulFunctionCall","src":"11693:43:24"},"nativeSrc":"11690:63:24","nodeType":"YulIf","src":"11690:63:24"}]},"name":"validator_revert_t_bytes32","nativeSrc":"11637:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11673:5:24","nodeType":"YulTypedName","src":"11673:5:24","type":""}],"src":"11637:122:24"},{"body":{"nativeSrc":"11817:87:24","nodeType":"YulBlock","src":"11817:87:24","statements":[{"nativeSrc":"11827:29:24","nodeType":"YulAssignment","src":"11827:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"11849:6:24","nodeType":"YulIdentifier","src":"11849:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"11836:12:24","nodeType":"YulIdentifier","src":"11836:12:24"},"nativeSrc":"11836:20:24","nodeType":"YulFunctionCall","src":"11836:20:24"},"variableNames":[{"name":"value","nativeSrc":"11827:5:24","nodeType":"YulIdentifier","src":"11827:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11892:5:24","nodeType":"YulIdentifier","src":"11892:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"11865:26:24","nodeType":"YulIdentifier","src":"11865:26:24"},"nativeSrc":"11865:33:24","nodeType":"YulFunctionCall","src":"11865:33:24"},"nativeSrc":"11865:33:24","nodeType":"YulExpressionStatement","src":"11865:33:24"}]},"name":"abi_decode_t_bytes32","nativeSrc":"11765:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11795:6:24","nodeType":"YulTypedName","src":"11795:6:24","type":""},{"name":"end","nativeSrc":"11803:3:24","nodeType":"YulTypedName","src":"11803:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11811:5:24","nodeType":"YulTypedName","src":"11811:5:24","type":""}],"src":"11765:139:24"},{"body":{"nativeSrc":"11976:263:24","nodeType":"YulBlock","src":"11976:263:24","statements":[{"body":{"nativeSrc":"12022:83:24","nodeType":"YulBlock","src":"12022:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12024:77:24","nodeType":"YulIdentifier","src":"12024:77:24"},"nativeSrc":"12024:79:24","nodeType":"YulFunctionCall","src":"12024:79:24"},"nativeSrc":"12024:79:24","nodeType":"YulExpressionStatement","src":"12024:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11997:7:24","nodeType":"YulIdentifier","src":"11997:7:24"},{"name":"headStart","nativeSrc":"12006:9:24","nodeType":"YulIdentifier","src":"12006:9:24"}],"functionName":{"name":"sub","nativeSrc":"11993:3:24","nodeType":"YulIdentifier","src":"11993:3:24"},"nativeSrc":"11993:23:24","nodeType":"YulFunctionCall","src":"11993:23:24"},{"kind":"number","nativeSrc":"12018:2:24","nodeType":"YulLiteral","src":"12018:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11989:3:24","nodeType":"YulIdentifier","src":"11989:3:24"},"nativeSrc":"11989:32:24","nodeType":"YulFunctionCall","src":"11989:32:24"},"nativeSrc":"11986:119:24","nodeType":"YulIf","src":"11986:119:24"},{"nativeSrc":"12115:117:24","nodeType":"YulBlock","src":"12115:117:24","statements":[{"nativeSrc":"12130:15:24","nodeType":"YulVariableDeclaration","src":"12130:15:24","value":{"kind":"number","nativeSrc":"12144:1:24","nodeType":"YulLiteral","src":"12144:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12134:6:24","nodeType":"YulTypedName","src":"12134:6:24","type":""}]},{"nativeSrc":"12159:63:24","nodeType":"YulAssignment","src":"12159:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12194:9:24","nodeType":"YulIdentifier","src":"12194:9:24"},{"name":"offset","nativeSrc":"12205:6:24","nodeType":"YulIdentifier","src":"12205:6:24"}],"functionName":{"name":"add","nativeSrc":"12190:3:24","nodeType":"YulIdentifier","src":"12190:3:24"},"nativeSrc":"12190:22:24","nodeType":"YulFunctionCall","src":"12190:22:24"},{"name":"dataEnd","nativeSrc":"12214:7:24","nodeType":"YulIdentifier","src":"12214:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"12169:20:24","nodeType":"YulIdentifier","src":"12169:20:24"},"nativeSrc":"12169:53:24","nodeType":"YulFunctionCall","src":"12169:53:24"},"variableNames":[{"name":"value0","nativeSrc":"12159:6:24","nodeType":"YulIdentifier","src":"12159:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"11910:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11946:9:24","nodeType":"YulTypedName","src":"11946:9:24","type":""},{"name":"dataEnd","nativeSrc":"11957:7:24","nodeType":"YulTypedName","src":"11957:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11969:6:24","nodeType":"YulTypedName","src":"11969:6:24","type":""}],"src":"11910:329:24"},{"body":{"nativeSrc":"12310:53:24","nodeType":"YulBlock","src":"12310:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12327:3:24","nodeType":"YulIdentifier","src":"12327:3:24"},{"arguments":[{"name":"value","nativeSrc":"12350:5:24","nodeType":"YulIdentifier","src":"12350:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12332:17:24","nodeType":"YulIdentifier","src":"12332:17:24"},"nativeSrc":"12332:24:24","nodeType":"YulFunctionCall","src":"12332:24:24"}],"functionName":{"name":"mstore","nativeSrc":"12320:6:24","nodeType":"YulIdentifier","src":"12320:6:24"},"nativeSrc":"12320:37:24","nodeType":"YulFunctionCall","src":"12320:37:24"},"nativeSrc":"12320:37:24","nodeType":"YulExpressionStatement","src":"12320:37:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12245:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12298:5:24","nodeType":"YulTypedName","src":"12298:5:24","type":""},{"name":"pos","nativeSrc":"12305:3:24","nodeType":"YulTypedName","src":"12305:3:24","type":""}],"src":"12245:118:24"},{"body":{"nativeSrc":"12467:124:24","nodeType":"YulBlock","src":"12467:124:24","statements":[{"nativeSrc":"12477:26:24","nodeType":"YulAssignment","src":"12477:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"12489:9:24","nodeType":"YulIdentifier","src":"12489:9:24"},{"kind":"number","nativeSrc":"12500:2:24","nodeType":"YulLiteral","src":"12500:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12485:3:24","nodeType":"YulIdentifier","src":"12485:3:24"},"nativeSrc":"12485:18:24","nodeType":"YulFunctionCall","src":"12485:18:24"},"variableNames":[{"name":"tail","nativeSrc":"12477:4:24","nodeType":"YulIdentifier","src":"12477:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12557:6:24","nodeType":"YulIdentifier","src":"12557:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12570:9:24","nodeType":"YulIdentifier","src":"12570:9:24"},{"kind":"number","nativeSrc":"12581:1:24","nodeType":"YulLiteral","src":"12581:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12566:3:24","nodeType":"YulIdentifier","src":"12566:3:24"},"nativeSrc":"12566:17:24","nodeType":"YulFunctionCall","src":"12566:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12513:43:24","nodeType":"YulIdentifier","src":"12513:43:24"},"nativeSrc":"12513:71:24","nodeType":"YulFunctionCall","src":"12513:71:24"},"nativeSrc":"12513:71:24","nodeType":"YulExpressionStatement","src":"12513:71:24"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"12369:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12439:9:24","nodeType":"YulTypedName","src":"12439:9:24","type":""},{"name":"value0","nativeSrc":"12451:6:24","nodeType":"YulTypedName","src":"12451:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12462:4:24","nodeType":"YulTypedName","src":"12462:4:24","type":""}],"src":"12369:222:24"},{"body":{"nativeSrc":"12705:576:24","nodeType":"YulBlock","src":"12705:576:24","statements":[{"body":{"nativeSrc":"12751:83:24","nodeType":"YulBlock","src":"12751:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12753:77:24","nodeType":"YulIdentifier","src":"12753:77:24"},"nativeSrc":"12753:79:24","nodeType":"YulFunctionCall","src":"12753:79:24"},"nativeSrc":"12753:79:24","nodeType":"YulExpressionStatement","src":"12753:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12726:7:24","nodeType":"YulIdentifier","src":"12726:7:24"},{"name":"headStart","nativeSrc":"12735:9:24","nodeType":"YulIdentifier","src":"12735:9:24"}],"functionName":{"name":"sub","nativeSrc":"12722:3:24","nodeType":"YulIdentifier","src":"12722:3:24"},"nativeSrc":"12722:23:24","nodeType":"YulFunctionCall","src":"12722:23:24"},{"kind":"number","nativeSrc":"12747:2:24","nodeType":"YulLiteral","src":"12747:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12718:3:24","nodeType":"YulIdentifier","src":"12718:3:24"},"nativeSrc":"12718:32:24","nodeType":"YulFunctionCall","src":"12718:32:24"},"nativeSrc":"12715:119:24","nodeType":"YulIf","src":"12715:119:24"},{"nativeSrc":"12844:117:24","nodeType":"YulBlock","src":"12844:117:24","statements":[{"nativeSrc":"12859:15:24","nodeType":"YulVariableDeclaration","src":"12859:15:24","value":{"kind":"number","nativeSrc":"12873:1:24","nodeType":"YulLiteral","src":"12873:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12863:6:24","nodeType":"YulTypedName","src":"12863:6:24","type":""}]},{"nativeSrc":"12888:63:24","nodeType":"YulAssignment","src":"12888:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12923:9:24","nodeType":"YulIdentifier","src":"12923:9:24"},{"name":"offset","nativeSrc":"12934:6:24","nodeType":"YulIdentifier","src":"12934:6:24"}],"functionName":{"name":"add","nativeSrc":"12919:3:24","nodeType":"YulIdentifier","src":"12919:3:24"},"nativeSrc":"12919:22:24","nodeType":"YulFunctionCall","src":"12919:22:24"},{"name":"dataEnd","nativeSrc":"12943:7:24","nodeType":"YulIdentifier","src":"12943:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12898:20:24","nodeType":"YulIdentifier","src":"12898:20:24"},"nativeSrc":"12898:53:24","nodeType":"YulFunctionCall","src":"12898:53:24"},"variableNames":[{"name":"value0","nativeSrc":"12888:6:24","nodeType":"YulIdentifier","src":"12888:6:24"}]}]},{"nativeSrc":"12971:303:24","nodeType":"YulBlock","src":"12971:303:24","statements":[{"nativeSrc":"12986:46:24","nodeType":"YulVariableDeclaration","src":"12986:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13017:9:24","nodeType":"YulIdentifier","src":"13017:9:24"},{"kind":"number","nativeSrc":"13028:2:24","nodeType":"YulLiteral","src":"13028:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13013:3:24","nodeType":"YulIdentifier","src":"13013:3:24"},"nativeSrc":"13013:18:24","nodeType":"YulFunctionCall","src":"13013:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"13000:12:24","nodeType":"YulIdentifier","src":"13000:12:24"},"nativeSrc":"13000:32:24","nodeType":"YulFunctionCall","src":"13000:32:24"},"variables":[{"name":"offset","nativeSrc":"12990:6:24","nodeType":"YulTypedName","src":"12990:6:24","type":""}]},{"body":{"nativeSrc":"13079:83:24","nodeType":"YulBlock","src":"13079:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"13081:77:24","nodeType":"YulIdentifier","src":"13081:77:24"},"nativeSrc":"13081:79:24","nodeType":"YulFunctionCall","src":"13081:79:24"},"nativeSrc":"13081:79:24","nodeType":"YulExpressionStatement","src":"13081:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13051:6:24","nodeType":"YulIdentifier","src":"13051:6:24"},{"kind":"number","nativeSrc":"13059:18:24","nodeType":"YulLiteral","src":"13059:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13048:2:24","nodeType":"YulIdentifier","src":"13048:2:24"},"nativeSrc":"13048:30:24","nodeType":"YulFunctionCall","src":"13048:30:24"},"nativeSrc":"13045:117:24","nodeType":"YulIf","src":"13045:117:24"},{"nativeSrc":"13176:88:24","nodeType":"YulAssignment","src":"13176:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13236:9:24","nodeType":"YulIdentifier","src":"13236:9:24"},{"name":"offset","nativeSrc":"13247:6:24","nodeType":"YulIdentifier","src":"13247:6:24"}],"functionName":{"name":"add","nativeSrc":"13232:3:24","nodeType":"YulIdentifier","src":"13232:3:24"},"nativeSrc":"13232:22:24","nodeType":"YulFunctionCall","src":"13232:22:24"},{"name":"dataEnd","nativeSrc":"13256:7:24","nodeType":"YulIdentifier","src":"13256:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13186:45:24","nodeType":"YulIdentifier","src":"13186:45:24"},"nativeSrc":"13186:78:24","nodeType":"YulFunctionCall","src":"13186:78:24"},"variableNames":[{"name":"value1","nativeSrc":"13176:6:24","nodeType":"YulIdentifier","src":"13176:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12597:684:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12667:9:24","nodeType":"YulTypedName","src":"12667:9:24","type":""},{"name":"dataEnd","nativeSrc":"12678:7:24","nodeType":"YulTypedName","src":"12678:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12690:6:24","nodeType":"YulTypedName","src":"12690:6:24","type":""},{"name":"value1","nativeSrc":"12698:6:24","nodeType":"YulTypedName","src":"12698:6:24","type":""}],"src":"12597:684:24"},{"body":{"nativeSrc":"13361:40:24","nodeType":"YulBlock","src":"13361:40:24","statements":[{"nativeSrc":"13372:22:24","nodeType":"YulAssignment","src":"13372:22:24","value":{"arguments":[{"name":"value","nativeSrc":"13388:5:24","nodeType":"YulIdentifier","src":"13388:5:24"}],"functionName":{"name":"mload","nativeSrc":"13382:5:24","nodeType":"YulIdentifier","src":"13382:5:24"},"nativeSrc":"13382:12:24","nodeType":"YulFunctionCall","src":"13382:12:24"},"variableNames":[{"name":"length","nativeSrc":"13372:6:24","nodeType":"YulIdentifier","src":"13372:6:24"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13287:114:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13344:5:24","nodeType":"YulTypedName","src":"13344:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"13354:6:24","nodeType":"YulTypedName","src":"13354:6:24","type":""}],"src":"13287:114:24"},{"body":{"nativeSrc":"13518:73:24","nodeType":"YulBlock","src":"13518:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13535:3:24","nodeType":"YulIdentifier","src":"13535:3:24"},{"name":"length","nativeSrc":"13540:6:24","nodeType":"YulIdentifier","src":"13540:6:24"}],"functionName":{"name":"mstore","nativeSrc":"13528:6:24","nodeType":"YulIdentifier","src":"13528:6:24"},"nativeSrc":"13528:19:24","nodeType":"YulFunctionCall","src":"13528:19:24"},"nativeSrc":"13528:19:24","nodeType":"YulExpressionStatement","src":"13528:19:24"},{"nativeSrc":"13556:29:24","nodeType":"YulAssignment","src":"13556:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"13575:3:24","nodeType":"YulIdentifier","src":"13575:3:24"},{"kind":"number","nativeSrc":"13580:4:24","nodeType":"YulLiteral","src":"13580:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13571:3:24","nodeType":"YulIdentifier","src":"13571:3:24"},"nativeSrc":"13571:14:24","nodeType":"YulFunctionCall","src":"13571:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"13556:11:24","nodeType":"YulIdentifier","src":"13556:11:24"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"13407:184:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13490:3:24","nodeType":"YulTypedName","src":"13490:3:24","type":""},{"name":"length","nativeSrc":"13495:6:24","nodeType":"YulTypedName","src":"13495:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13506:11:24","nodeType":"YulTypedName","src":"13506:11:24","type":""}],"src":"13407:184:24"},{"body":{"nativeSrc":"13669:60:24","nodeType":"YulBlock","src":"13669:60:24","statements":[{"nativeSrc":"13679:11:24","nodeType":"YulAssignment","src":"13679:11:24","value":{"name":"ptr","nativeSrc":"13687:3:24","nodeType":"YulIdentifier","src":"13687:3:24"},"variableNames":[{"name":"data","nativeSrc":"13679:4:24","nodeType":"YulIdentifier","src":"13679:4:24"}]},{"nativeSrc":"13700:22:24","nodeType":"YulAssignment","src":"13700:22:24","value":{"arguments":[{"name":"ptr","nativeSrc":"13712:3:24","nodeType":"YulIdentifier","src":"13712:3:24"},{"kind":"number","nativeSrc":"13717:4:24","nodeType":"YulLiteral","src":"13717:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13708:3:24","nodeType":"YulIdentifier","src":"13708:3:24"},"nativeSrc":"13708:14:24","nodeType":"YulFunctionCall","src":"13708:14:24"},"variableNames":[{"name":"data","nativeSrc":"13700:4:24","nodeType":"YulIdentifier","src":"13700:4:24"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13597:132:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13656:3:24","nodeType":"YulTypedName","src":"13656:3:24","type":""}],"returnVariables":[{"name":"data","nativeSrc":"13664:4:24","nodeType":"YulTypedName","src":"13664:4:24","type":""}],"src":"13597:132:24"},{"body":{"nativeSrc":"13790:53:24","nodeType":"YulBlock","src":"13790:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13807:3:24","nodeType":"YulIdentifier","src":"13807:3:24"},{"arguments":[{"name":"value","nativeSrc":"13830:5:24","nodeType":"YulIdentifier","src":"13830:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13812:17:24","nodeType":"YulIdentifier","src":"13812:17:24"},"nativeSrc":"13812:24:24","nodeType":"YulFunctionCall","src":"13812:24:24"}],"functionName":{"name":"mstore","nativeSrc":"13800:6:24","nodeType":"YulIdentifier","src":"13800:6:24"},"nativeSrc":"13800:37:24","nodeType":"YulFunctionCall","src":"13800:37:24"},"nativeSrc":"13800:37:24","nodeType":"YulExpressionStatement","src":"13800:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"13735:108:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13778:5:24","nodeType":"YulTypedName","src":"13778:5:24","type":""},{"name":"pos","nativeSrc":"13785:3:24","nodeType":"YulTypedName","src":"13785:3:24","type":""}],"src":"13735:108:24"},{"body":{"nativeSrc":"13929:99:24","nodeType":"YulBlock","src":"13929:99:24","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"13973:6:24","nodeType":"YulIdentifier","src":"13973:6:24"},{"name":"pos","nativeSrc":"13981:3:24","nodeType":"YulIdentifier","src":"13981:3:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"13939:33:24","nodeType":"YulIdentifier","src":"13939:33:24"},"nativeSrc":"13939:46:24","nodeType":"YulFunctionCall","src":"13939:46:24"},"nativeSrc":"13939:46:24","nodeType":"YulExpressionStatement","src":"13939:46:24"},{"nativeSrc":"13994:28:24","nodeType":"YulAssignment","src":"13994:28:24","value":{"arguments":[{"name":"pos","nativeSrc":"14012:3:24","nodeType":"YulIdentifier","src":"14012:3:24"},{"kind":"number","nativeSrc":"14017:4:24","nodeType":"YulLiteral","src":"14017:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14008:3:24","nodeType":"YulIdentifier","src":"14008:3:24"},"nativeSrc":"14008:14:24","nodeType":"YulFunctionCall","src":"14008:14:24"},"variableNames":[{"name":"updatedPos","nativeSrc":"13994:10:24","nodeType":"YulIdentifier","src":"13994:10:24"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"13849:179:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"13902:6:24","nodeType":"YulTypedName","src":"13902:6:24","type":""},{"name":"pos","nativeSrc":"13910:3:24","nodeType":"YulTypedName","src":"13910:3:24","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"13918:10:24","nodeType":"YulTypedName","src":"13918:10:24","type":""}],"src":"13849:179:24"},{"body":{"nativeSrc":"14109:38:24","nodeType":"YulBlock","src":"14109:38:24","statements":[{"nativeSrc":"14119:22:24","nodeType":"YulAssignment","src":"14119:22:24","value":{"arguments":[{"name":"ptr","nativeSrc":"14131:3:24","nodeType":"YulIdentifier","src":"14131:3:24"},{"kind":"number","nativeSrc":"14136:4:24","nodeType":"YulLiteral","src":"14136:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14127:3:24","nodeType":"YulIdentifier","src":"14127:3:24"},"nativeSrc":"14127:14:24","nodeType":"YulFunctionCall","src":"14127:14:24"},"variableNames":[{"name":"next","nativeSrc":"14119:4:24","nodeType":"YulIdentifier","src":"14119:4:24"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14034:113:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14096:3:24","nodeType":"YulTypedName","src":"14096:3:24","type":""}],"returnVariables":[{"name":"next","nativeSrc":"14104:4:24","nodeType":"YulTypedName","src":"14104:4:24","type":""}],"src":"14034:113:24"},{"body":{"nativeSrc":"14307:608:24","nodeType":"YulBlock","src":"14307:608:24","statements":[{"nativeSrc":"14317:68:24","nodeType":"YulVariableDeclaration","src":"14317:68:24","value":{"arguments":[{"name":"value","nativeSrc":"14379:5:24","nodeType":"YulIdentifier","src":"14379:5:24"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14331:47:24","nodeType":"YulIdentifier","src":"14331:47:24"},"nativeSrc":"14331:54:24","nodeType":"YulFunctionCall","src":"14331:54:24"},"variables":[{"name":"length","nativeSrc":"14321:6:24","nodeType":"YulTypedName","src":"14321:6:24","type":""}]},{"nativeSrc":"14394:93:24","nodeType":"YulAssignment","src":"14394:93:24","value":{"arguments":[{"name":"pos","nativeSrc":"14475:3:24","nodeType":"YulIdentifier","src":"14475:3:24"},{"name":"length","nativeSrc":"14480:6:24","nodeType":"YulIdentifier","src":"14480:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14401:73:24","nodeType":"YulIdentifier","src":"14401:73:24"},"nativeSrc":"14401:86:24","nodeType":"YulFunctionCall","src":"14401:86:24"},"variableNames":[{"name":"pos","nativeSrc":"14394:3:24","nodeType":"YulIdentifier","src":"14394:3:24"}]},{"nativeSrc":"14496:71:24","nodeType":"YulVariableDeclaration","src":"14496:71:24","value":{"arguments":[{"name":"value","nativeSrc":"14561:5:24","nodeType":"YulIdentifier","src":"14561:5:24"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14511:49:24","nodeType":"YulIdentifier","src":"14511:49:24"},"nativeSrc":"14511:56:24","nodeType":"YulFunctionCall","src":"14511:56:24"},"variables":[{"name":"baseRef","nativeSrc":"14500:7:24","nodeType":"YulTypedName","src":"14500:7:24","type":""}]},{"nativeSrc":"14576:21:24","nodeType":"YulVariableDeclaration","src":"14576:21:24","value":{"name":"baseRef","nativeSrc":"14590:7:24","nodeType":"YulIdentifier","src":"14590:7:24"},"variables":[{"name":"srcPtr","nativeSrc":"14580:6:24","nodeType":"YulTypedName","src":"14580:6:24","type":""}]},{"body":{"nativeSrc":"14666:224:24","nodeType":"YulBlock","src":"14666:224:24","statements":[{"nativeSrc":"14680:34:24","nodeType":"YulVariableDeclaration","src":"14680:34:24","value":{"arguments":[{"name":"srcPtr","nativeSrc":"14707:6:24","nodeType":"YulIdentifier","src":"14707:6:24"}],"functionName":{"name":"mload","nativeSrc":"14701:5:24","nodeType":"YulIdentifier","src":"14701:5:24"},"nativeSrc":"14701:13:24","nodeType":"YulFunctionCall","src":"14701:13:24"},"variables":[{"name":"elementValue0","nativeSrc":"14684:13:24","nodeType":"YulTypedName","src":"14684:13:24","type":""}]},{"nativeSrc":"14727:70:24","nodeType":"YulAssignment","src":"14727:70:24","value":{"arguments":[{"name":"elementValue0","nativeSrc":"14778:13:24","nodeType":"YulIdentifier","src":"14778:13:24"},{"name":"pos","nativeSrc":"14793:3:24","nodeType":"YulIdentifier","src":"14793:3:24"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"14734:43:24","nodeType":"YulIdentifier","src":"14734:43:24"},"nativeSrc":"14734:63:24","nodeType":"YulFunctionCall","src":"14734:63:24"},"variableNames":[{"name":"pos","nativeSrc":"14727:3:24","nodeType":"YulIdentifier","src":"14727:3:24"}]},{"nativeSrc":"14810:70:24","nodeType":"YulAssignment","src":"14810:70:24","value":{"arguments":[{"name":"srcPtr","nativeSrc":"14873:6:24","nodeType":"YulIdentifier","src":"14873:6:24"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14820:52:24","nodeType":"YulIdentifier","src":"14820:52:24"},"nativeSrc":"14820:60:24","nodeType":"YulFunctionCall","src":"14820:60:24"},"variableNames":[{"name":"srcPtr","nativeSrc":"14810:6:24","nodeType":"YulIdentifier","src":"14810:6:24"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"14628:1:24","nodeType":"YulIdentifier","src":"14628:1:24"},{"name":"length","nativeSrc":"14631:6:24","nodeType":"YulIdentifier","src":"14631:6:24"}],"functionName":{"name":"lt","nativeSrc":"14625:2:24","nodeType":"YulIdentifier","src":"14625:2:24"},"nativeSrc":"14625:13:24","nodeType":"YulFunctionCall","src":"14625:13:24"},"nativeSrc":"14606:284:24","nodeType":"YulForLoop","post":{"nativeSrc":"14639:18:24","nodeType":"YulBlock","src":"14639:18:24","statements":[{"nativeSrc":"14641:14:24","nodeType":"YulAssignment","src":"14641:14:24","value":{"arguments":[{"name":"i","nativeSrc":"14650:1:24","nodeType":"YulIdentifier","src":"14650:1:24"},{"kind":"number","nativeSrc":"14653:1:24","nodeType":"YulLiteral","src":"14653:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14646:3:24","nodeType":"YulIdentifier","src":"14646:3:24"},"nativeSrc":"14646:9:24","nodeType":"YulFunctionCall","src":"14646:9:24"},"variableNames":[{"name":"i","nativeSrc":"14641:1:24","nodeType":"YulIdentifier","src":"14641:1:24"}]}]},"pre":{"nativeSrc":"14610:14:24","nodeType":"YulBlock","src":"14610:14:24","statements":[{"nativeSrc":"14612:10:24","nodeType":"YulVariableDeclaration","src":"14612:10:24","value":{"kind":"number","nativeSrc":"14621:1:24","nodeType":"YulLiteral","src":"14621:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"14616:1:24","nodeType":"YulTypedName","src":"14616:1:24","type":""}]}]},"src":"14606:284:24"},{"nativeSrc":"14899:10:24","nodeType":"YulAssignment","src":"14899:10:24","value":{"name":"pos","nativeSrc":"14906:3:24","nodeType":"YulIdentifier","src":"14906:3:24"},"variableNames":[{"name":"end","nativeSrc":"14899:3:24","nodeType":"YulIdentifier","src":"14899:3:24"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14183:732:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14286:5:24","nodeType":"YulTypedName","src":"14286:5:24","type":""},{"name":"pos","nativeSrc":"14293:3:24","nodeType":"YulTypedName","src":"14293:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14302:3:24","nodeType":"YulTypedName","src":"14302:3:24","type":""}],"src":"14183:732:24"},{"body":{"nativeSrc":"15069:225:24","nodeType":"YulBlock","src":"15069:225:24","statements":[{"nativeSrc":"15079:26:24","nodeType":"YulAssignment","src":"15079:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"15091:9:24","nodeType":"YulIdentifier","src":"15091:9:24"},{"kind":"number","nativeSrc":"15102:2:24","nodeType":"YulLiteral","src":"15102:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15087:3:24","nodeType":"YulIdentifier","src":"15087:3:24"},"nativeSrc":"15087:18:24","nodeType":"YulFunctionCall","src":"15087:18:24"},"variableNames":[{"name":"tail","nativeSrc":"15079:4:24","nodeType":"YulIdentifier","src":"15079:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15126:9:24","nodeType":"YulIdentifier","src":"15126:9:24"},{"kind":"number","nativeSrc":"15137:1:24","nodeType":"YulLiteral","src":"15137:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15122:3:24","nodeType":"YulIdentifier","src":"15122:3:24"},"nativeSrc":"15122:17:24","nodeType":"YulFunctionCall","src":"15122:17:24"},{"arguments":[{"name":"tail","nativeSrc":"15145:4:24","nodeType":"YulIdentifier","src":"15145:4:24"},{"name":"headStart","nativeSrc":"15151:9:24","nodeType":"YulIdentifier","src":"15151:9:24"}],"functionName":{"name":"sub","nativeSrc":"15141:3:24","nodeType":"YulIdentifier","src":"15141:3:24"},"nativeSrc":"15141:20:24","nodeType":"YulFunctionCall","src":"15141:20:24"}],"functionName":{"name":"mstore","nativeSrc":"15115:6:24","nodeType":"YulIdentifier","src":"15115:6:24"},"nativeSrc":"15115:47:24","nodeType":"YulFunctionCall","src":"15115:47:24"},"nativeSrc":"15115:47:24","nodeType":"YulExpressionStatement","src":"15115:47:24"},{"nativeSrc":"15171:116:24","nodeType":"YulAssignment","src":"15171:116:24","value":{"arguments":[{"name":"value0","nativeSrc":"15273:6:24","nodeType":"YulIdentifier","src":"15273:6:24"},{"name":"tail","nativeSrc":"15282:4:24","nodeType":"YulIdentifier","src":"15282:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"15179:93:24","nodeType":"YulIdentifier","src":"15179:93:24"},"nativeSrc":"15179:108:24","nodeType":"YulFunctionCall","src":"15179:108:24"},"variableNames":[{"name":"tail","nativeSrc":"15171:4:24","nodeType":"YulIdentifier","src":"15171:4:24"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"14921:373:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15041:9:24","nodeType":"YulTypedName","src":"15041:9:24","type":""},{"name":"value0","nativeSrc":"15053:6:24","nodeType":"YulTypedName","src":"15053:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15064:4:24","nodeType":"YulTypedName","src":"15064:4:24","type":""}],"src":"14921:373:24"},{"body":{"nativeSrc":"15493:1316:24","nodeType":"YulBlock","src":"15493:1316:24","statements":[{"body":{"nativeSrc":"15540:83:24","nodeType":"YulBlock","src":"15540:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15542:77:24","nodeType":"YulIdentifier","src":"15542:77:24"},"nativeSrc":"15542:79:24","nodeType":"YulFunctionCall","src":"15542:79:24"},"nativeSrc":"15542:79:24","nodeType":"YulExpressionStatement","src":"15542:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15514:7:24","nodeType":"YulIdentifier","src":"15514:7:24"},{"name":"headStart","nativeSrc":"15523:9:24","nodeType":"YulIdentifier","src":"15523:9:24"}],"functionName":{"name":"sub","nativeSrc":"15510:3:24","nodeType":"YulIdentifier","src":"15510:3:24"},"nativeSrc":"15510:23:24","nodeType":"YulFunctionCall","src":"15510:23:24"},{"kind":"number","nativeSrc":"15535:3:24","nodeType":"YulLiteral","src":"15535:3:24","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"15506:3:24","nodeType":"YulIdentifier","src":"15506:3:24"},"nativeSrc":"15506:33:24","nodeType":"YulFunctionCall","src":"15506:33:24"},"nativeSrc":"15503:120:24","nodeType":"YulIf","src":"15503:120:24"},{"nativeSrc":"15633:117:24","nodeType":"YulBlock","src":"15633:117:24","statements":[{"nativeSrc":"15648:15:24","nodeType":"YulVariableDeclaration","src":"15648:15:24","value":{"kind":"number","nativeSrc":"15662:1:24","nodeType":"YulLiteral","src":"15662:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15652:6:24","nodeType":"YulTypedName","src":"15652:6:24","type":""}]},{"nativeSrc":"15677:63:24","nodeType":"YulAssignment","src":"15677:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15712:9:24","nodeType":"YulIdentifier","src":"15712:9:24"},{"name":"offset","nativeSrc":"15723:6:24","nodeType":"YulIdentifier","src":"15723:6:24"}],"functionName":{"name":"add","nativeSrc":"15708:3:24","nodeType":"YulIdentifier","src":"15708:3:24"},"nativeSrc":"15708:22:24","nodeType":"YulFunctionCall","src":"15708:22:24"},{"name":"dataEnd","nativeSrc":"15732:7:24","nodeType":"YulIdentifier","src":"15732:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15687:20:24","nodeType":"YulIdentifier","src":"15687:20:24"},"nativeSrc":"15687:53:24","nodeType":"YulFunctionCall","src":"15687:53:24"},"variableNames":[{"name":"value0","nativeSrc":"15677:6:24","nodeType":"YulIdentifier","src":"15677:6:24"}]}]},{"nativeSrc":"15760:118:24","nodeType":"YulBlock","src":"15760:118:24","statements":[{"nativeSrc":"15775:16:24","nodeType":"YulVariableDeclaration","src":"15775:16:24","value":{"kind":"number","nativeSrc":"15789:2:24","nodeType":"YulLiteral","src":"15789:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15779:6:24","nodeType":"YulTypedName","src":"15779:6:24","type":""}]},{"nativeSrc":"15805:63:24","nodeType":"YulAssignment","src":"15805:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15840:9:24","nodeType":"YulIdentifier","src":"15840:9:24"},{"name":"offset","nativeSrc":"15851:6:24","nodeType":"YulIdentifier","src":"15851:6:24"}],"functionName":{"name":"add","nativeSrc":"15836:3:24","nodeType":"YulIdentifier","src":"15836:3:24"},"nativeSrc":"15836:22:24","nodeType":"YulFunctionCall","src":"15836:22:24"},{"name":"dataEnd","nativeSrc":"15860:7:24","nodeType":"YulIdentifier","src":"15860:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15815:20:24","nodeType":"YulIdentifier","src":"15815:20:24"},"nativeSrc":"15815:53:24","nodeType":"YulFunctionCall","src":"15815:53:24"},"variableNames":[{"name":"value1","nativeSrc":"15805:6:24","nodeType":"YulIdentifier","src":"15805:6:24"}]}]},{"nativeSrc":"15888:303:24","nodeType":"YulBlock","src":"15888:303:24","statements":[{"nativeSrc":"15903:46:24","nodeType":"YulVariableDeclaration","src":"15903:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15934:9:24","nodeType":"YulIdentifier","src":"15934:9:24"},{"kind":"number","nativeSrc":"15945:2:24","nodeType":"YulLiteral","src":"15945:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15930:3:24","nodeType":"YulIdentifier","src":"15930:3:24"},"nativeSrc":"15930:18:24","nodeType":"YulFunctionCall","src":"15930:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"15917:12:24","nodeType":"YulIdentifier","src":"15917:12:24"},"nativeSrc":"15917:32:24","nodeType":"YulFunctionCall","src":"15917:32:24"},"variables":[{"name":"offset","nativeSrc":"15907:6:24","nodeType":"YulTypedName","src":"15907:6:24","type":""}]},{"body":{"nativeSrc":"15996:83:24","nodeType":"YulBlock","src":"15996:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15998:77:24","nodeType":"YulIdentifier","src":"15998:77:24"},"nativeSrc":"15998:79:24","nodeType":"YulFunctionCall","src":"15998:79:24"},"nativeSrc":"15998:79:24","nodeType":"YulExpressionStatement","src":"15998:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15968:6:24","nodeType":"YulIdentifier","src":"15968:6:24"},{"kind":"number","nativeSrc":"15976:18:24","nodeType":"YulLiteral","src":"15976:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15965:2:24","nodeType":"YulIdentifier","src":"15965:2:24"},"nativeSrc":"15965:30:24","nodeType":"YulFunctionCall","src":"15965:30:24"},"nativeSrc":"15962:117:24","nodeType":"YulIf","src":"15962:117:24"},{"nativeSrc":"16093:88:24","nodeType":"YulAssignment","src":"16093:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16153:9:24","nodeType":"YulIdentifier","src":"16153:9:24"},{"name":"offset","nativeSrc":"16164:6:24","nodeType":"YulIdentifier","src":"16164:6:24"}],"functionName":{"name":"add","nativeSrc":"16149:3:24","nodeType":"YulIdentifier","src":"16149:3:24"},"nativeSrc":"16149:22:24","nodeType":"YulFunctionCall","src":"16149:22:24"},{"name":"dataEnd","nativeSrc":"16173:7:24","nodeType":"YulIdentifier","src":"16173:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"16103:45:24","nodeType":"YulIdentifier","src":"16103:45:24"},"nativeSrc":"16103:78:24","nodeType":"YulFunctionCall","src":"16103:78:24"},"variableNames":[{"name":"value2","nativeSrc":"16093:6:24","nodeType":"YulIdentifier","src":"16093:6:24"}]}]},{"nativeSrc":"16201:303:24","nodeType":"YulBlock","src":"16201:303:24","statements":[{"nativeSrc":"16216:46:24","nodeType":"YulVariableDeclaration","src":"16216:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16247:9:24","nodeType":"YulIdentifier","src":"16247:9:24"},{"kind":"number","nativeSrc":"16258:2:24","nodeType":"YulLiteral","src":"16258:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16243:3:24","nodeType":"YulIdentifier","src":"16243:3:24"},"nativeSrc":"16243:18:24","nodeType":"YulFunctionCall","src":"16243:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"16230:12:24","nodeType":"YulIdentifier","src":"16230:12:24"},"nativeSrc":"16230:32:24","nodeType":"YulFunctionCall","src":"16230:32:24"},"variables":[{"name":"offset","nativeSrc":"16220:6:24","nodeType":"YulTypedName","src":"16220:6:24","type":""}]},{"body":{"nativeSrc":"16309:83:24","nodeType":"YulBlock","src":"16309:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"16311:77:24","nodeType":"YulIdentifier","src":"16311:77:24"},"nativeSrc":"16311:79:24","nodeType":"YulFunctionCall","src":"16311:79:24"},"nativeSrc":"16311:79:24","nodeType":"YulExpressionStatement","src":"16311:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"16281:6:24","nodeType":"YulIdentifier","src":"16281:6:24"},{"kind":"number","nativeSrc":"16289:18:24","nodeType":"YulLiteral","src":"16289:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16278:2:24","nodeType":"YulIdentifier","src":"16278:2:24"},"nativeSrc":"16278:30:24","nodeType":"YulFunctionCall","src":"16278:30:24"},"nativeSrc":"16275:117:24","nodeType":"YulIf","src":"16275:117:24"},{"nativeSrc":"16406:88:24","nodeType":"YulAssignment","src":"16406:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16466:9:24","nodeType":"YulIdentifier","src":"16466:9:24"},{"name":"offset","nativeSrc":"16477:6:24","nodeType":"YulIdentifier","src":"16477:6:24"}],"functionName":{"name":"add","nativeSrc":"16462:3:24","nodeType":"YulIdentifier","src":"16462:3:24"},"nativeSrc":"16462:22:24","nodeType":"YulFunctionCall","src":"16462:22:24"},{"name":"dataEnd","nativeSrc":"16486:7:24","nodeType":"YulIdentifier","src":"16486:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"16416:45:24","nodeType":"YulIdentifier","src":"16416:45:24"},"nativeSrc":"16416:78:24","nodeType":"YulFunctionCall","src":"16416:78:24"},"variableNames":[{"name":"value3","nativeSrc":"16406:6:24","nodeType":"YulIdentifier","src":"16406:6:24"}]}]},{"nativeSrc":"16514:288:24","nodeType":"YulBlock","src":"16514:288:24","statements":[{"nativeSrc":"16529:47:24","nodeType":"YulVariableDeclaration","src":"16529:47:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16560:9:24","nodeType":"YulIdentifier","src":"16560:9:24"},{"kind":"number","nativeSrc":"16571:3:24","nodeType":"YulLiteral","src":"16571:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16556:3:24","nodeType":"YulIdentifier","src":"16556:3:24"},"nativeSrc":"16556:19:24","nodeType":"YulFunctionCall","src":"16556:19:24"}],"functionName":{"name":"calldataload","nativeSrc":"16543:12:24","nodeType":"YulIdentifier","src":"16543:12:24"},"nativeSrc":"16543:33:24","nodeType":"YulFunctionCall","src":"16543:33:24"},"variables":[{"name":"offset","nativeSrc":"16533:6:24","nodeType":"YulTypedName","src":"16533:6:24","type":""}]},{"body":{"nativeSrc":"16623:83:24","nodeType":"YulBlock","src":"16623:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"16625:77:24","nodeType":"YulIdentifier","src":"16625:77:24"},"nativeSrc":"16625:79:24","nodeType":"YulFunctionCall","src":"16625:79:24"},"nativeSrc":"16625:79:24","nodeType":"YulExpressionStatement","src":"16625:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"16595:6:24","nodeType":"YulIdentifier","src":"16595:6:24"},{"kind":"number","nativeSrc":"16603:18:24","nodeType":"YulLiteral","src":"16603:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16592:2:24","nodeType":"YulIdentifier","src":"16592:2:24"},"nativeSrc":"16592:30:24","nodeType":"YulFunctionCall","src":"16592:30:24"},"nativeSrc":"16589:117:24","nodeType":"YulIf","src":"16589:117:24"},{"nativeSrc":"16720:72:24","nodeType":"YulAssignment","src":"16720:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16764:9:24","nodeType":"YulIdentifier","src":"16764:9:24"},{"name":"offset","nativeSrc":"16775:6:24","nodeType":"YulIdentifier","src":"16775:6:24"}],"functionName":{"name":"add","nativeSrc":"16760:3:24","nodeType":"YulIdentifier","src":"16760:3:24"},"nativeSrc":"16760:22:24","nodeType":"YulFunctionCall","src":"16760:22:24"},{"name":"dataEnd","nativeSrc":"16784:7:24","nodeType":"YulIdentifier","src":"16784:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"16730:29:24","nodeType":"YulIdentifier","src":"16730:29:24"},"nativeSrc":"16730:62:24","nodeType":"YulFunctionCall","src":"16730:62:24"},"variableNames":[{"name":"value4","nativeSrc":"16720:6:24","nodeType":"YulIdentifier","src":"16720:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"15300:1509:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15431:9:24","nodeType":"YulTypedName","src":"15431:9:24","type":""},{"name":"dataEnd","nativeSrc":"15442:7:24","nodeType":"YulTypedName","src":"15442:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15454:6:24","nodeType":"YulTypedName","src":"15454:6:24","type":""},{"name":"value1","nativeSrc":"15462:6:24","nodeType":"YulTypedName","src":"15462:6:24","type":""},{"name":"value2","nativeSrc":"15470:6:24","nodeType":"YulTypedName","src":"15470:6:24","type":""},{"name":"value3","nativeSrc":"15478:6:24","nodeType":"YulTypedName","src":"15478:6:24","type":""},{"name":"value4","nativeSrc":"15486:6:24","nodeType":"YulTypedName","src":"15486:6:24","type":""}],"src":"15300:1509:24"},{"body":{"nativeSrc":"16898:391:24","nodeType":"YulBlock","src":"16898:391:24","statements":[{"body":{"nativeSrc":"16944:83:24","nodeType":"YulBlock","src":"16944:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16946:77:24","nodeType":"YulIdentifier","src":"16946:77:24"},"nativeSrc":"16946:79:24","nodeType":"YulFunctionCall","src":"16946:79:24"},"nativeSrc":"16946:79:24","nodeType":"YulExpressionStatement","src":"16946:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16919:7:24","nodeType":"YulIdentifier","src":"16919:7:24"},{"name":"headStart","nativeSrc":"16928:9:24","nodeType":"YulIdentifier","src":"16928:9:24"}],"functionName":{"name":"sub","nativeSrc":"16915:3:24","nodeType":"YulIdentifier","src":"16915:3:24"},"nativeSrc":"16915:23:24","nodeType":"YulFunctionCall","src":"16915:23:24"},{"kind":"number","nativeSrc":"16940:2:24","nodeType":"YulLiteral","src":"16940:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"16911:3:24","nodeType":"YulIdentifier","src":"16911:3:24"},"nativeSrc":"16911:32:24","nodeType":"YulFunctionCall","src":"16911:32:24"},"nativeSrc":"16908:119:24","nodeType":"YulIf","src":"16908:119:24"},{"nativeSrc":"17037:117:24","nodeType":"YulBlock","src":"17037:117:24","statements":[{"nativeSrc":"17052:15:24","nodeType":"YulVariableDeclaration","src":"17052:15:24","value":{"kind":"number","nativeSrc":"17066:1:24","nodeType":"YulLiteral","src":"17066:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17056:6:24","nodeType":"YulTypedName","src":"17056:6:24","type":""}]},{"nativeSrc":"17081:63:24","nodeType":"YulAssignment","src":"17081:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17116:9:24","nodeType":"YulIdentifier","src":"17116:9:24"},{"name":"offset","nativeSrc":"17127:6:24","nodeType":"YulIdentifier","src":"17127:6:24"}],"functionName":{"name":"add","nativeSrc":"17112:3:24","nodeType":"YulIdentifier","src":"17112:3:24"},"nativeSrc":"17112:22:24","nodeType":"YulFunctionCall","src":"17112:22:24"},{"name":"dataEnd","nativeSrc":"17136:7:24","nodeType":"YulIdentifier","src":"17136:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"17091:20:24","nodeType":"YulIdentifier","src":"17091:20:24"},"nativeSrc":"17091:53:24","nodeType":"YulFunctionCall","src":"17091:53:24"},"variableNames":[{"name":"value0","nativeSrc":"17081:6:24","nodeType":"YulIdentifier","src":"17081:6:24"}]}]},{"nativeSrc":"17164:118:24","nodeType":"YulBlock","src":"17164:118:24","statements":[{"nativeSrc":"17179:16:24","nodeType":"YulVariableDeclaration","src":"17179:16:24","value":{"kind":"number","nativeSrc":"17193:2:24","nodeType":"YulLiteral","src":"17193:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17183:6:24","nodeType":"YulTypedName","src":"17183:6:24","type":""}]},{"nativeSrc":"17209:63:24","nodeType":"YulAssignment","src":"17209:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17244:9:24","nodeType":"YulIdentifier","src":"17244:9:24"},{"name":"offset","nativeSrc":"17255:6:24","nodeType":"YulIdentifier","src":"17255:6:24"}],"functionName":{"name":"add","nativeSrc":"17240:3:24","nodeType":"YulIdentifier","src":"17240:3:24"},"nativeSrc":"17240:22:24","nodeType":"YulFunctionCall","src":"17240:22:24"},{"name":"dataEnd","nativeSrc":"17264:7:24","nodeType":"YulIdentifier","src":"17264:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17219:20:24","nodeType":"YulIdentifier","src":"17219:20:24"},"nativeSrc":"17219:53:24","nodeType":"YulFunctionCall","src":"17219:53:24"},"variableNames":[{"name":"value1","nativeSrc":"17209:6:24","nodeType":"YulIdentifier","src":"17209:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"16815:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16860:9:24","nodeType":"YulTypedName","src":"16860:9:24","type":""},{"name":"dataEnd","nativeSrc":"16871:7:24","nodeType":"YulTypedName","src":"16871:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16883:6:24","nodeType":"YulTypedName","src":"16883:6:24","type":""},{"name":"value1","nativeSrc":"16891:6:24","nodeType":"YulTypedName","src":"16891:6:24","type":""}],"src":"16815:474:24"},{"body":{"nativeSrc":"17377:229:24","nodeType":"YulBlock","src":"17377:229:24","statements":[{"body":{"nativeSrc":"17482:22:24","nodeType":"YulBlock","src":"17482:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"17484:16:24","nodeType":"YulIdentifier","src":"17484:16:24"},"nativeSrc":"17484:18:24","nodeType":"YulFunctionCall","src":"17484:18:24"},"nativeSrc":"17484:18:24","nodeType":"YulExpressionStatement","src":"17484:18:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"17454:6:24","nodeType":"YulIdentifier","src":"17454:6:24"},{"kind":"number","nativeSrc":"17462:18:24","nodeType":"YulLiteral","src":"17462:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17451:2:24","nodeType":"YulIdentifier","src":"17451:2:24"},"nativeSrc":"17451:30:24","nodeType":"YulFunctionCall","src":"17451:30:24"},"nativeSrc":"17448:56:24","nodeType":"YulIf","src":"17448:56:24"},{"nativeSrc":"17514:25:24","nodeType":"YulAssignment","src":"17514:25:24","value":{"arguments":[{"name":"length","nativeSrc":"17526:6:24","nodeType":"YulIdentifier","src":"17526:6:24"},{"kind":"number","nativeSrc":"17534:4:24","nodeType":"YulLiteral","src":"17534:4:24","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17522:3:24","nodeType":"YulIdentifier","src":"17522:3:24"},"nativeSrc":"17522:17:24","nodeType":"YulFunctionCall","src":"17522:17:24"},"variableNames":[{"name":"size","nativeSrc":"17514:4:24","nodeType":"YulIdentifier","src":"17514:4:24"}]},{"nativeSrc":"17576:23:24","nodeType":"YulAssignment","src":"17576:23:24","value":{"arguments":[{"name":"size","nativeSrc":"17588:4:24","nodeType":"YulIdentifier","src":"17588:4:24"},{"kind":"number","nativeSrc":"17594:4:24","nodeType":"YulLiteral","src":"17594:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17584:3:24","nodeType":"YulIdentifier","src":"17584:3:24"},"nativeSrc":"17584:15:24","nodeType":"YulFunctionCall","src":"17584:15:24"},"variableNames":[{"name":"size","nativeSrc":"17576:4:24","nodeType":"YulIdentifier","src":"17576:4:24"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"17295:311:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"17361:6:24","nodeType":"YulTypedName","src":"17361:6:24","type":""}],"returnVariables":[{"name":"size","nativeSrc":"17372:4:24","nodeType":"YulTypedName","src":"17372:4:24","type":""}],"src":"17295:311:24"},{"body":{"nativeSrc":"17731:608:24","nodeType":"YulBlock","src":"17731:608:24","statements":[{"nativeSrc":"17741:90:24","nodeType":"YulAssignment","src":"17741:90:24","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"17823:6:24","nodeType":"YulIdentifier","src":"17823:6:24"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"17766:56:24","nodeType":"YulIdentifier","src":"17766:56:24"},"nativeSrc":"17766:64:24","nodeType":"YulFunctionCall","src":"17766:64:24"}],"functionName":{"name":"allocate_memory","nativeSrc":"17750:15:24","nodeType":"YulIdentifier","src":"17750:15:24"},"nativeSrc":"17750:81:24","nodeType":"YulFunctionCall","src":"17750:81:24"},"variableNames":[{"name":"array","nativeSrc":"17741:5:24","nodeType":"YulIdentifier","src":"17741:5:24"}]},{"nativeSrc":"17840:16:24","nodeType":"YulVariableDeclaration","src":"17840:16:24","value":{"name":"array","nativeSrc":"17851:5:24","nodeType":"YulIdentifier","src":"17851:5:24"},"variables":[{"name":"dst","nativeSrc":"17844:3:24","nodeType":"YulTypedName","src":"17844:3:24","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"17873:5:24","nodeType":"YulIdentifier","src":"17873:5:24"},{"name":"length","nativeSrc":"17880:6:24","nodeType":"YulIdentifier","src":"17880:6:24"}],"functionName":{"name":"mstore","nativeSrc":"17866:6:24","nodeType":"YulIdentifier","src":"17866:6:24"},"nativeSrc":"17866:21:24","nodeType":"YulFunctionCall","src":"17866:21:24"},"nativeSrc":"17866:21:24","nodeType":"YulExpressionStatement","src":"17866:21:24"},{"nativeSrc":"17896:23:24","nodeType":"YulAssignment","src":"17896:23:24","value":{"arguments":[{"name":"array","nativeSrc":"17907:5:24","nodeType":"YulIdentifier","src":"17907:5:24"},{"kind":"number","nativeSrc":"17914:4:24","nodeType":"YulLiteral","src":"17914:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17903:3:24","nodeType":"YulIdentifier","src":"17903:3:24"},"nativeSrc":"17903:16:24","nodeType":"YulFunctionCall","src":"17903:16:24"},"variableNames":[{"name":"dst","nativeSrc":"17896:3:24","nodeType":"YulIdentifier","src":"17896:3:24"}]},{"nativeSrc":"17929:44:24","nodeType":"YulVariableDeclaration","src":"17929:44:24","value":{"arguments":[{"name":"offset","nativeSrc":"17947:6:24","nodeType":"YulIdentifier","src":"17947:6:24"},{"arguments":[{"name":"length","nativeSrc":"17959:6:24","nodeType":"YulIdentifier","src":"17959:6:24"},{"kind":"number","nativeSrc":"17967:4:24","nodeType":"YulLiteral","src":"17967:4:24","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17955:3:24","nodeType":"YulIdentifier","src":"17955:3:24"},"nativeSrc":"17955:17:24","nodeType":"YulFunctionCall","src":"17955:17:24"}],"functionName":{"name":"add","nativeSrc":"17943:3:24","nodeType":"YulIdentifier","src":"17943:3:24"},"nativeSrc":"17943:30:24","nodeType":"YulFunctionCall","src":"17943:30:24"},"variables":[{"name":"srcEnd","nativeSrc":"17933:6:24","nodeType":"YulTypedName","src":"17933:6:24","type":""}]},{"body":{"nativeSrc":"18001:103:24","nodeType":"YulBlock","src":"18001:103:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"18015:77:24","nodeType":"YulIdentifier","src":"18015:77:24"},"nativeSrc":"18015:79:24","nodeType":"YulFunctionCall","src":"18015:79:24"},"nativeSrc":"18015:79:24","nodeType":"YulExpressionStatement","src":"18015:79:24"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"17988:6:24","nodeType":"YulIdentifier","src":"17988:6:24"},{"name":"end","nativeSrc":"17996:3:24","nodeType":"YulIdentifier","src":"17996:3:24"}],"functionName":{"name":"gt","nativeSrc":"17985:2:24","nodeType":"YulIdentifier","src":"17985:2:24"},"nativeSrc":"17985:15:24","nodeType":"YulFunctionCall","src":"17985:15:24"},"nativeSrc":"17982:122:24","nodeType":"YulIf","src":"17982:122:24"},{"body":{"nativeSrc":"18189:144:24","nodeType":"YulBlock","src":"18189:144:24","statements":[{"nativeSrc":"18204:21:24","nodeType":"YulVariableDeclaration","src":"18204:21:24","value":{"name":"src","nativeSrc":"18222:3:24","nodeType":"YulIdentifier","src":"18222:3:24"},"variables":[{"name":"elementPos","nativeSrc":"18208:10:24","nodeType":"YulTypedName","src":"18208:10:24","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"18246:3:24","nodeType":"YulIdentifier","src":"18246:3:24"},{"arguments":[{"name":"elementPos","nativeSrc":"18272:10:24","nodeType":"YulIdentifier","src":"18272:10:24"},{"name":"end","nativeSrc":"18284:3:24","nodeType":"YulIdentifier","src":"18284:3:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"18251:20:24","nodeType":"YulIdentifier","src":"18251:20:24"},"nativeSrc":"18251:37:24","nodeType":"YulFunctionCall","src":"18251:37:24"}],"functionName":{"name":"mstore","nativeSrc":"18239:6:24","nodeType":"YulIdentifier","src":"18239:6:24"},"nativeSrc":"18239:50:24","nodeType":"YulFunctionCall","src":"18239:50:24"},"nativeSrc":"18239:50:24","nodeType":"YulExpressionStatement","src":"18239:50:24"},{"nativeSrc":"18302:21:24","nodeType":"YulAssignment","src":"18302:21:24","value":{"arguments":[{"name":"dst","nativeSrc":"18313:3:24","nodeType":"YulIdentifier","src":"18313:3:24"},{"kind":"number","nativeSrc":"18318:4:24","nodeType":"YulLiteral","src":"18318:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18309:3:24","nodeType":"YulIdentifier","src":"18309:3:24"},"nativeSrc":"18309:14:24","nodeType":"YulFunctionCall","src":"18309:14:24"},"variableNames":[{"name":"dst","nativeSrc":"18302:3:24","nodeType":"YulIdentifier","src":"18302:3:24"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"18142:3:24","nodeType":"YulIdentifier","src":"18142:3:24"},{"name":"srcEnd","nativeSrc":"18147:6:24","nodeType":"YulIdentifier","src":"18147:6:24"}],"functionName":{"name":"lt","nativeSrc":"18139:2:24","nodeType":"YulIdentifier","src":"18139:2:24"},"nativeSrc":"18139:15:24","nodeType":"YulFunctionCall","src":"18139:15:24"},"nativeSrc":"18113:220:24","nodeType":"YulForLoop","post":{"nativeSrc":"18155:25:24","nodeType":"YulBlock","src":"18155:25:24","statements":[{"nativeSrc":"18157:21:24","nodeType":"YulAssignment","src":"18157:21:24","value":{"arguments":[{"name":"src","nativeSrc":"18168:3:24","nodeType":"YulIdentifier","src":"18168:3:24"},{"kind":"number","nativeSrc":"18173:4:24","nodeType":"YulLiteral","src":"18173:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18164:3:24","nodeType":"YulIdentifier","src":"18164:3:24"},"nativeSrc":"18164:14:24","nodeType":"YulFunctionCall","src":"18164:14:24"},"variableNames":[{"name":"src","nativeSrc":"18157:3:24","nodeType":"YulIdentifier","src":"18157:3:24"}]}]},"pre":{"nativeSrc":"18117:21:24","nodeType":"YulBlock","src":"18117:21:24","statements":[{"nativeSrc":"18119:17:24","nodeType":"YulVariableDeclaration","src":"18119:17:24","value":{"name":"offset","nativeSrc":"18130:6:24","nodeType":"YulIdentifier","src":"18130:6:24"},"variables":[{"name":"src","nativeSrc":"18123:3:24","nodeType":"YulTypedName","src":"18123:3:24","type":""}]}]},"src":"18113:220:24"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"17629:710:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17701:6:24","nodeType":"YulTypedName","src":"17701:6:24","type":""},{"name":"length","nativeSrc":"17709:6:24","nodeType":"YulTypedName","src":"17709:6:24","type":""},{"name":"end","nativeSrc":"17717:3:24","nodeType":"YulTypedName","src":"17717:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"17725:5:24","nodeType":"YulTypedName","src":"17725:5:24","type":""}],"src":"17629:710:24"},{"body":{"nativeSrc":"18439:293:24","nodeType":"YulBlock","src":"18439:293:24","statements":[{"body":{"nativeSrc":"18488:83:24","nodeType":"YulBlock","src":"18488:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"18490:77:24","nodeType":"YulIdentifier","src":"18490:77:24"},"nativeSrc":"18490:79:24","nodeType":"YulFunctionCall","src":"18490:79:24"},"nativeSrc":"18490:79:24","nodeType":"YulExpressionStatement","src":"18490:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"18467:6:24","nodeType":"YulIdentifier","src":"18467:6:24"},{"kind":"number","nativeSrc":"18475:4:24","nodeType":"YulLiteral","src":"18475:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"18463:3:24","nodeType":"YulIdentifier","src":"18463:3:24"},"nativeSrc":"18463:17:24","nodeType":"YulFunctionCall","src":"18463:17:24"},{"name":"end","nativeSrc":"18482:3:24","nodeType":"YulIdentifier","src":"18482:3:24"}],"functionName":{"name":"slt","nativeSrc":"18459:3:24","nodeType":"YulIdentifier","src":"18459:3:24"},"nativeSrc":"18459:27:24","nodeType":"YulFunctionCall","src":"18459:27:24"}],"functionName":{"name":"iszero","nativeSrc":"18452:6:24","nodeType":"YulIdentifier","src":"18452:6:24"},"nativeSrc":"18452:35:24","nodeType":"YulFunctionCall","src":"18452:35:24"},"nativeSrc":"18449:122:24","nodeType":"YulIf","src":"18449:122:24"},{"nativeSrc":"18580:34:24","nodeType":"YulVariableDeclaration","src":"18580:34:24","value":{"arguments":[{"name":"offset","nativeSrc":"18607:6:24","nodeType":"YulIdentifier","src":"18607:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"18594:12:24","nodeType":"YulIdentifier","src":"18594:12:24"},"nativeSrc":"18594:20:24","nodeType":"YulFunctionCall","src":"18594:20:24"},"variables":[{"name":"length","nativeSrc":"18584:6:24","nodeType":"YulTypedName","src":"18584:6:24","type":""}]},{"nativeSrc":"18623:103:24","nodeType":"YulAssignment","src":"18623:103:24","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"18699:6:24","nodeType":"YulIdentifier","src":"18699:6:24"},{"kind":"number","nativeSrc":"18707:4:24","nodeType":"YulLiteral","src":"18707:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18695:3:24","nodeType":"YulIdentifier","src":"18695:3:24"},"nativeSrc":"18695:17:24","nodeType":"YulFunctionCall","src":"18695:17:24"},{"name":"length","nativeSrc":"18714:6:24","nodeType":"YulIdentifier","src":"18714:6:24"},{"name":"end","nativeSrc":"18722:3:24","nodeType":"YulIdentifier","src":"18722:3:24"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"18632:62:24","nodeType":"YulIdentifier","src":"18632:62:24"},"nativeSrc":"18632:94:24","nodeType":"YulFunctionCall","src":"18632:94:24"},"variableNames":[{"name":"array","nativeSrc":"18623:5:24","nodeType":"YulIdentifier","src":"18623:5:24"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"18362:370:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18417:6:24","nodeType":"YulTypedName","src":"18417:6:24","type":""},{"name":"end","nativeSrc":"18425:3:24","nodeType":"YulTypedName","src":"18425:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"18433:5:24","nodeType":"YulTypedName","src":"18433:5:24","type":""}],"src":"18362:370:24"},{"body":{"nativeSrc":"18871:761:24","nodeType":"YulBlock","src":"18871:761:24","statements":[{"body":{"nativeSrc":"18917:83:24","nodeType":"YulBlock","src":"18917:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18919:77:24","nodeType":"YulIdentifier","src":"18919:77:24"},"nativeSrc":"18919:79:24","nodeType":"YulFunctionCall","src":"18919:79:24"},"nativeSrc":"18919:79:24","nodeType":"YulExpressionStatement","src":"18919:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18892:7:24","nodeType":"YulIdentifier","src":"18892:7:24"},{"name":"headStart","nativeSrc":"18901:9:24","nodeType":"YulIdentifier","src":"18901:9:24"}],"functionName":{"name":"sub","nativeSrc":"18888:3:24","nodeType":"YulIdentifier","src":"18888:3:24"},"nativeSrc":"18888:23:24","nodeType":"YulFunctionCall","src":"18888:23:24"},{"kind":"number","nativeSrc":"18913:2:24","nodeType":"YulLiteral","src":"18913:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"18884:3:24","nodeType":"YulIdentifier","src":"18884:3:24"},"nativeSrc":"18884:32:24","nodeType":"YulFunctionCall","src":"18884:32:24"},"nativeSrc":"18881:119:24","nodeType":"YulIf","src":"18881:119:24"},{"nativeSrc":"19010:302:24","nodeType":"YulBlock","src":"19010:302:24","statements":[{"nativeSrc":"19025:45:24","nodeType":"YulVariableDeclaration","src":"19025:45:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19056:9:24","nodeType":"YulIdentifier","src":"19056:9:24"},{"kind":"number","nativeSrc":"19067:1:24","nodeType":"YulLiteral","src":"19067:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19052:3:24","nodeType":"YulIdentifier","src":"19052:3:24"},"nativeSrc":"19052:17:24","nodeType":"YulFunctionCall","src":"19052:17:24"}],"functionName":{"name":"calldataload","nativeSrc":"19039:12:24","nodeType":"YulIdentifier","src":"19039:12:24"},"nativeSrc":"19039:31:24","nodeType":"YulFunctionCall","src":"19039:31:24"},"variables":[{"name":"offset","nativeSrc":"19029:6:24","nodeType":"YulTypedName","src":"19029:6:24","type":""}]},{"body":{"nativeSrc":"19117:83:24","nodeType":"YulBlock","src":"19117:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19119:77:24","nodeType":"YulIdentifier","src":"19119:77:24"},"nativeSrc":"19119:79:24","nodeType":"YulFunctionCall","src":"19119:79:24"},"nativeSrc":"19119:79:24","nodeType":"YulExpressionStatement","src":"19119:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19089:6:24","nodeType":"YulIdentifier","src":"19089:6:24"},{"kind":"number","nativeSrc":"19097:18:24","nodeType":"YulLiteral","src":"19097:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19086:2:24","nodeType":"YulIdentifier","src":"19086:2:24"},"nativeSrc":"19086:30:24","nodeType":"YulFunctionCall","src":"19086:30:24"},"nativeSrc":"19083:117:24","nodeType":"YulIf","src":"19083:117:24"},{"nativeSrc":"19214:88:24","nodeType":"YulAssignment","src":"19214:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19274:9:24","nodeType":"YulIdentifier","src":"19274:9:24"},{"name":"offset","nativeSrc":"19285:6:24","nodeType":"YulIdentifier","src":"19285:6:24"}],"functionName":{"name":"add","nativeSrc":"19270:3:24","nodeType":"YulIdentifier","src":"19270:3:24"},"nativeSrc":"19270:22:24","nodeType":"YulFunctionCall","src":"19270:22:24"},{"name":"dataEnd","nativeSrc":"19294:7:24","nodeType":"YulIdentifier","src":"19294:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"19224:45:24","nodeType":"YulIdentifier","src":"19224:45:24"},"nativeSrc":"19224:78:24","nodeType":"YulFunctionCall","src":"19224:78:24"},"variableNames":[{"name":"value0","nativeSrc":"19214:6:24","nodeType":"YulIdentifier","src":"19214:6:24"}]}]},{"nativeSrc":"19322:303:24","nodeType":"YulBlock","src":"19322:303:24","statements":[{"nativeSrc":"19337:46:24","nodeType":"YulVariableDeclaration","src":"19337:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19368:9:24","nodeType":"YulIdentifier","src":"19368:9:24"},{"kind":"number","nativeSrc":"19379:2:24","nodeType":"YulLiteral","src":"19379:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19364:3:24","nodeType":"YulIdentifier","src":"19364:3:24"},"nativeSrc":"19364:18:24","nodeType":"YulFunctionCall","src":"19364:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"19351:12:24","nodeType":"YulIdentifier","src":"19351:12:24"},"nativeSrc":"19351:32:24","nodeType":"YulFunctionCall","src":"19351:32:24"},"variables":[{"name":"offset","nativeSrc":"19341:6:24","nodeType":"YulTypedName","src":"19341:6:24","type":""}]},{"body":{"nativeSrc":"19430:83:24","nodeType":"YulBlock","src":"19430:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19432:77:24","nodeType":"YulIdentifier","src":"19432:77:24"},"nativeSrc":"19432:79:24","nodeType":"YulFunctionCall","src":"19432:79:24"},"nativeSrc":"19432:79:24","nodeType":"YulExpressionStatement","src":"19432:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19402:6:24","nodeType":"YulIdentifier","src":"19402:6:24"},{"kind":"number","nativeSrc":"19410:18:24","nodeType":"YulLiteral","src":"19410:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19399:2:24","nodeType":"YulIdentifier","src":"19399:2:24"},"nativeSrc":"19399:30:24","nodeType":"YulFunctionCall","src":"19399:30:24"},"nativeSrc":"19396:117:24","nodeType":"YulIf","src":"19396:117:24"},{"nativeSrc":"19527:88:24","nodeType":"YulAssignment","src":"19527:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19587:9:24","nodeType":"YulIdentifier","src":"19587:9:24"},{"name":"offset","nativeSrc":"19598:6:24","nodeType":"YulIdentifier","src":"19598:6:24"}],"functionName":{"name":"add","nativeSrc":"19583:3:24","nodeType":"YulIdentifier","src":"19583:3:24"},"nativeSrc":"19583:22:24","nodeType":"YulFunctionCall","src":"19583:22:24"},{"name":"dataEnd","nativeSrc":"19607:7:24","nodeType":"YulIdentifier","src":"19607:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"19537:45:24","nodeType":"YulIdentifier","src":"19537:45:24"},"nativeSrc":"19537:78:24","nodeType":"YulFunctionCall","src":"19537:78:24"},"variableNames":[{"name":"value1","nativeSrc":"19527:6:24","nodeType":"YulIdentifier","src":"19527:6:24"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"18738:894:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18833:9:24","nodeType":"YulTypedName","src":"18833:9:24","type":""},{"name":"dataEnd","nativeSrc":"18844:7:24","nodeType":"YulTypedName","src":"18844:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18856:6:24","nodeType":"YulTypedName","src":"18856:6:24","type":""},{"name":"value1","nativeSrc":"18864:6:24","nodeType":"YulTypedName","src":"18864:6:24","type":""}],"src":"18738:894:24"},{"body":{"nativeSrc":"19839:1372:24","nodeType":"YulBlock","src":"19839:1372:24","statements":[{"body":{"nativeSrc":"19886:83:24","nodeType":"YulBlock","src":"19886:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19888:77:24","nodeType":"YulIdentifier","src":"19888:77:24"},"nativeSrc":"19888:79:24","nodeType":"YulFunctionCall","src":"19888:79:24"},"nativeSrc":"19888:79:24","nodeType":"YulExpressionStatement","src":"19888:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19860:7:24","nodeType":"YulIdentifier","src":"19860:7:24"},{"name":"headStart","nativeSrc":"19869:9:24","nodeType":"YulIdentifier","src":"19869:9:24"}],"functionName":{"name":"sub","nativeSrc":"19856:3:24","nodeType":"YulIdentifier","src":"19856:3:24"},"nativeSrc":"19856:23:24","nodeType":"YulFunctionCall","src":"19856:23:24"},{"kind":"number","nativeSrc":"19881:3:24","nodeType":"YulLiteral","src":"19881:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"19852:3:24","nodeType":"YulIdentifier","src":"19852:3:24"},"nativeSrc":"19852:33:24","nodeType":"YulFunctionCall","src":"19852:33:24"},"nativeSrc":"19849:120:24","nodeType":"YulIf","src":"19849:120:24"},{"nativeSrc":"19979:302:24","nodeType":"YulBlock","src":"19979:302:24","statements":[{"nativeSrc":"19994:45:24","nodeType":"YulVariableDeclaration","src":"19994:45:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20025:9:24","nodeType":"YulIdentifier","src":"20025:9:24"},{"kind":"number","nativeSrc":"20036:1:24","nodeType":"YulLiteral","src":"20036:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20021:3:24","nodeType":"YulIdentifier","src":"20021:3:24"},"nativeSrc":"20021:17:24","nodeType":"YulFunctionCall","src":"20021:17:24"}],"functionName":{"name":"calldataload","nativeSrc":"20008:12:24","nodeType":"YulIdentifier","src":"20008:12:24"},"nativeSrc":"20008:31:24","nodeType":"YulFunctionCall","src":"20008:31:24"},"variables":[{"name":"offset","nativeSrc":"19998:6:24","nodeType":"YulTypedName","src":"19998:6:24","type":""}]},{"body":{"nativeSrc":"20086:83:24","nodeType":"YulBlock","src":"20086:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20088:77:24","nodeType":"YulIdentifier","src":"20088:77:24"},"nativeSrc":"20088:79:24","nodeType":"YulFunctionCall","src":"20088:79:24"},"nativeSrc":"20088:79:24","nodeType":"YulExpressionStatement","src":"20088:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20058:6:24","nodeType":"YulIdentifier","src":"20058:6:24"},{"kind":"number","nativeSrc":"20066:18:24","nodeType":"YulLiteral","src":"20066:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20055:2:24","nodeType":"YulIdentifier","src":"20055:2:24"},"nativeSrc":"20055:30:24","nodeType":"YulFunctionCall","src":"20055:30:24"},"nativeSrc":"20052:117:24","nodeType":"YulIf","src":"20052:117:24"},{"nativeSrc":"20183:88:24","nodeType":"YulAssignment","src":"20183:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20243:9:24","nodeType":"YulIdentifier","src":"20243:9:24"},{"name":"offset","nativeSrc":"20254:6:24","nodeType":"YulIdentifier","src":"20254:6:24"}],"functionName":{"name":"add","nativeSrc":"20239:3:24","nodeType":"YulIdentifier","src":"20239:3:24"},"nativeSrc":"20239:22:24","nodeType":"YulFunctionCall","src":"20239:22:24"},{"name":"dataEnd","nativeSrc":"20263:7:24","nodeType":"YulIdentifier","src":"20263:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"20193:45:24","nodeType":"YulIdentifier","src":"20193:45:24"},"nativeSrc":"20193:78:24","nodeType":"YulFunctionCall","src":"20193:78:24"},"variableNames":[{"name":"value0","nativeSrc":"20183:6:24","nodeType":"YulIdentifier","src":"20183:6:24"}]}]},{"nativeSrc":"20291:303:24","nodeType":"YulBlock","src":"20291:303:24","statements":[{"nativeSrc":"20306:46:24","nodeType":"YulVariableDeclaration","src":"20306:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20337:9:24","nodeType":"YulIdentifier","src":"20337:9:24"},{"kind":"number","nativeSrc":"20348:2:24","nodeType":"YulLiteral","src":"20348:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20333:3:24","nodeType":"YulIdentifier","src":"20333:3:24"},"nativeSrc":"20333:18:24","nodeType":"YulFunctionCall","src":"20333:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"20320:12:24","nodeType":"YulIdentifier","src":"20320:12:24"},"nativeSrc":"20320:32:24","nodeType":"YulFunctionCall","src":"20320:32:24"},"variables":[{"name":"offset","nativeSrc":"20310:6:24","nodeType":"YulTypedName","src":"20310:6:24","type":""}]},{"body":{"nativeSrc":"20399:83:24","nodeType":"YulBlock","src":"20399:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20401:77:24","nodeType":"YulIdentifier","src":"20401:77:24"},"nativeSrc":"20401:79:24","nodeType":"YulFunctionCall","src":"20401:79:24"},"nativeSrc":"20401:79:24","nodeType":"YulExpressionStatement","src":"20401:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20371:6:24","nodeType":"YulIdentifier","src":"20371:6:24"},{"kind":"number","nativeSrc":"20379:18:24","nodeType":"YulLiteral","src":"20379:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20368:2:24","nodeType":"YulIdentifier","src":"20368:2:24"},"nativeSrc":"20368:30:24","nodeType":"YulFunctionCall","src":"20368:30:24"},"nativeSrc":"20365:117:24","nodeType":"YulIf","src":"20365:117:24"},{"nativeSrc":"20496:88:24","nodeType":"YulAssignment","src":"20496:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20556:9:24","nodeType":"YulIdentifier","src":"20556:9:24"},{"name":"offset","nativeSrc":"20567:6:24","nodeType":"YulIdentifier","src":"20567:6:24"}],"functionName":{"name":"add","nativeSrc":"20552:3:24","nodeType":"YulIdentifier","src":"20552:3:24"},"nativeSrc":"20552:22:24","nodeType":"YulFunctionCall","src":"20552:22:24"},{"name":"dataEnd","nativeSrc":"20576:7:24","nodeType":"YulIdentifier","src":"20576:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"20506:45:24","nodeType":"YulIdentifier","src":"20506:45:24"},"nativeSrc":"20506:78:24","nodeType":"YulFunctionCall","src":"20506:78:24"},"variableNames":[{"name":"value1","nativeSrc":"20496:6:24","nodeType":"YulIdentifier","src":"20496:6:24"}]}]},{"nativeSrc":"20604:303:24","nodeType":"YulBlock","src":"20604:303:24","statements":[{"nativeSrc":"20619:46:24","nodeType":"YulVariableDeclaration","src":"20619:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20650:9:24","nodeType":"YulIdentifier","src":"20650:9:24"},{"kind":"number","nativeSrc":"20661:2:24","nodeType":"YulLiteral","src":"20661:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20646:3:24","nodeType":"YulIdentifier","src":"20646:3:24"},"nativeSrc":"20646:18:24","nodeType":"YulFunctionCall","src":"20646:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"20633:12:24","nodeType":"YulIdentifier","src":"20633:12:24"},"nativeSrc":"20633:32:24","nodeType":"YulFunctionCall","src":"20633:32:24"},"variables":[{"name":"offset","nativeSrc":"20623:6:24","nodeType":"YulTypedName","src":"20623:6:24","type":""}]},{"body":{"nativeSrc":"20712:83:24","nodeType":"YulBlock","src":"20712:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20714:77:24","nodeType":"YulIdentifier","src":"20714:77:24"},"nativeSrc":"20714:79:24","nodeType":"YulFunctionCall","src":"20714:79:24"},"nativeSrc":"20714:79:24","nodeType":"YulExpressionStatement","src":"20714:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20684:6:24","nodeType":"YulIdentifier","src":"20684:6:24"},{"kind":"number","nativeSrc":"20692:18:24","nodeType":"YulLiteral","src":"20692:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20681:2:24","nodeType":"YulIdentifier","src":"20681:2:24"},"nativeSrc":"20681:30:24","nodeType":"YulFunctionCall","src":"20681:30:24"},"nativeSrc":"20678:117:24","nodeType":"YulIf","src":"20678:117:24"},{"nativeSrc":"20809:88:24","nodeType":"YulAssignment","src":"20809:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20869:9:24","nodeType":"YulIdentifier","src":"20869:9:24"},{"name":"offset","nativeSrc":"20880:6:24","nodeType":"YulIdentifier","src":"20880:6:24"}],"functionName":{"name":"add","nativeSrc":"20865:3:24","nodeType":"YulIdentifier","src":"20865:3:24"},"nativeSrc":"20865:22:24","nodeType":"YulFunctionCall","src":"20865:22:24"},{"name":"dataEnd","nativeSrc":"20889:7:24","nodeType":"YulIdentifier","src":"20889:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"20819:45:24","nodeType":"YulIdentifier","src":"20819:45:24"},"nativeSrc":"20819:78:24","nodeType":"YulFunctionCall","src":"20819:78:24"},"variableNames":[{"name":"value2","nativeSrc":"20809:6:24","nodeType":"YulIdentifier","src":"20809:6:24"}]}]},{"nativeSrc":"20917:287:24","nodeType":"YulBlock","src":"20917:287:24","statements":[{"nativeSrc":"20932:46:24","nodeType":"YulVariableDeclaration","src":"20932:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20963:9:24","nodeType":"YulIdentifier","src":"20963:9:24"},{"kind":"number","nativeSrc":"20974:2:24","nodeType":"YulLiteral","src":"20974:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20959:3:24","nodeType":"YulIdentifier","src":"20959:3:24"},"nativeSrc":"20959:18:24","nodeType":"YulFunctionCall","src":"20959:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"20946:12:24","nodeType":"YulIdentifier","src":"20946:12:24"},"nativeSrc":"20946:32:24","nodeType":"YulFunctionCall","src":"20946:32:24"},"variables":[{"name":"offset","nativeSrc":"20936:6:24","nodeType":"YulTypedName","src":"20936:6:24","type":""}]},{"body":{"nativeSrc":"21025:83:24","nodeType":"YulBlock","src":"21025:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"21027:77:24","nodeType":"YulIdentifier","src":"21027:77:24"},"nativeSrc":"21027:79:24","nodeType":"YulFunctionCall","src":"21027:79:24"},"nativeSrc":"21027:79:24","nodeType":"YulExpressionStatement","src":"21027:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20997:6:24","nodeType":"YulIdentifier","src":"20997:6:24"},{"kind":"number","nativeSrc":"21005:18:24","nodeType":"YulLiteral","src":"21005:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20994:2:24","nodeType":"YulIdentifier","src":"20994:2:24"},"nativeSrc":"20994:30:24","nodeType":"YulFunctionCall","src":"20994:30:24"},"nativeSrc":"20991:117:24","nodeType":"YulIf","src":"20991:117:24"},{"nativeSrc":"21122:72:24","nodeType":"YulAssignment","src":"21122:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21166:9:24","nodeType":"YulIdentifier","src":"21166:9:24"},{"name":"offset","nativeSrc":"21177:6:24","nodeType":"YulIdentifier","src":"21177:6:24"}],"functionName":{"name":"add","nativeSrc":"21162:3:24","nodeType":"YulIdentifier","src":"21162:3:24"},"nativeSrc":"21162:22:24","nodeType":"YulFunctionCall","src":"21162:22:24"},{"name":"dataEnd","nativeSrc":"21186:7:24","nodeType":"YulIdentifier","src":"21186:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"21132:29:24","nodeType":"YulIdentifier","src":"21132:29:24"},"nativeSrc":"21132:62:24","nodeType":"YulFunctionCall","src":"21132:62:24"},"variableNames":[{"name":"value3","nativeSrc":"21122:6:24","nodeType":"YulIdentifier","src":"21122:6:24"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"19638:1573:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19785:9:24","nodeType":"YulTypedName","src":"19785:9:24","type":""},{"name":"dataEnd","nativeSrc":"19796:7:24","nodeType":"YulTypedName","src":"19796:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19808:6:24","nodeType":"YulTypedName","src":"19808:6:24","type":""},{"name":"value1","nativeSrc":"19816:6:24","nodeType":"YulTypedName","src":"19816:6:24","type":""},{"name":"value2","nativeSrc":"19824:6:24","nodeType":"YulTypedName","src":"19824:6:24","type":""},{"name":"value3","nativeSrc":"19832:6:24","nodeType":"YulTypedName","src":"19832:6:24","type":""}],"src":"19638:1573:24"},{"body":{"nativeSrc":"21367:889:24","nodeType":"YulBlock","src":"21367:889:24","statements":[{"body":{"nativeSrc":"21413:83:24","nodeType":"YulBlock","src":"21413:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21415:77:24","nodeType":"YulIdentifier","src":"21415:77:24"},"nativeSrc":"21415:79:24","nodeType":"YulFunctionCall","src":"21415:79:24"},"nativeSrc":"21415:79:24","nodeType":"YulExpressionStatement","src":"21415:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21388:7:24","nodeType":"YulIdentifier","src":"21388:7:24"},{"name":"headStart","nativeSrc":"21397:9:24","nodeType":"YulIdentifier","src":"21397:9:24"}],"functionName":{"name":"sub","nativeSrc":"21384:3:24","nodeType":"YulIdentifier","src":"21384:3:24"},"nativeSrc":"21384:23:24","nodeType":"YulFunctionCall","src":"21384:23:24"},{"kind":"number","nativeSrc":"21409:2:24","nodeType":"YulLiteral","src":"21409:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"21380:3:24","nodeType":"YulIdentifier","src":"21380:3:24"},"nativeSrc":"21380:32:24","nodeType":"YulFunctionCall","src":"21380:32:24"},"nativeSrc":"21377:119:24","nodeType":"YulIf","src":"21377:119:24"},{"nativeSrc":"21506:117:24","nodeType":"YulBlock","src":"21506:117:24","statements":[{"nativeSrc":"21521:15:24","nodeType":"YulVariableDeclaration","src":"21521:15:24","value":{"kind":"number","nativeSrc":"21535:1:24","nodeType":"YulLiteral","src":"21535:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21525:6:24","nodeType":"YulTypedName","src":"21525:6:24","type":""}]},{"nativeSrc":"21550:63:24","nodeType":"YulAssignment","src":"21550:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21585:9:24","nodeType":"YulIdentifier","src":"21585:9:24"},{"name":"offset","nativeSrc":"21596:6:24","nodeType":"YulIdentifier","src":"21596:6:24"}],"functionName":{"name":"add","nativeSrc":"21581:3:24","nodeType":"YulIdentifier","src":"21581:3:24"},"nativeSrc":"21581:22:24","nodeType":"YulFunctionCall","src":"21581:22:24"},{"name":"dataEnd","nativeSrc":"21605:7:24","nodeType":"YulIdentifier","src":"21605:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21560:20:24","nodeType":"YulIdentifier","src":"21560:20:24"},"nativeSrc":"21560:53:24","nodeType":"YulFunctionCall","src":"21560:53:24"},"variableNames":[{"name":"value0","nativeSrc":"21550:6:24","nodeType":"YulIdentifier","src":"21550:6:24"}]}]},{"nativeSrc":"21633:303:24","nodeType":"YulBlock","src":"21633:303:24","statements":[{"nativeSrc":"21648:46:24","nodeType":"YulVariableDeclaration","src":"21648:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21679:9:24","nodeType":"YulIdentifier","src":"21679:9:24"},{"kind":"number","nativeSrc":"21690:2:24","nodeType":"YulLiteral","src":"21690:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21675:3:24","nodeType":"YulIdentifier","src":"21675:3:24"},"nativeSrc":"21675:18:24","nodeType":"YulFunctionCall","src":"21675:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"21662:12:24","nodeType":"YulIdentifier","src":"21662:12:24"},"nativeSrc":"21662:32:24","nodeType":"YulFunctionCall","src":"21662:32:24"},"variables":[{"name":"offset","nativeSrc":"21652:6:24","nodeType":"YulTypedName","src":"21652:6:24","type":""}]},{"body":{"nativeSrc":"21741:83:24","nodeType":"YulBlock","src":"21741:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"21743:77:24","nodeType":"YulIdentifier","src":"21743:77:24"},"nativeSrc":"21743:79:24","nodeType":"YulFunctionCall","src":"21743:79:24"},"nativeSrc":"21743:79:24","nodeType":"YulExpressionStatement","src":"21743:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"21713:6:24","nodeType":"YulIdentifier","src":"21713:6:24"},{"kind":"number","nativeSrc":"21721:18:24","nodeType":"YulLiteral","src":"21721:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21710:2:24","nodeType":"YulIdentifier","src":"21710:2:24"},"nativeSrc":"21710:30:24","nodeType":"YulFunctionCall","src":"21710:30:24"},"nativeSrc":"21707:117:24","nodeType":"YulIf","src":"21707:117:24"},{"nativeSrc":"21838:88:24","nodeType":"YulAssignment","src":"21838:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21898:9:24","nodeType":"YulIdentifier","src":"21898:9:24"},{"name":"offset","nativeSrc":"21909:6:24","nodeType":"YulIdentifier","src":"21909:6:24"}],"functionName":{"name":"add","nativeSrc":"21894:3:24","nodeType":"YulIdentifier","src":"21894:3:24"},"nativeSrc":"21894:22:24","nodeType":"YulFunctionCall","src":"21894:22:24"},{"name":"dataEnd","nativeSrc":"21918:7:24","nodeType":"YulIdentifier","src":"21918:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"21848:45:24","nodeType":"YulIdentifier","src":"21848:45:24"},"nativeSrc":"21848:78:24","nodeType":"YulFunctionCall","src":"21848:78:24"},"variableNames":[{"name":"value1","nativeSrc":"21838:6:24","nodeType":"YulIdentifier","src":"21838:6:24"}]}]},{"nativeSrc":"21946:303:24","nodeType":"YulBlock","src":"21946:303:24","statements":[{"nativeSrc":"21961:46:24","nodeType":"YulVariableDeclaration","src":"21961:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21992:9:24","nodeType":"YulIdentifier","src":"21992:9:24"},{"kind":"number","nativeSrc":"22003:2:24","nodeType":"YulLiteral","src":"22003:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21988:3:24","nodeType":"YulIdentifier","src":"21988:3:24"},"nativeSrc":"21988:18:24","nodeType":"YulFunctionCall","src":"21988:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"21975:12:24","nodeType":"YulIdentifier","src":"21975:12:24"},"nativeSrc":"21975:32:24","nodeType":"YulFunctionCall","src":"21975:32:24"},"variables":[{"name":"offset","nativeSrc":"21965:6:24","nodeType":"YulTypedName","src":"21965:6:24","type":""}]},{"body":{"nativeSrc":"22054:83:24","nodeType":"YulBlock","src":"22054:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"22056:77:24","nodeType":"YulIdentifier","src":"22056:77:24"},"nativeSrc":"22056:79:24","nodeType":"YulFunctionCall","src":"22056:79:24"},"nativeSrc":"22056:79:24","nodeType":"YulExpressionStatement","src":"22056:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"22026:6:24","nodeType":"YulIdentifier","src":"22026:6:24"},{"kind":"number","nativeSrc":"22034:18:24","nodeType":"YulLiteral","src":"22034:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22023:2:24","nodeType":"YulIdentifier","src":"22023:2:24"},"nativeSrc":"22023:30:24","nodeType":"YulFunctionCall","src":"22023:30:24"},"nativeSrc":"22020:117:24","nodeType":"YulIf","src":"22020:117:24"},{"nativeSrc":"22151:88:24","nodeType":"YulAssignment","src":"22151:88:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22211:9:24","nodeType":"YulIdentifier","src":"22211:9:24"},{"name":"offset","nativeSrc":"22222:6:24","nodeType":"YulIdentifier","src":"22222:6:24"}],"functionName":{"name":"add","nativeSrc":"22207:3:24","nodeType":"YulIdentifier","src":"22207:3:24"},"nativeSrc":"22207:22:24","nodeType":"YulFunctionCall","src":"22207:22:24"},{"name":"dataEnd","nativeSrc":"22231:7:24","nodeType":"YulIdentifier","src":"22231:7:24"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"22161:45:24","nodeType":"YulIdentifier","src":"22161:45:24"},"nativeSrc":"22161:78:24","nodeType":"YulFunctionCall","src":"22161:78:24"},"variableNames":[{"name":"value2","nativeSrc":"22151:6:24","nodeType":"YulIdentifier","src":"22151:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"21217:1039:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21321:9:24","nodeType":"YulTypedName","src":"21321:9:24","type":""},{"name":"dataEnd","nativeSrc":"21332:7:24","nodeType":"YulTypedName","src":"21332:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21344:6:24","nodeType":"YulTypedName","src":"21344:6:24","type":""},{"name":"value1","nativeSrc":"21352:6:24","nodeType":"YulTypedName","src":"21352:6:24","type":""},{"name":"value2","nativeSrc":"21360:6:24","nodeType":"YulTypedName","src":"21360:6:24","type":""}],"src":"21217:1039:24"},{"body":{"nativeSrc":"22388:817:24","nodeType":"YulBlock","src":"22388:817:24","statements":[{"body":{"nativeSrc":"22435:83:24","nodeType":"YulBlock","src":"22435:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22437:77:24","nodeType":"YulIdentifier","src":"22437:77:24"},"nativeSrc":"22437:79:24","nodeType":"YulFunctionCall","src":"22437:79:24"},"nativeSrc":"22437:79:24","nodeType":"YulExpressionStatement","src":"22437:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22409:7:24","nodeType":"YulIdentifier","src":"22409:7:24"},{"name":"headStart","nativeSrc":"22418:9:24","nodeType":"YulIdentifier","src":"22418:9:24"}],"functionName":{"name":"sub","nativeSrc":"22405:3:24","nodeType":"YulIdentifier","src":"22405:3:24"},"nativeSrc":"22405:23:24","nodeType":"YulFunctionCall","src":"22405:23:24"},{"kind":"number","nativeSrc":"22430:3:24","nodeType":"YulLiteral","src":"22430:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"22401:3:24","nodeType":"YulIdentifier","src":"22401:3:24"},"nativeSrc":"22401:33:24","nodeType":"YulFunctionCall","src":"22401:33:24"},"nativeSrc":"22398:120:24","nodeType":"YulIf","src":"22398:120:24"},{"nativeSrc":"22528:117:24","nodeType":"YulBlock","src":"22528:117:24","statements":[{"nativeSrc":"22543:15:24","nodeType":"YulVariableDeclaration","src":"22543:15:24","value":{"kind":"number","nativeSrc":"22557:1:24","nodeType":"YulLiteral","src":"22557:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"22547:6:24","nodeType":"YulTypedName","src":"22547:6:24","type":""}]},{"nativeSrc":"22572:63:24","nodeType":"YulAssignment","src":"22572:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22607:9:24","nodeType":"YulIdentifier","src":"22607:9:24"},{"name":"offset","nativeSrc":"22618:6:24","nodeType":"YulIdentifier","src":"22618:6:24"}],"functionName":{"name":"add","nativeSrc":"22603:3:24","nodeType":"YulIdentifier","src":"22603:3:24"},"nativeSrc":"22603:22:24","nodeType":"YulFunctionCall","src":"22603:22:24"},{"name":"dataEnd","nativeSrc":"22627:7:24","nodeType":"YulIdentifier","src":"22627:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"22582:20:24","nodeType":"YulIdentifier","src":"22582:20:24"},"nativeSrc":"22582:53:24","nodeType":"YulFunctionCall","src":"22582:53:24"},"variableNames":[{"name":"value0","nativeSrc":"22572:6:24","nodeType":"YulIdentifier","src":"22572:6:24"}]}]},{"nativeSrc":"22655:118:24","nodeType":"YulBlock","src":"22655:118:24","statements":[{"nativeSrc":"22670:16:24","nodeType":"YulVariableDeclaration","src":"22670:16:24","value":{"kind":"number","nativeSrc":"22684:2:24","nodeType":"YulLiteral","src":"22684:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"22674:6:24","nodeType":"YulTypedName","src":"22674:6:24","type":""}]},{"nativeSrc":"22700:63:24","nodeType":"YulAssignment","src":"22700:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22735:9:24","nodeType":"YulIdentifier","src":"22735:9:24"},{"name":"offset","nativeSrc":"22746:6:24","nodeType":"YulIdentifier","src":"22746:6:24"}],"functionName":{"name":"add","nativeSrc":"22731:3:24","nodeType":"YulIdentifier","src":"22731:3:24"},"nativeSrc":"22731:22:24","nodeType":"YulFunctionCall","src":"22731:22:24"},{"name":"dataEnd","nativeSrc":"22755:7:24","nodeType":"YulIdentifier","src":"22755:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"22710:20:24","nodeType":"YulIdentifier","src":"22710:20:24"},"nativeSrc":"22710:53:24","nodeType":"YulFunctionCall","src":"22710:53:24"},"variableNames":[{"name":"value1","nativeSrc":"22700:6:24","nodeType":"YulIdentifier","src":"22700:6:24"}]}]},{"nativeSrc":"22783:118:24","nodeType":"YulBlock","src":"22783:118:24","statements":[{"nativeSrc":"22798:16:24","nodeType":"YulVariableDeclaration","src":"22798:16:24","value":{"kind":"number","nativeSrc":"22812:2:24","nodeType":"YulLiteral","src":"22812:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"22802:6:24","nodeType":"YulTypedName","src":"22802:6:24","type":""}]},{"nativeSrc":"22828:63:24","nodeType":"YulAssignment","src":"22828:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22863:9:24","nodeType":"YulIdentifier","src":"22863:9:24"},{"name":"offset","nativeSrc":"22874:6:24","nodeType":"YulIdentifier","src":"22874:6:24"}],"functionName":{"name":"add","nativeSrc":"22859:3:24","nodeType":"YulIdentifier","src":"22859:3:24"},"nativeSrc":"22859:22:24","nodeType":"YulFunctionCall","src":"22859:22:24"},{"name":"dataEnd","nativeSrc":"22883:7:24","nodeType":"YulIdentifier","src":"22883:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"22838:20:24","nodeType":"YulIdentifier","src":"22838:20:24"},"nativeSrc":"22838:53:24","nodeType":"YulFunctionCall","src":"22838:53:24"},"variableNames":[{"name":"value2","nativeSrc":"22828:6:24","nodeType":"YulIdentifier","src":"22828:6:24"}]}]},{"nativeSrc":"22911:287:24","nodeType":"YulBlock","src":"22911:287:24","statements":[{"nativeSrc":"22926:46:24","nodeType":"YulVariableDeclaration","src":"22926:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22957:9:24","nodeType":"YulIdentifier","src":"22957:9:24"},{"kind":"number","nativeSrc":"22968:2:24","nodeType":"YulLiteral","src":"22968:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22953:3:24","nodeType":"YulIdentifier","src":"22953:3:24"},"nativeSrc":"22953:18:24","nodeType":"YulFunctionCall","src":"22953:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"22940:12:24","nodeType":"YulIdentifier","src":"22940:12:24"},"nativeSrc":"22940:32:24","nodeType":"YulFunctionCall","src":"22940:32:24"},"variables":[{"name":"offset","nativeSrc":"22930:6:24","nodeType":"YulTypedName","src":"22930:6:24","type":""}]},{"body":{"nativeSrc":"23019:83:24","nodeType":"YulBlock","src":"23019:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"23021:77:24","nodeType":"YulIdentifier","src":"23021:77:24"},"nativeSrc":"23021:79:24","nodeType":"YulFunctionCall","src":"23021:79:24"},"nativeSrc":"23021:79:24","nodeType":"YulExpressionStatement","src":"23021:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"22991:6:24","nodeType":"YulIdentifier","src":"22991:6:24"},{"kind":"number","nativeSrc":"22999:18:24","nodeType":"YulLiteral","src":"22999:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22988:2:24","nodeType":"YulIdentifier","src":"22988:2:24"},"nativeSrc":"22988:30:24","nodeType":"YulFunctionCall","src":"22988:30:24"},"nativeSrc":"22985:117:24","nodeType":"YulIf","src":"22985:117:24"},{"nativeSrc":"23116:72:24","nodeType":"YulAssignment","src":"23116:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23160:9:24","nodeType":"YulIdentifier","src":"23160:9:24"},{"name":"offset","nativeSrc":"23171:6:24","nodeType":"YulIdentifier","src":"23171:6:24"}],"functionName":{"name":"add","nativeSrc":"23156:3:24","nodeType":"YulIdentifier","src":"23156:3:24"},"nativeSrc":"23156:22:24","nodeType":"YulFunctionCall","src":"23156:22:24"},{"name":"dataEnd","nativeSrc":"23180:7:24","nodeType":"YulIdentifier","src":"23180:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"23126:29:24","nodeType":"YulIdentifier","src":"23126:29:24"},"nativeSrc":"23126:62:24","nodeType":"YulFunctionCall","src":"23126:62:24"},"variableNames":[{"name":"value3","nativeSrc":"23116:6:24","nodeType":"YulIdentifier","src":"23116:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"22262:943:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22334:9:24","nodeType":"YulTypedName","src":"22334:9:24","type":""},{"name":"dataEnd","nativeSrc":"22345:7:24","nodeType":"YulTypedName","src":"22345:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22357:6:24","nodeType":"YulTypedName","src":"22357:6:24","type":""},{"name":"value1","nativeSrc":"22365:6:24","nodeType":"YulTypedName","src":"22365:6:24","type":""},{"name":"value2","nativeSrc":"22373:6:24","nodeType":"YulTypedName","src":"22373:6:24","type":""},{"name":"value3","nativeSrc":"22381:6:24","nodeType":"YulTypedName","src":"22381:6:24","type":""}],"src":"22262:943:24"},{"body":{"nativeSrc":"23251:76:24","nodeType":"YulBlock","src":"23251:76:24","statements":[{"body":{"nativeSrc":"23305:16:24","nodeType":"YulBlock","src":"23305:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23314:1:24","nodeType":"YulLiteral","src":"23314:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"23317:1:24","nodeType":"YulLiteral","src":"23317:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23307:6:24","nodeType":"YulIdentifier","src":"23307:6:24"},"nativeSrc":"23307:12:24","nodeType":"YulFunctionCall","src":"23307:12:24"},"nativeSrc":"23307:12:24","nodeType":"YulExpressionStatement","src":"23307:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23274:5:24","nodeType":"YulIdentifier","src":"23274:5:24"},{"arguments":[{"name":"value","nativeSrc":"23296:5:24","nodeType":"YulIdentifier","src":"23296:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"23281:14:24","nodeType":"YulIdentifier","src":"23281:14:24"},"nativeSrc":"23281:21:24","nodeType":"YulFunctionCall","src":"23281:21:24"}],"functionName":{"name":"eq","nativeSrc":"23271:2:24","nodeType":"YulIdentifier","src":"23271:2:24"},"nativeSrc":"23271:32:24","nodeType":"YulFunctionCall","src":"23271:32:24"}],"functionName":{"name":"iszero","nativeSrc":"23264:6:24","nodeType":"YulIdentifier","src":"23264:6:24"},"nativeSrc":"23264:40:24","nodeType":"YulFunctionCall","src":"23264:40:24"},"nativeSrc":"23261:60:24","nodeType":"YulIf","src":"23261:60:24"}]},"name":"validator_revert_t_bool","nativeSrc":"23211:116:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23244:5:24","nodeType":"YulTypedName","src":"23244:5:24","type":""}],"src":"23211:116:24"},{"body":{"nativeSrc":"23382:84:24","nodeType":"YulBlock","src":"23382:84:24","statements":[{"nativeSrc":"23392:29:24","nodeType":"YulAssignment","src":"23392:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"23414:6:24","nodeType":"YulIdentifier","src":"23414:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"23401:12:24","nodeType":"YulIdentifier","src":"23401:12:24"},"nativeSrc":"23401:20:24","nodeType":"YulFunctionCall","src":"23401:20:24"},"variableNames":[{"name":"value","nativeSrc":"23392:5:24","nodeType":"YulIdentifier","src":"23392:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"23454:5:24","nodeType":"YulIdentifier","src":"23454:5:24"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"23430:23:24","nodeType":"YulIdentifier","src":"23430:23:24"},"nativeSrc":"23430:30:24","nodeType":"YulFunctionCall","src":"23430:30:24"},"nativeSrc":"23430:30:24","nodeType":"YulExpressionStatement","src":"23430:30:24"}]},"name":"abi_decode_t_bool","nativeSrc":"23333:133:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"23360:6:24","nodeType":"YulTypedName","src":"23360:6:24","type":""},{"name":"end","nativeSrc":"23368:3:24","nodeType":"YulTypedName","src":"23368:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"23376:5:24","nodeType":"YulTypedName","src":"23376:5:24","type":""}],"src":"23333:133:24"},{"body":{"nativeSrc":"23552:388:24","nodeType":"YulBlock","src":"23552:388:24","statements":[{"body":{"nativeSrc":"23598:83:24","nodeType":"YulBlock","src":"23598:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23600:77:24","nodeType":"YulIdentifier","src":"23600:77:24"},"nativeSrc":"23600:79:24","nodeType":"YulFunctionCall","src":"23600:79:24"},"nativeSrc":"23600:79:24","nodeType":"YulExpressionStatement","src":"23600:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23573:7:24","nodeType":"YulIdentifier","src":"23573:7:24"},{"name":"headStart","nativeSrc":"23582:9:24","nodeType":"YulIdentifier","src":"23582:9:24"}],"functionName":{"name":"sub","nativeSrc":"23569:3:24","nodeType":"YulIdentifier","src":"23569:3:24"},"nativeSrc":"23569:23:24","nodeType":"YulFunctionCall","src":"23569:23:24"},{"kind":"number","nativeSrc":"23594:2:24","nodeType":"YulLiteral","src":"23594:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"23565:3:24","nodeType":"YulIdentifier","src":"23565:3:24"},"nativeSrc":"23565:32:24","nodeType":"YulFunctionCall","src":"23565:32:24"},"nativeSrc":"23562:119:24","nodeType":"YulIf","src":"23562:119:24"},{"nativeSrc":"23691:117:24","nodeType":"YulBlock","src":"23691:117:24","statements":[{"nativeSrc":"23706:15:24","nodeType":"YulVariableDeclaration","src":"23706:15:24","value":{"kind":"number","nativeSrc":"23720:1:24","nodeType":"YulLiteral","src":"23720:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23710:6:24","nodeType":"YulTypedName","src":"23710:6:24","type":""}]},{"nativeSrc":"23735:63:24","nodeType":"YulAssignment","src":"23735:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23770:9:24","nodeType":"YulIdentifier","src":"23770:9:24"},{"name":"offset","nativeSrc":"23781:6:24","nodeType":"YulIdentifier","src":"23781:6:24"}],"functionName":{"name":"add","nativeSrc":"23766:3:24","nodeType":"YulIdentifier","src":"23766:3:24"},"nativeSrc":"23766:22:24","nodeType":"YulFunctionCall","src":"23766:22:24"},{"name":"dataEnd","nativeSrc":"23790:7:24","nodeType":"YulIdentifier","src":"23790:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23745:20:24","nodeType":"YulIdentifier","src":"23745:20:24"},"nativeSrc":"23745:53:24","nodeType":"YulFunctionCall","src":"23745:53:24"},"variableNames":[{"name":"value0","nativeSrc":"23735:6:24","nodeType":"YulIdentifier","src":"23735:6:24"}]}]},{"nativeSrc":"23818:115:24","nodeType":"YulBlock","src":"23818:115:24","statements":[{"nativeSrc":"23833:16:24","nodeType":"YulVariableDeclaration","src":"23833:16:24","value":{"kind":"number","nativeSrc":"23847:2:24","nodeType":"YulLiteral","src":"23847:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"23837:6:24","nodeType":"YulTypedName","src":"23837:6:24","type":""}]},{"nativeSrc":"23863:60:24","nodeType":"YulAssignment","src":"23863:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23895:9:24","nodeType":"YulIdentifier","src":"23895:9:24"},{"name":"offset","nativeSrc":"23906:6:24","nodeType":"YulIdentifier","src":"23906:6:24"}],"functionName":{"name":"add","nativeSrc":"23891:3:24","nodeType":"YulIdentifier","src":"23891:3:24"},"nativeSrc":"23891:22:24","nodeType":"YulFunctionCall","src":"23891:22:24"},{"name":"dataEnd","nativeSrc":"23915:7:24","nodeType":"YulIdentifier","src":"23915:7:24"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"23873:17:24","nodeType":"YulIdentifier","src":"23873:17:24"},"nativeSrc":"23873:50:24","nodeType":"YulFunctionCall","src":"23873:50:24"},"variableNames":[{"name":"value1","nativeSrc":"23863:6:24","nodeType":"YulIdentifier","src":"23863:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"23472:468:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23514:9:24","nodeType":"YulTypedName","src":"23514:9:24","type":""},{"name":"dataEnd","nativeSrc":"23525:7:24","nodeType":"YulTypedName","src":"23525:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23537:6:24","nodeType":"YulTypedName","src":"23537:6:24","type":""},{"name":"value1","nativeSrc":"23545:6:24","nodeType":"YulTypedName","src":"23545:6:24","type":""}],"src":"23472:468:24"},{"body":{"nativeSrc":"24029:391:24","nodeType":"YulBlock","src":"24029:391:24","statements":[{"body":{"nativeSrc":"24075:83:24","nodeType":"YulBlock","src":"24075:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"24077:77:24","nodeType":"YulIdentifier","src":"24077:77:24"},"nativeSrc":"24077:79:24","nodeType":"YulFunctionCall","src":"24077:79:24"},"nativeSrc":"24077:79:24","nodeType":"YulExpressionStatement","src":"24077:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"24050:7:24","nodeType":"YulIdentifier","src":"24050:7:24"},{"name":"headStart","nativeSrc":"24059:9:24","nodeType":"YulIdentifier","src":"24059:9:24"}],"functionName":{"name":"sub","nativeSrc":"24046:3:24","nodeType":"YulIdentifier","src":"24046:3:24"},"nativeSrc":"24046:23:24","nodeType":"YulFunctionCall","src":"24046:23:24"},{"kind":"number","nativeSrc":"24071:2:24","nodeType":"YulLiteral","src":"24071:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"24042:3:24","nodeType":"YulIdentifier","src":"24042:3:24"},"nativeSrc":"24042:32:24","nodeType":"YulFunctionCall","src":"24042:32:24"},"nativeSrc":"24039:119:24","nodeType":"YulIf","src":"24039:119:24"},{"nativeSrc":"24168:117:24","nodeType":"YulBlock","src":"24168:117:24","statements":[{"nativeSrc":"24183:15:24","nodeType":"YulVariableDeclaration","src":"24183:15:24","value":{"kind":"number","nativeSrc":"24197:1:24","nodeType":"YulLiteral","src":"24197:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"24187:6:24","nodeType":"YulTypedName","src":"24187:6:24","type":""}]},{"nativeSrc":"24212:63:24","nodeType":"YulAssignment","src":"24212:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24247:9:24","nodeType":"YulIdentifier","src":"24247:9:24"},{"name":"offset","nativeSrc":"24258:6:24","nodeType":"YulIdentifier","src":"24258:6:24"}],"functionName":{"name":"add","nativeSrc":"24243:3:24","nodeType":"YulIdentifier","src":"24243:3:24"},"nativeSrc":"24243:22:24","nodeType":"YulFunctionCall","src":"24243:22:24"},{"name":"dataEnd","nativeSrc":"24267:7:24","nodeType":"YulIdentifier","src":"24267:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"24222:20:24","nodeType":"YulIdentifier","src":"24222:20:24"},"nativeSrc":"24222:53:24","nodeType":"YulFunctionCall","src":"24222:53:24"},"variableNames":[{"name":"value0","nativeSrc":"24212:6:24","nodeType":"YulIdentifier","src":"24212:6:24"}]}]},{"nativeSrc":"24295:118:24","nodeType":"YulBlock","src":"24295:118:24","statements":[{"nativeSrc":"24310:16:24","nodeType":"YulVariableDeclaration","src":"24310:16:24","value":{"kind":"number","nativeSrc":"24324:2:24","nodeType":"YulLiteral","src":"24324:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"24314:6:24","nodeType":"YulTypedName","src":"24314:6:24","type":""}]},{"nativeSrc":"24340:63:24","nodeType":"YulAssignment","src":"24340:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24375:9:24","nodeType":"YulIdentifier","src":"24375:9:24"},{"name":"offset","nativeSrc":"24386:6:24","nodeType":"YulIdentifier","src":"24386:6:24"}],"functionName":{"name":"add","nativeSrc":"24371:3:24","nodeType":"YulIdentifier","src":"24371:3:24"},"nativeSrc":"24371:22:24","nodeType":"YulFunctionCall","src":"24371:22:24"},{"name":"dataEnd","nativeSrc":"24395:7:24","nodeType":"YulIdentifier","src":"24395:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"24350:20:24","nodeType":"YulIdentifier","src":"24350:20:24"},"nativeSrc":"24350:53:24","nodeType":"YulFunctionCall","src":"24350:53:24"},"variableNames":[{"name":"value1","nativeSrc":"24340:6:24","nodeType":"YulIdentifier","src":"24340:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"23946:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23991:9:24","nodeType":"YulTypedName","src":"23991:9:24","type":""},{"name":"dataEnd","nativeSrc":"24002:7:24","nodeType":"YulTypedName","src":"24002:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"24014:6:24","nodeType":"YulTypedName","src":"24014:6:24","type":""},{"name":"value1","nativeSrc":"24022:6:24","nodeType":"YulTypedName","src":"24022:6:24","type":""}],"src":"23946:474:24"},{"body":{"nativeSrc":"24569:946:24","nodeType":"YulBlock","src":"24569:946:24","statements":[{"body":{"nativeSrc":"24616:83:24","nodeType":"YulBlock","src":"24616:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"24618:77:24","nodeType":"YulIdentifier","src":"24618:77:24"},"nativeSrc":"24618:79:24","nodeType":"YulFunctionCall","src":"24618:79:24"},"nativeSrc":"24618:79:24","nodeType":"YulExpressionStatement","src":"24618:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"24590:7:24","nodeType":"YulIdentifier","src":"24590:7:24"},{"name":"headStart","nativeSrc":"24599:9:24","nodeType":"YulIdentifier","src":"24599:9:24"}],"functionName":{"name":"sub","nativeSrc":"24586:3:24","nodeType":"YulIdentifier","src":"24586:3:24"},"nativeSrc":"24586:23:24","nodeType":"YulFunctionCall","src":"24586:23:24"},{"kind":"number","nativeSrc":"24611:3:24","nodeType":"YulLiteral","src":"24611:3:24","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"24582:3:24","nodeType":"YulIdentifier","src":"24582:3:24"},"nativeSrc":"24582:33:24","nodeType":"YulFunctionCall","src":"24582:33:24"},"nativeSrc":"24579:120:24","nodeType":"YulIf","src":"24579:120:24"},{"nativeSrc":"24709:117:24","nodeType":"YulBlock","src":"24709:117:24","statements":[{"nativeSrc":"24724:15:24","nodeType":"YulVariableDeclaration","src":"24724:15:24","value":{"kind":"number","nativeSrc":"24738:1:24","nodeType":"YulLiteral","src":"24738:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"24728:6:24","nodeType":"YulTypedName","src":"24728:6:24","type":""}]},{"nativeSrc":"24753:63:24","nodeType":"YulAssignment","src":"24753:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24788:9:24","nodeType":"YulIdentifier","src":"24788:9:24"},{"name":"offset","nativeSrc":"24799:6:24","nodeType":"YulIdentifier","src":"24799:6:24"}],"functionName":{"name":"add","nativeSrc":"24784:3:24","nodeType":"YulIdentifier","src":"24784:3:24"},"nativeSrc":"24784:22:24","nodeType":"YulFunctionCall","src":"24784:22:24"},{"name":"dataEnd","nativeSrc":"24808:7:24","nodeType":"YulIdentifier","src":"24808:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"24763:20:24","nodeType":"YulIdentifier","src":"24763:20:24"},"nativeSrc":"24763:53:24","nodeType":"YulFunctionCall","src":"24763:53:24"},"variableNames":[{"name":"value0","nativeSrc":"24753:6:24","nodeType":"YulIdentifier","src":"24753:6:24"}]}]},{"nativeSrc":"24836:118:24","nodeType":"YulBlock","src":"24836:118:24","statements":[{"nativeSrc":"24851:16:24","nodeType":"YulVariableDeclaration","src":"24851:16:24","value":{"kind":"number","nativeSrc":"24865:2:24","nodeType":"YulLiteral","src":"24865:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"24855:6:24","nodeType":"YulTypedName","src":"24855:6:24","type":""}]},{"nativeSrc":"24881:63:24","nodeType":"YulAssignment","src":"24881:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24916:9:24","nodeType":"YulIdentifier","src":"24916:9:24"},{"name":"offset","nativeSrc":"24927:6:24","nodeType":"YulIdentifier","src":"24927:6:24"}],"functionName":{"name":"add","nativeSrc":"24912:3:24","nodeType":"YulIdentifier","src":"24912:3:24"},"nativeSrc":"24912:22:24","nodeType":"YulFunctionCall","src":"24912:22:24"},{"name":"dataEnd","nativeSrc":"24936:7:24","nodeType":"YulIdentifier","src":"24936:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"24891:20:24","nodeType":"YulIdentifier","src":"24891:20:24"},"nativeSrc":"24891:53:24","nodeType":"YulFunctionCall","src":"24891:53:24"},"variableNames":[{"name":"value1","nativeSrc":"24881:6:24","nodeType":"YulIdentifier","src":"24881:6:24"}]}]},{"nativeSrc":"24964:118:24","nodeType":"YulBlock","src":"24964:118:24","statements":[{"nativeSrc":"24979:16:24","nodeType":"YulVariableDeclaration","src":"24979:16:24","value":{"kind":"number","nativeSrc":"24993:2:24","nodeType":"YulLiteral","src":"24993:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"24983:6:24","nodeType":"YulTypedName","src":"24983:6:24","type":""}]},{"nativeSrc":"25009:63:24","nodeType":"YulAssignment","src":"25009:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25044:9:24","nodeType":"YulIdentifier","src":"25044:9:24"},{"name":"offset","nativeSrc":"25055:6:24","nodeType":"YulIdentifier","src":"25055:6:24"}],"functionName":{"name":"add","nativeSrc":"25040:3:24","nodeType":"YulIdentifier","src":"25040:3:24"},"nativeSrc":"25040:22:24","nodeType":"YulFunctionCall","src":"25040:22:24"},{"name":"dataEnd","nativeSrc":"25064:7:24","nodeType":"YulIdentifier","src":"25064:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"25019:20:24","nodeType":"YulIdentifier","src":"25019:20:24"},"nativeSrc":"25019:53:24","nodeType":"YulFunctionCall","src":"25019:53:24"},"variableNames":[{"name":"value2","nativeSrc":"25009:6:24","nodeType":"YulIdentifier","src":"25009:6:24"}]}]},{"nativeSrc":"25092:118:24","nodeType":"YulBlock","src":"25092:118:24","statements":[{"nativeSrc":"25107:16:24","nodeType":"YulVariableDeclaration","src":"25107:16:24","value":{"kind":"number","nativeSrc":"25121:2:24","nodeType":"YulLiteral","src":"25121:2:24","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"25111:6:24","nodeType":"YulTypedName","src":"25111:6:24","type":""}]},{"nativeSrc":"25137:63:24","nodeType":"YulAssignment","src":"25137:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25172:9:24","nodeType":"YulIdentifier","src":"25172:9:24"},{"name":"offset","nativeSrc":"25183:6:24","nodeType":"YulIdentifier","src":"25183:6:24"}],"functionName":{"name":"add","nativeSrc":"25168:3:24","nodeType":"YulIdentifier","src":"25168:3:24"},"nativeSrc":"25168:22:24","nodeType":"YulFunctionCall","src":"25168:22:24"},{"name":"dataEnd","nativeSrc":"25192:7:24","nodeType":"YulIdentifier","src":"25192:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"25147:20:24","nodeType":"YulIdentifier","src":"25147:20:24"},"nativeSrc":"25147:53:24","nodeType":"YulFunctionCall","src":"25147:53:24"},"variableNames":[{"name":"value3","nativeSrc":"25137:6:24","nodeType":"YulIdentifier","src":"25137:6:24"}]}]},{"nativeSrc":"25220:288:24","nodeType":"YulBlock","src":"25220:288:24","statements":[{"nativeSrc":"25235:47:24","nodeType":"YulVariableDeclaration","src":"25235:47:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25266:9:24","nodeType":"YulIdentifier","src":"25266:9:24"},{"kind":"number","nativeSrc":"25277:3:24","nodeType":"YulLiteral","src":"25277:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"25262:3:24","nodeType":"YulIdentifier","src":"25262:3:24"},"nativeSrc":"25262:19:24","nodeType":"YulFunctionCall","src":"25262:19:24"}],"functionName":{"name":"calldataload","nativeSrc":"25249:12:24","nodeType":"YulIdentifier","src":"25249:12:24"},"nativeSrc":"25249:33:24","nodeType":"YulFunctionCall","src":"25249:33:24"},"variables":[{"name":"offset","nativeSrc":"25239:6:24","nodeType":"YulTypedName","src":"25239:6:24","type":""}]},{"body":{"nativeSrc":"25329:83:24","nodeType":"YulBlock","src":"25329:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"25331:77:24","nodeType":"YulIdentifier","src":"25331:77:24"},"nativeSrc":"25331:79:24","nodeType":"YulFunctionCall","src":"25331:79:24"},"nativeSrc":"25331:79:24","nodeType":"YulExpressionStatement","src":"25331:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"25301:6:24","nodeType":"YulIdentifier","src":"25301:6:24"},{"kind":"number","nativeSrc":"25309:18:24","nodeType":"YulLiteral","src":"25309:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25298:2:24","nodeType":"YulIdentifier","src":"25298:2:24"},"nativeSrc":"25298:30:24","nodeType":"YulFunctionCall","src":"25298:30:24"},"nativeSrc":"25295:117:24","nodeType":"YulIf","src":"25295:117:24"},{"nativeSrc":"25426:72:24","nodeType":"YulAssignment","src":"25426:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25470:9:24","nodeType":"YulIdentifier","src":"25470:9:24"},{"name":"offset","nativeSrc":"25481:6:24","nodeType":"YulIdentifier","src":"25481:6:24"}],"functionName":{"name":"add","nativeSrc":"25466:3:24","nodeType":"YulIdentifier","src":"25466:3:24"},"nativeSrc":"25466:22:24","nodeType":"YulFunctionCall","src":"25466:22:24"},{"name":"dataEnd","nativeSrc":"25490:7:24","nodeType":"YulIdentifier","src":"25490:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"25436:29:24","nodeType":"YulIdentifier","src":"25436:29:24"},"nativeSrc":"25436:62:24","nodeType":"YulFunctionCall","src":"25436:62:24"},"variableNames":[{"name":"value4","nativeSrc":"25426:6:24","nodeType":"YulIdentifier","src":"25426:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"24426:1089:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24507:9:24","nodeType":"YulTypedName","src":"24507:9:24","type":""},{"name":"dataEnd","nativeSrc":"24518:7:24","nodeType":"YulTypedName","src":"24518:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"24530:6:24","nodeType":"YulTypedName","src":"24530:6:24","type":""},{"name":"value1","nativeSrc":"24538:6:24","nodeType":"YulTypedName","src":"24538:6:24","type":""},{"name":"value2","nativeSrc":"24546:6:24","nodeType":"YulTypedName","src":"24546:6:24","type":""},{"name":"value3","nativeSrc":"24554:6:24","nodeType":"YulTypedName","src":"24554:6:24","type":""},{"name":"value4","nativeSrc":"24562:6:24","nodeType":"YulTypedName","src":"24562:6:24","type":""}],"src":"24426:1089:24"},{"body":{"nativeSrc":"25621:519:24","nodeType":"YulBlock","src":"25621:519:24","statements":[{"body":{"nativeSrc":"25667:83:24","nodeType":"YulBlock","src":"25667:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"25669:77:24","nodeType":"YulIdentifier","src":"25669:77:24"},"nativeSrc":"25669:79:24","nodeType":"YulFunctionCall","src":"25669:79:24"},"nativeSrc":"25669:79:24","nodeType":"YulExpressionStatement","src":"25669:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"25642:7:24","nodeType":"YulIdentifier","src":"25642:7:24"},{"name":"headStart","nativeSrc":"25651:9:24","nodeType":"YulIdentifier","src":"25651:9:24"}],"functionName":{"name":"sub","nativeSrc":"25638:3:24","nodeType":"YulIdentifier","src":"25638:3:24"},"nativeSrc":"25638:23:24","nodeType":"YulFunctionCall","src":"25638:23:24"},{"kind":"number","nativeSrc":"25663:2:24","nodeType":"YulLiteral","src":"25663:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"25634:3:24","nodeType":"YulIdentifier","src":"25634:3:24"},"nativeSrc":"25634:32:24","nodeType":"YulFunctionCall","src":"25634:32:24"},"nativeSrc":"25631:119:24","nodeType":"YulIf","src":"25631:119:24"},{"nativeSrc":"25760:117:24","nodeType":"YulBlock","src":"25760:117:24","statements":[{"nativeSrc":"25775:15:24","nodeType":"YulVariableDeclaration","src":"25775:15:24","value":{"kind":"number","nativeSrc":"25789:1:24","nodeType":"YulLiteral","src":"25789:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"25779:6:24","nodeType":"YulTypedName","src":"25779:6:24","type":""}]},{"nativeSrc":"25804:63:24","nodeType":"YulAssignment","src":"25804:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25839:9:24","nodeType":"YulIdentifier","src":"25839:9:24"},{"name":"offset","nativeSrc":"25850:6:24","nodeType":"YulIdentifier","src":"25850:6:24"}],"functionName":{"name":"add","nativeSrc":"25835:3:24","nodeType":"YulIdentifier","src":"25835:3:24"},"nativeSrc":"25835:22:24","nodeType":"YulFunctionCall","src":"25835:22:24"},{"name":"dataEnd","nativeSrc":"25859:7:24","nodeType":"YulIdentifier","src":"25859:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"25814:20:24","nodeType":"YulIdentifier","src":"25814:20:24"},"nativeSrc":"25814:53:24","nodeType":"YulFunctionCall","src":"25814:53:24"},"variableNames":[{"name":"value0","nativeSrc":"25804:6:24","nodeType":"YulIdentifier","src":"25804:6:24"}]}]},{"nativeSrc":"25887:118:24","nodeType":"YulBlock","src":"25887:118:24","statements":[{"nativeSrc":"25902:16:24","nodeType":"YulVariableDeclaration","src":"25902:16:24","value":{"kind":"number","nativeSrc":"25916:2:24","nodeType":"YulLiteral","src":"25916:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"25906:6:24","nodeType":"YulTypedName","src":"25906:6:24","type":""}]},{"nativeSrc":"25932:63:24","nodeType":"YulAssignment","src":"25932:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25967:9:24","nodeType":"YulIdentifier","src":"25967:9:24"},{"name":"offset","nativeSrc":"25978:6:24","nodeType":"YulIdentifier","src":"25978:6:24"}],"functionName":{"name":"add","nativeSrc":"25963:3:24","nodeType":"YulIdentifier","src":"25963:3:24"},"nativeSrc":"25963:22:24","nodeType":"YulFunctionCall","src":"25963:22:24"},{"name":"dataEnd","nativeSrc":"25987:7:24","nodeType":"YulIdentifier","src":"25987:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"25942:20:24","nodeType":"YulIdentifier","src":"25942:20:24"},"nativeSrc":"25942:53:24","nodeType":"YulFunctionCall","src":"25942:53:24"},"variableNames":[{"name":"value1","nativeSrc":"25932:6:24","nodeType":"YulIdentifier","src":"25932:6:24"}]}]},{"nativeSrc":"26015:118:24","nodeType":"YulBlock","src":"26015:118:24","statements":[{"nativeSrc":"26030:16:24","nodeType":"YulVariableDeclaration","src":"26030:16:24","value":{"kind":"number","nativeSrc":"26044:2:24","nodeType":"YulLiteral","src":"26044:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"26034:6:24","nodeType":"YulTypedName","src":"26034:6:24","type":""}]},{"nativeSrc":"26060:63:24","nodeType":"YulAssignment","src":"26060:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26095:9:24","nodeType":"YulIdentifier","src":"26095:9:24"},{"name":"offset","nativeSrc":"26106:6:24","nodeType":"YulIdentifier","src":"26106:6:24"}],"functionName":{"name":"add","nativeSrc":"26091:3:24","nodeType":"YulIdentifier","src":"26091:3:24"},"nativeSrc":"26091:22:24","nodeType":"YulFunctionCall","src":"26091:22:24"},{"name":"dataEnd","nativeSrc":"26115:7:24","nodeType":"YulIdentifier","src":"26115:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"26070:20:24","nodeType":"YulIdentifier","src":"26070:20:24"},"nativeSrc":"26070:53:24","nodeType":"YulFunctionCall","src":"26070:53:24"},"variableNames":[{"name":"value2","nativeSrc":"26060:6:24","nodeType":"YulIdentifier","src":"26060:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nativeSrc":"25521:619:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25575:9:24","nodeType":"YulTypedName","src":"25575:9:24","type":""},{"name":"dataEnd","nativeSrc":"25586:7:24","nodeType":"YulTypedName","src":"25586:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"25598:6:24","nodeType":"YulTypedName","src":"25598:6:24","type":""},{"name":"value1","nativeSrc":"25606:6:24","nodeType":"YulTypedName","src":"25606:6:24","type":""},{"name":"value2","nativeSrc":"25614:6:24","nodeType":"YulTypedName","src":"25614:6:24","type":""}],"src":"25521:619:24"},{"body":{"nativeSrc":"26260:34:24","nodeType":"YulBlock","src":"26260:34:24","statements":[{"nativeSrc":"26270:18:24","nodeType":"YulAssignment","src":"26270:18:24","value":{"name":"pos","nativeSrc":"26285:3:24","nodeType":"YulIdentifier","src":"26285:3:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"26270:11:24","nodeType":"YulIdentifier","src":"26270:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26146:148:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26232:3:24","nodeType":"YulTypedName","src":"26232:3:24","type":""},{"name":"length","nativeSrc":"26237:6:24","nodeType":"YulTypedName","src":"26237:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"26248:11:24","nodeType":"YulTypedName","src":"26248:11:24","type":""}],"src":"26146:148:24"},{"body":{"nativeSrc":"26410:280:24","nodeType":"YulBlock","src":"26410:280:24","statements":[{"nativeSrc":"26420:53:24","nodeType":"YulVariableDeclaration","src":"26420:53:24","value":{"arguments":[{"name":"value","nativeSrc":"26467:5:24","nodeType":"YulIdentifier","src":"26467:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"26434:32:24","nodeType":"YulIdentifier","src":"26434:32:24"},"nativeSrc":"26434:39:24","nodeType":"YulFunctionCall","src":"26434:39:24"},"variables":[{"name":"length","nativeSrc":"26424:6:24","nodeType":"YulTypedName","src":"26424:6:24","type":""}]},{"nativeSrc":"26482:96:24","nodeType":"YulAssignment","src":"26482:96:24","value":{"arguments":[{"name":"pos","nativeSrc":"26566:3:24","nodeType":"YulIdentifier","src":"26566:3:24"},{"name":"length","nativeSrc":"26571:6:24","nodeType":"YulIdentifier","src":"26571:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26489:76:24","nodeType":"YulIdentifier","src":"26489:76:24"},"nativeSrc":"26489:89:24","nodeType":"YulFunctionCall","src":"26489:89:24"},"variableNames":[{"name":"pos","nativeSrc":"26482:3:24","nodeType":"YulIdentifier","src":"26482:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26626:5:24","nodeType":"YulIdentifier","src":"26626:5:24"},{"kind":"number","nativeSrc":"26633:4:24","nodeType":"YulLiteral","src":"26633:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26622:3:24","nodeType":"YulIdentifier","src":"26622:3:24"},"nativeSrc":"26622:16:24","nodeType":"YulFunctionCall","src":"26622:16:24"},{"name":"pos","nativeSrc":"26640:3:24","nodeType":"YulIdentifier","src":"26640:3:24"},{"name":"length","nativeSrc":"26645:6:24","nodeType":"YulIdentifier","src":"26645:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"26587:34:24","nodeType":"YulIdentifier","src":"26587:34:24"},"nativeSrc":"26587:65:24","nodeType":"YulFunctionCall","src":"26587:65:24"},"nativeSrc":"26587:65:24","nodeType":"YulExpressionStatement","src":"26587:65:24"},{"nativeSrc":"26661:23:24","nodeType":"YulAssignment","src":"26661:23:24","value":{"arguments":[{"name":"pos","nativeSrc":"26672:3:24","nodeType":"YulIdentifier","src":"26672:3:24"},{"name":"length","nativeSrc":"26677:6:24","nodeType":"YulIdentifier","src":"26677:6:24"}],"functionName":{"name":"add","nativeSrc":"26668:3:24","nodeType":"YulIdentifier","src":"26668:3:24"},"nativeSrc":"26668:16:24","nodeType":"YulFunctionCall","src":"26668:16:24"},"variableNames":[{"name":"end","nativeSrc":"26661:3:24","nodeType":"YulIdentifier","src":"26661:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26300:390:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26391:5:24","nodeType":"YulTypedName","src":"26391:5:24","type":""},{"name":"pos","nativeSrc":"26398:3:24","nodeType":"YulTypedName","src":"26398:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26406:3:24","nodeType":"YulTypedName","src":"26406:3:24","type":""}],"src":"26300:390:24"},{"body":{"nativeSrc":"26880:251:24","nodeType":"YulBlock","src":"26880:251:24","statements":[{"nativeSrc":"26891:102:24","nodeType":"YulAssignment","src":"26891:102:24","value":{"arguments":[{"name":"value0","nativeSrc":"26980:6:24","nodeType":"YulIdentifier","src":"26980:6:24"},{"name":"pos","nativeSrc":"26989:3:24","nodeType":"YulIdentifier","src":"26989:3:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26898:81:24","nodeType":"YulIdentifier","src":"26898:81:24"},"nativeSrc":"26898:95:24","nodeType":"YulFunctionCall","src":"26898:95:24"},"variableNames":[{"name":"pos","nativeSrc":"26891:3:24","nodeType":"YulIdentifier","src":"26891:3:24"}]},{"nativeSrc":"27003:102:24","nodeType":"YulAssignment","src":"27003:102:24","value":{"arguments":[{"name":"value1","nativeSrc":"27092:6:24","nodeType":"YulIdentifier","src":"27092:6:24"},{"name":"pos","nativeSrc":"27101:3:24","nodeType":"YulIdentifier","src":"27101:3:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"27010:81:24","nodeType":"YulIdentifier","src":"27010:81:24"},"nativeSrc":"27010:95:24","nodeType":"YulFunctionCall","src":"27010:95:24"},"variableNames":[{"name":"pos","nativeSrc":"27003:3:24","nodeType":"YulIdentifier","src":"27003:3:24"}]},{"nativeSrc":"27115:10:24","nodeType":"YulAssignment","src":"27115:10:24","value":{"name":"pos","nativeSrc":"27122:3:24","nodeType":"YulIdentifier","src":"27122:3:24"},"variableNames":[{"name":"end","nativeSrc":"27115:3:24","nodeType":"YulIdentifier","src":"27115:3:24"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"26696:435:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26851:3:24","nodeType":"YulTypedName","src":"26851:3:24","type":""},{"name":"value1","nativeSrc":"26857:6:24","nodeType":"YulTypedName","src":"26857:6:24","type":""},{"name":"value0","nativeSrc":"26865:6:24","nodeType":"YulTypedName","src":"26865:6:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26876:3:24","nodeType":"YulTypedName","src":"26876:3:24","type":""}],"src":"26696:435:24"},{"body":{"nativeSrc":"27165:152:24","nodeType":"YulBlock","src":"27165:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27182:1:24","nodeType":"YulLiteral","src":"27182:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"27185:77:24","nodeType":"YulLiteral","src":"27185:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"27175:6:24","nodeType":"YulIdentifier","src":"27175:6:24"},"nativeSrc":"27175:88:24","nodeType":"YulFunctionCall","src":"27175:88:24"},"nativeSrc":"27175:88:24","nodeType":"YulExpressionStatement","src":"27175:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27279:1:24","nodeType":"YulLiteral","src":"27279:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"27282:4:24","nodeType":"YulLiteral","src":"27282:4:24","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"27272:6:24","nodeType":"YulIdentifier","src":"27272:6:24"},"nativeSrc":"27272:15:24","nodeType":"YulFunctionCall","src":"27272:15:24"},"nativeSrc":"27272:15:24","nodeType":"YulExpressionStatement","src":"27272:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27303:1:24","nodeType":"YulLiteral","src":"27303:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"27306:4:24","nodeType":"YulLiteral","src":"27306:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"27296:6:24","nodeType":"YulIdentifier","src":"27296:6:24"},"nativeSrc":"27296:15:24","nodeType":"YulFunctionCall","src":"27296:15:24"},"nativeSrc":"27296:15:24","nodeType":"YulExpressionStatement","src":"27296:15:24"}]},"name":"panic_error_0x32","nativeSrc":"27137:180:24","nodeType":"YulFunctionDefinition","src":"27137:180:24"},{"body":{"nativeSrc":"27388:53:24","nodeType":"YulBlock","src":"27388:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"27405:3:24","nodeType":"YulIdentifier","src":"27405:3:24"},{"arguments":[{"name":"value","nativeSrc":"27428:5:24","nodeType":"YulIdentifier","src":"27428:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"27410:17:24","nodeType":"YulIdentifier","src":"27410:17:24"},"nativeSrc":"27410:24:24","nodeType":"YulFunctionCall","src":"27410:24:24"}],"functionName":{"name":"mstore","nativeSrc":"27398:6:24","nodeType":"YulIdentifier","src":"27398:6:24"},"nativeSrc":"27398:37:24","nodeType":"YulFunctionCall","src":"27398:37:24"},"nativeSrc":"27398:37:24","nodeType":"YulExpressionStatement","src":"27398:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27323:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27376:5:24","nodeType":"YulTypedName","src":"27376:5:24","type":""},{"name":"pos","nativeSrc":"27383:3:24","nodeType":"YulTypedName","src":"27383:3:24","type":""}],"src":"27323:118:24"},{"body":{"nativeSrc":"27573:206:24","nodeType":"YulBlock","src":"27573:206:24","statements":[{"nativeSrc":"27583:26:24","nodeType":"YulAssignment","src":"27583:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"27595:9:24","nodeType":"YulIdentifier","src":"27595:9:24"},{"kind":"number","nativeSrc":"27606:2:24","nodeType":"YulLiteral","src":"27606:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27591:3:24","nodeType":"YulIdentifier","src":"27591:3:24"},"nativeSrc":"27591:18:24","nodeType":"YulFunctionCall","src":"27591:18:24"},"variableNames":[{"name":"tail","nativeSrc":"27583:4:24","nodeType":"YulIdentifier","src":"27583:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27663:6:24","nodeType":"YulIdentifier","src":"27663:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"27676:9:24","nodeType":"YulIdentifier","src":"27676:9:24"},{"kind":"number","nativeSrc":"27687:1:24","nodeType":"YulLiteral","src":"27687:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27672:3:24","nodeType":"YulIdentifier","src":"27672:3:24"},"nativeSrc":"27672:17:24","nodeType":"YulFunctionCall","src":"27672:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27619:43:24","nodeType":"YulIdentifier","src":"27619:43:24"},"nativeSrc":"27619:71:24","nodeType":"YulFunctionCall","src":"27619:71:24"},"nativeSrc":"27619:71:24","nodeType":"YulExpressionStatement","src":"27619:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27744:6:24","nodeType":"YulIdentifier","src":"27744:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"27757:9:24","nodeType":"YulIdentifier","src":"27757:9:24"},{"kind":"number","nativeSrc":"27768:2:24","nodeType":"YulLiteral","src":"27768:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27753:3:24","nodeType":"YulIdentifier","src":"27753:3:24"},"nativeSrc":"27753:18:24","nodeType":"YulFunctionCall","src":"27753:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27700:43:24","nodeType":"YulIdentifier","src":"27700:43:24"},"nativeSrc":"27700:72:24","nodeType":"YulFunctionCall","src":"27700:72:24"},"nativeSrc":"27700:72:24","nodeType":"YulExpressionStatement","src":"27700:72:24"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"27447:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27537:9:24","nodeType":"YulTypedName","src":"27537:9:24","type":""},{"name":"value1","nativeSrc":"27549:6:24","nodeType":"YulTypedName","src":"27549:6:24","type":""},{"name":"value0","nativeSrc":"27557:6:24","nodeType":"YulTypedName","src":"27557:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27568:4:24","nodeType":"YulTypedName","src":"27568:4:24","type":""}],"src":"27447:332:24"},{"body":{"nativeSrc":"27911:206:24","nodeType":"YulBlock","src":"27911:206:24","statements":[{"nativeSrc":"27921:26:24","nodeType":"YulAssignment","src":"27921:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"27933:9:24","nodeType":"YulIdentifier","src":"27933:9:24"},{"kind":"number","nativeSrc":"27944:2:24","nodeType":"YulLiteral","src":"27944:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27929:3:24","nodeType":"YulIdentifier","src":"27929:3:24"},"nativeSrc":"27929:18:24","nodeType":"YulFunctionCall","src":"27929:18:24"},"variableNames":[{"name":"tail","nativeSrc":"27921:4:24","nodeType":"YulIdentifier","src":"27921:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28001:6:24","nodeType":"YulIdentifier","src":"28001:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"28014:9:24","nodeType":"YulIdentifier","src":"28014:9:24"},{"kind":"number","nativeSrc":"28025:1:24","nodeType":"YulLiteral","src":"28025:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28010:3:24","nodeType":"YulIdentifier","src":"28010:3:24"},"nativeSrc":"28010:17:24","nodeType":"YulFunctionCall","src":"28010:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27957:43:24","nodeType":"YulIdentifier","src":"27957:43:24"},"nativeSrc":"27957:71:24","nodeType":"YulFunctionCall","src":"27957:71:24"},"nativeSrc":"27957:71:24","nodeType":"YulExpressionStatement","src":"27957:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28082:6:24","nodeType":"YulIdentifier","src":"28082:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"28095:9:24","nodeType":"YulIdentifier","src":"28095:9:24"},{"kind":"number","nativeSrc":"28106:2:24","nodeType":"YulLiteral","src":"28106:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28091:3:24","nodeType":"YulIdentifier","src":"28091:3:24"},"nativeSrc":"28091:18:24","nodeType":"YulFunctionCall","src":"28091:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28038:43:24","nodeType":"YulIdentifier","src":"28038:43:24"},"nativeSrc":"28038:72:24","nodeType":"YulFunctionCall","src":"28038:72:24"},"nativeSrc":"28038:72:24","nodeType":"YulExpressionStatement","src":"28038:72:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"27785:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27875:9:24","nodeType":"YulTypedName","src":"27875:9:24","type":""},{"name":"value1","nativeSrc":"27887:6:24","nodeType":"YulTypedName","src":"27887:6:24","type":""},{"name":"value0","nativeSrc":"27895:6:24","nodeType":"YulTypedName","src":"27895:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27906:4:24","nodeType":"YulTypedName","src":"27906:4:24","type":""}],"src":"27785:332:24"},{"body":{"nativeSrc":"28151:152:24","nodeType":"YulBlock","src":"28151:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28168:1:24","nodeType":"YulLiteral","src":"28168:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"28171:77:24","nodeType":"YulLiteral","src":"28171:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"28161:6:24","nodeType":"YulIdentifier","src":"28161:6:24"},"nativeSrc":"28161:88:24","nodeType":"YulFunctionCall","src":"28161:88:24"},"nativeSrc":"28161:88:24","nodeType":"YulExpressionStatement","src":"28161:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28265:1:24","nodeType":"YulLiteral","src":"28265:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"28268:4:24","nodeType":"YulLiteral","src":"28268:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"28258:6:24","nodeType":"YulIdentifier","src":"28258:6:24"},"nativeSrc":"28258:15:24","nodeType":"YulFunctionCall","src":"28258:15:24"},"nativeSrc":"28258:15:24","nodeType":"YulExpressionStatement","src":"28258:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28289:1:24","nodeType":"YulLiteral","src":"28289:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"28292:4:24","nodeType":"YulLiteral","src":"28292:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28282:6:24","nodeType":"YulIdentifier","src":"28282:6:24"},"nativeSrc":"28282:15:24","nodeType":"YulFunctionCall","src":"28282:15:24"},"nativeSrc":"28282:15:24","nodeType":"YulExpressionStatement","src":"28282:15:24"}]},"name":"panic_error_0x22","nativeSrc":"28123:180:24","nodeType":"YulFunctionDefinition","src":"28123:180:24"},{"body":{"nativeSrc":"28360:269:24","nodeType":"YulBlock","src":"28360:269:24","statements":[{"nativeSrc":"28370:22:24","nodeType":"YulAssignment","src":"28370:22:24","value":{"arguments":[{"name":"data","nativeSrc":"28384:4:24","nodeType":"YulIdentifier","src":"28384:4:24"},{"kind":"number","nativeSrc":"28390:1:24","nodeType":"YulLiteral","src":"28390:1:24","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"28380:3:24","nodeType":"YulIdentifier","src":"28380:3:24"},"nativeSrc":"28380:12:24","nodeType":"YulFunctionCall","src":"28380:12:24"},"variableNames":[{"name":"length","nativeSrc":"28370:6:24","nodeType":"YulIdentifier","src":"28370:6:24"}]},{"nativeSrc":"28401:38:24","nodeType":"YulVariableDeclaration","src":"28401:38:24","value":{"arguments":[{"name":"data","nativeSrc":"28431:4:24","nodeType":"YulIdentifier","src":"28431:4:24"},{"kind":"number","nativeSrc":"28437:1:24","nodeType":"YulLiteral","src":"28437:1:24","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"28427:3:24","nodeType":"YulIdentifier","src":"28427:3:24"},"nativeSrc":"28427:12:24","nodeType":"YulFunctionCall","src":"28427:12:24"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"28405:18:24","nodeType":"YulTypedName","src":"28405:18:24","type":""}]},{"body":{"nativeSrc":"28478:51:24","nodeType":"YulBlock","src":"28478:51:24","statements":[{"nativeSrc":"28492:27:24","nodeType":"YulAssignment","src":"28492:27:24","value":{"arguments":[{"name":"length","nativeSrc":"28506:6:24","nodeType":"YulIdentifier","src":"28506:6:24"},{"kind":"number","nativeSrc":"28514:4:24","nodeType":"YulLiteral","src":"28514:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"28502:3:24","nodeType":"YulIdentifier","src":"28502:3:24"},"nativeSrc":"28502:17:24","nodeType":"YulFunctionCall","src":"28502:17:24"},"variableNames":[{"name":"length","nativeSrc":"28492:6:24","nodeType":"YulIdentifier","src":"28492:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"28458:18:24","nodeType":"YulIdentifier","src":"28458:18:24"}],"functionName":{"name":"iszero","nativeSrc":"28451:6:24","nodeType":"YulIdentifier","src":"28451:6:24"},"nativeSrc":"28451:26:24","nodeType":"YulFunctionCall","src":"28451:26:24"},"nativeSrc":"28448:81:24","nodeType":"YulIf","src":"28448:81:24"},{"body":{"nativeSrc":"28581:42:24","nodeType":"YulBlock","src":"28581:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"28595:16:24","nodeType":"YulIdentifier","src":"28595:16:24"},"nativeSrc":"28595:18:24","nodeType":"YulFunctionCall","src":"28595:18:24"},"nativeSrc":"28595:18:24","nodeType":"YulExpressionStatement","src":"28595:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"28545:18:24","nodeType":"YulIdentifier","src":"28545:18:24"},{"arguments":[{"name":"length","nativeSrc":"28568:6:24","nodeType":"YulIdentifier","src":"28568:6:24"},{"kind":"number","nativeSrc":"28576:2:24","nodeType":"YulLiteral","src":"28576:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"28565:2:24","nodeType":"YulIdentifier","src":"28565:2:24"},"nativeSrc":"28565:14:24","nodeType":"YulFunctionCall","src":"28565:14:24"}],"functionName":{"name":"eq","nativeSrc":"28542:2:24","nodeType":"YulIdentifier","src":"28542:2:24"},"nativeSrc":"28542:38:24","nodeType":"YulFunctionCall","src":"28542:38:24"},"nativeSrc":"28539:84:24","nodeType":"YulIf","src":"28539:84:24"}]},"name":"extract_byte_array_length","nativeSrc":"28309:320:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"28344:4:24","nodeType":"YulTypedName","src":"28344:4:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"28353:6:24","nodeType":"YulTypedName","src":"28353:6:24","type":""}],"src":"28309:320:24"},{"body":{"nativeSrc":"28689:87:24","nodeType":"YulBlock","src":"28689:87:24","statements":[{"nativeSrc":"28699:11:24","nodeType":"YulAssignment","src":"28699:11:24","value":{"name":"ptr","nativeSrc":"28707:3:24","nodeType":"YulIdentifier","src":"28707:3:24"},"variableNames":[{"name":"data","nativeSrc":"28699:4:24","nodeType":"YulIdentifier","src":"28699:4:24"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28727:1:24","nodeType":"YulLiteral","src":"28727:1:24","type":"","value":"0"},{"name":"ptr","nativeSrc":"28730:3:24","nodeType":"YulIdentifier","src":"28730:3:24"}],"functionName":{"name":"mstore","nativeSrc":"28720:6:24","nodeType":"YulIdentifier","src":"28720:6:24"},"nativeSrc":"28720:14:24","nodeType":"YulFunctionCall","src":"28720:14:24"},"nativeSrc":"28720:14:24","nodeType":"YulExpressionStatement","src":"28720:14:24"},{"nativeSrc":"28743:26:24","nodeType":"YulAssignment","src":"28743:26:24","value":{"arguments":[{"kind":"number","nativeSrc":"28761:1:24","nodeType":"YulLiteral","src":"28761:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"28764:4:24","nodeType":"YulLiteral","src":"28764:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"28751:9:24","nodeType":"YulIdentifier","src":"28751:9:24"},"nativeSrc":"28751:18:24","nodeType":"YulFunctionCall","src":"28751:18:24"},"variableNames":[{"name":"data","nativeSrc":"28743:4:24","nodeType":"YulIdentifier","src":"28743:4:24"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"28635:141:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"28676:3:24","nodeType":"YulTypedName","src":"28676:3:24","type":""}],"returnVariables":[{"name":"data","nativeSrc":"28684:4:24","nodeType":"YulTypedName","src":"28684:4:24","type":""}],"src":"28635:141:24"},{"body":{"nativeSrc":"28826:49:24","nodeType":"YulBlock","src":"28826:49:24","statements":[{"nativeSrc":"28836:33:24","nodeType":"YulAssignment","src":"28836:33:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28854:5:24","nodeType":"YulIdentifier","src":"28854:5:24"},{"kind":"number","nativeSrc":"28861:2:24","nodeType":"YulLiteral","src":"28861:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"28850:3:24","nodeType":"YulIdentifier","src":"28850:3:24"},"nativeSrc":"28850:14:24","nodeType":"YulFunctionCall","src":"28850:14:24"},{"kind":"number","nativeSrc":"28866:2:24","nodeType":"YulLiteral","src":"28866:2:24","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"28846:3:24","nodeType":"YulIdentifier","src":"28846:3:24"},"nativeSrc":"28846:23:24","nodeType":"YulFunctionCall","src":"28846:23:24"},"variableNames":[{"name":"result","nativeSrc":"28836:6:24","nodeType":"YulIdentifier","src":"28836:6:24"}]}]},"name":"divide_by_32_ceil","nativeSrc":"28782:93:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28809:5:24","nodeType":"YulTypedName","src":"28809:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"28819:6:24","nodeType":"YulTypedName","src":"28819:6:24","type":""}],"src":"28782:93:24"},{"body":{"nativeSrc":"28934:54:24","nodeType":"YulBlock","src":"28934:54:24","statements":[{"nativeSrc":"28944:37:24","nodeType":"YulAssignment","src":"28944:37:24","value":{"arguments":[{"name":"bits","nativeSrc":"28969:4:24","nodeType":"YulIdentifier","src":"28969:4:24"},{"name":"value","nativeSrc":"28975:5:24","nodeType":"YulIdentifier","src":"28975:5:24"}],"functionName":{"name":"shl","nativeSrc":"28965:3:24","nodeType":"YulIdentifier","src":"28965:3:24"},"nativeSrc":"28965:16:24","nodeType":"YulFunctionCall","src":"28965:16:24"},"variableNames":[{"name":"newValue","nativeSrc":"28944:8:24","nodeType":"YulIdentifier","src":"28944:8:24"}]}]},"name":"shift_left_dynamic","nativeSrc":"28881:107:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"28909:4:24","nodeType":"YulTypedName","src":"28909:4:24","type":""},{"name":"value","nativeSrc":"28915:5:24","nodeType":"YulTypedName","src":"28915:5:24","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"28925:8:24","nodeType":"YulTypedName","src":"28925:8:24","type":""}],"src":"28881:107:24"},{"body":{"nativeSrc":"29070:317:24","nodeType":"YulBlock","src":"29070:317:24","statements":[{"nativeSrc":"29080:35:24","nodeType":"YulVariableDeclaration","src":"29080:35:24","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"29101:10:24","nodeType":"YulIdentifier","src":"29101:10:24"},{"kind":"number","nativeSrc":"29113:1:24","nodeType":"YulLiteral","src":"29113:1:24","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"29097:3:24","nodeType":"YulIdentifier","src":"29097:3:24"},"nativeSrc":"29097:18:24","nodeType":"YulFunctionCall","src":"29097:18:24"},"variables":[{"name":"shiftBits","nativeSrc":"29084:9:24","nodeType":"YulTypedName","src":"29084:9:24","type":""}]},{"nativeSrc":"29124:109:24","nodeType":"YulVariableDeclaration","src":"29124:109:24","value":{"arguments":[{"name":"shiftBits","nativeSrc":"29155:9:24","nodeType":"YulIdentifier","src":"29155:9:24"},{"kind":"number","nativeSrc":"29166:66:24","nodeType":"YulLiteral","src":"29166:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"29136:18:24","nodeType":"YulIdentifier","src":"29136:18:24"},"nativeSrc":"29136:97:24","nodeType":"YulFunctionCall","src":"29136:97:24"},"variables":[{"name":"mask","nativeSrc":"29128:4:24","nodeType":"YulTypedName","src":"29128:4:24","type":""}]},{"nativeSrc":"29242:51:24","nodeType":"YulAssignment","src":"29242:51:24","value":{"arguments":[{"name":"shiftBits","nativeSrc":"29273:9:24","nodeType":"YulIdentifier","src":"29273:9:24"},{"name":"toInsert","nativeSrc":"29284:8:24","nodeType":"YulIdentifier","src":"29284:8:24"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"29254:18:24","nodeType":"YulIdentifier","src":"29254:18:24"},"nativeSrc":"29254:39:24","nodeType":"YulFunctionCall","src":"29254:39:24"},"variableNames":[{"name":"toInsert","nativeSrc":"29242:8:24","nodeType":"YulIdentifier","src":"29242:8:24"}]},{"nativeSrc":"29302:30:24","nodeType":"YulAssignment","src":"29302:30:24","value":{"arguments":[{"name":"value","nativeSrc":"29315:5:24","nodeType":"YulIdentifier","src":"29315:5:24"},{"arguments":[{"name":"mask","nativeSrc":"29326:4:24","nodeType":"YulIdentifier","src":"29326:4:24"}],"functionName":{"name":"not","nativeSrc":"29322:3:24","nodeType":"YulIdentifier","src":"29322:3:24"},"nativeSrc":"29322:9:24","nodeType":"YulFunctionCall","src":"29322:9:24"}],"functionName":{"name":"and","nativeSrc":"29311:3:24","nodeType":"YulIdentifier","src":"29311:3:24"},"nativeSrc":"29311:21:24","nodeType":"YulFunctionCall","src":"29311:21:24"},"variableNames":[{"name":"value","nativeSrc":"29302:5:24","nodeType":"YulIdentifier","src":"29302:5:24"}]},{"nativeSrc":"29341:40:24","nodeType":"YulAssignment","src":"29341:40:24","value":{"arguments":[{"name":"value","nativeSrc":"29354:5:24","nodeType":"YulIdentifier","src":"29354:5:24"},{"arguments":[{"name":"toInsert","nativeSrc":"29365:8:24","nodeType":"YulIdentifier","src":"29365:8:24"},{"name":"mask","nativeSrc":"29375:4:24","nodeType":"YulIdentifier","src":"29375:4:24"}],"functionName":{"name":"and","nativeSrc":"29361:3:24","nodeType":"YulIdentifier","src":"29361:3:24"},"nativeSrc":"29361:19:24","nodeType":"YulFunctionCall","src":"29361:19:24"}],"functionName":{"name":"or","nativeSrc":"29351:2:24","nodeType":"YulIdentifier","src":"29351:2:24"},"nativeSrc":"29351:30:24","nodeType":"YulFunctionCall","src":"29351:30:24"},"variableNames":[{"name":"result","nativeSrc":"29341:6:24","nodeType":"YulIdentifier","src":"29341:6:24"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"28994:393:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29031:5:24","nodeType":"YulTypedName","src":"29031:5:24","type":""},{"name":"shiftBytes","nativeSrc":"29038:10:24","nodeType":"YulTypedName","src":"29038:10:24","type":""},{"name":"toInsert","nativeSrc":"29050:8:24","nodeType":"YulTypedName","src":"29050:8:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"29063:6:24","nodeType":"YulTypedName","src":"29063:6:24","type":""}],"src":"28994:393:24"},{"body":{"nativeSrc":"29425:28:24","nodeType":"YulBlock","src":"29425:28:24","statements":[{"nativeSrc":"29435:12:24","nodeType":"YulAssignment","src":"29435:12:24","value":{"name":"value","nativeSrc":"29442:5:24","nodeType":"YulIdentifier","src":"29442:5:24"},"variableNames":[{"name":"ret","nativeSrc":"29435:3:24","nodeType":"YulIdentifier","src":"29435:3:24"}]}]},"name":"identity","nativeSrc":"29393:60:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29411:5:24","nodeType":"YulTypedName","src":"29411:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"29421:3:24","nodeType":"YulTypedName","src":"29421:3:24","type":""}],"src":"29393:60:24"},{"body":{"nativeSrc":"29519:82:24","nodeType":"YulBlock","src":"29519:82:24","statements":[{"nativeSrc":"29529:66:24","nodeType":"YulAssignment","src":"29529:66:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29587:5:24","nodeType":"YulIdentifier","src":"29587:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29569:17:24","nodeType":"YulIdentifier","src":"29569:17:24"},"nativeSrc":"29569:24:24","nodeType":"YulFunctionCall","src":"29569:24:24"}],"functionName":{"name":"identity","nativeSrc":"29560:8:24","nodeType":"YulIdentifier","src":"29560:8:24"},"nativeSrc":"29560:34:24","nodeType":"YulFunctionCall","src":"29560:34:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29542:17:24","nodeType":"YulIdentifier","src":"29542:17:24"},"nativeSrc":"29542:53:24","nodeType":"YulFunctionCall","src":"29542:53:24"},"variableNames":[{"name":"converted","nativeSrc":"29529:9:24","nodeType":"YulIdentifier","src":"29529:9:24"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"29459:142:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29499:5:24","nodeType":"YulTypedName","src":"29499:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"29509:9:24","nodeType":"YulTypedName","src":"29509:9:24","type":""}],"src":"29459:142:24"},{"body":{"nativeSrc":"29654:28:24","nodeType":"YulBlock","src":"29654:28:24","statements":[{"nativeSrc":"29664:12:24","nodeType":"YulAssignment","src":"29664:12:24","value":{"name":"value","nativeSrc":"29671:5:24","nodeType":"YulIdentifier","src":"29671:5:24"},"variableNames":[{"name":"ret","nativeSrc":"29664:3:24","nodeType":"YulIdentifier","src":"29664:3:24"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"29607:75:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29640:5:24","nodeType":"YulTypedName","src":"29640:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"29650:3:24","nodeType":"YulTypedName","src":"29650:3:24","type":""}],"src":"29607:75:24"},{"body":{"nativeSrc":"29764:193:24","nodeType":"YulBlock","src":"29764:193:24","statements":[{"nativeSrc":"29774:63:24","nodeType":"YulVariableDeclaration","src":"29774:63:24","value":{"arguments":[{"name":"value_0","nativeSrc":"29829:7:24","nodeType":"YulIdentifier","src":"29829:7:24"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"29798:30:24","nodeType":"YulIdentifier","src":"29798:30:24"},"nativeSrc":"29798:39:24","nodeType":"YulFunctionCall","src":"29798:39:24"},"variables":[{"name":"convertedValue_0","nativeSrc":"29778:16:24","nodeType":"YulTypedName","src":"29778:16:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"29853:4:24","nodeType":"YulIdentifier","src":"29853:4:24"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"29893:4:24","nodeType":"YulIdentifier","src":"29893:4:24"}],"functionName":{"name":"sload","nativeSrc":"29887:5:24","nodeType":"YulIdentifier","src":"29887:5:24"},"nativeSrc":"29887:11:24","nodeType":"YulFunctionCall","src":"29887:11:24"},{"name":"offset","nativeSrc":"29900:6:24","nodeType":"YulIdentifier","src":"29900:6:24"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"29932:16:24","nodeType":"YulIdentifier","src":"29932:16:24"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"29908:23:24","nodeType":"YulIdentifier","src":"29908:23:24"},"nativeSrc":"29908:41:24","nodeType":"YulFunctionCall","src":"29908:41:24"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"29859:27:24","nodeType":"YulIdentifier","src":"29859:27:24"},"nativeSrc":"29859:91:24","nodeType":"YulFunctionCall","src":"29859:91:24"}],"functionName":{"name":"sstore","nativeSrc":"29846:6:24","nodeType":"YulIdentifier","src":"29846:6:24"},"nativeSrc":"29846:105:24","nodeType":"YulFunctionCall","src":"29846:105:24"},"nativeSrc":"29846:105:24","nodeType":"YulExpressionStatement","src":"29846:105:24"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"29688:269:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"29741:4:24","nodeType":"YulTypedName","src":"29741:4:24","type":""},{"name":"offset","nativeSrc":"29747:6:24","nodeType":"YulTypedName","src":"29747:6:24","type":""},{"name":"value_0","nativeSrc":"29755:7:24","nodeType":"YulTypedName","src":"29755:7:24","type":""}],"src":"29688:269:24"},{"body":{"nativeSrc":"30012:24:24","nodeType":"YulBlock","src":"30012:24:24","statements":[{"nativeSrc":"30022:8:24","nodeType":"YulAssignment","src":"30022:8:24","value":{"kind":"number","nativeSrc":"30029:1:24","nodeType":"YulLiteral","src":"30029:1:24","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"30022:3:24","nodeType":"YulIdentifier","src":"30022:3:24"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"29963:73:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"30008:3:24","nodeType":"YulTypedName","src":"30008:3:24","type":""}],"src":"29963:73:24"},{"body":{"nativeSrc":"30095:136:24","nodeType":"YulBlock","src":"30095:136:24","statements":[{"nativeSrc":"30105:46:24","nodeType":"YulVariableDeclaration","src":"30105:46:24","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"30119:30:24","nodeType":"YulIdentifier","src":"30119:30:24"},"nativeSrc":"30119:32:24","nodeType":"YulFunctionCall","src":"30119:32:24"},"variables":[{"name":"zero_0","nativeSrc":"30109:6:24","nodeType":"YulTypedName","src":"30109:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30204:4:24","nodeType":"YulIdentifier","src":"30204:4:24"},{"name":"offset","nativeSrc":"30210:6:24","nodeType":"YulIdentifier","src":"30210:6:24"},{"name":"zero_0","nativeSrc":"30218:6:24","nodeType":"YulIdentifier","src":"30218:6:24"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"30160:43:24","nodeType":"YulIdentifier","src":"30160:43:24"},"nativeSrc":"30160:65:24","nodeType":"YulFunctionCall","src":"30160:65:24"},"nativeSrc":"30160:65:24","nodeType":"YulExpressionStatement","src":"30160:65:24"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"30042:189:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"30081:4:24","nodeType":"YulTypedName","src":"30081:4:24","type":""},{"name":"offset","nativeSrc":"30087:6:24","nodeType":"YulTypedName","src":"30087:6:24","type":""}],"src":"30042:189:24"},{"body":{"nativeSrc":"30287:136:24","nodeType":"YulBlock","src":"30287:136:24","statements":[{"body":{"nativeSrc":"30354:63:24","nodeType":"YulBlock","src":"30354:63:24","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"30398:5:24","nodeType":"YulIdentifier","src":"30398:5:24"},{"kind":"number","nativeSrc":"30405:1:24","nodeType":"YulLiteral","src":"30405:1:24","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"30368:29:24","nodeType":"YulIdentifier","src":"30368:29:24"},"nativeSrc":"30368:39:24","nodeType":"YulFunctionCall","src":"30368:39:24"},"nativeSrc":"30368:39:24","nodeType":"YulExpressionStatement","src":"30368:39:24"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"30307:5:24","nodeType":"YulIdentifier","src":"30307:5:24"},{"name":"end","nativeSrc":"30314:3:24","nodeType":"YulIdentifier","src":"30314:3:24"}],"functionName":{"name":"lt","nativeSrc":"30304:2:24","nodeType":"YulIdentifier","src":"30304:2:24"},"nativeSrc":"30304:14:24","nodeType":"YulFunctionCall","src":"30304:14:24"},"nativeSrc":"30297:120:24","nodeType":"YulForLoop","post":{"nativeSrc":"30319:26:24","nodeType":"YulBlock","src":"30319:26:24","statements":[{"nativeSrc":"30321:22:24","nodeType":"YulAssignment","src":"30321:22:24","value":{"arguments":[{"name":"start","nativeSrc":"30334:5:24","nodeType":"YulIdentifier","src":"30334:5:24"},{"kind":"number","nativeSrc":"30341:1:24","nodeType":"YulLiteral","src":"30341:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30330:3:24","nodeType":"YulIdentifier","src":"30330:3:24"},"nativeSrc":"30330:13:24","nodeType":"YulFunctionCall","src":"30330:13:24"},"variableNames":[{"name":"start","nativeSrc":"30321:5:24","nodeType":"YulIdentifier","src":"30321:5:24"}]}]},"pre":{"nativeSrc":"30301:2:24","nodeType":"YulBlock","src":"30301:2:24","statements":[]},"src":"30297:120:24"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"30237:186:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"30275:5:24","nodeType":"YulTypedName","src":"30275:5:24","type":""},{"name":"end","nativeSrc":"30282:3:24","nodeType":"YulTypedName","src":"30282:3:24","type":""}],"src":"30237:186:24"},{"body":{"nativeSrc":"30508:464:24","nodeType":"YulBlock","src":"30508:464:24","statements":[{"body":{"nativeSrc":"30534:431:24","nodeType":"YulBlock","src":"30534:431:24","statements":[{"nativeSrc":"30548:54:24","nodeType":"YulVariableDeclaration","src":"30548:54:24","value":{"arguments":[{"name":"array","nativeSrc":"30596:5:24","nodeType":"YulIdentifier","src":"30596:5:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"30564:31:24","nodeType":"YulIdentifier","src":"30564:31:24"},"nativeSrc":"30564:38:24","nodeType":"YulFunctionCall","src":"30564:38:24"},"variables":[{"name":"dataArea","nativeSrc":"30552:8:24","nodeType":"YulTypedName","src":"30552:8:24","type":""}]},{"nativeSrc":"30615:63:24","nodeType":"YulVariableDeclaration","src":"30615:63:24","value":{"arguments":[{"name":"dataArea","nativeSrc":"30638:8:24","nodeType":"YulIdentifier","src":"30638:8:24"},{"arguments":[{"name":"startIndex","nativeSrc":"30666:10:24","nodeType":"YulIdentifier","src":"30666:10:24"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"30648:17:24","nodeType":"YulIdentifier","src":"30648:17:24"},"nativeSrc":"30648:29:24","nodeType":"YulFunctionCall","src":"30648:29:24"}],"functionName":{"name":"add","nativeSrc":"30634:3:24","nodeType":"YulIdentifier","src":"30634:3:24"},"nativeSrc":"30634:44:24","nodeType":"YulFunctionCall","src":"30634:44:24"},"variables":[{"name":"deleteStart","nativeSrc":"30619:11:24","nodeType":"YulTypedName","src":"30619:11:24","type":""}]},{"body":{"nativeSrc":"30835:27:24","nodeType":"YulBlock","src":"30835:27:24","statements":[{"nativeSrc":"30837:23:24","nodeType":"YulAssignment","src":"30837:23:24","value":{"name":"dataArea","nativeSrc":"30852:8:24","nodeType":"YulIdentifier","src":"30852:8:24"},"variableNames":[{"name":"deleteStart","nativeSrc":"30837:11:24","nodeType":"YulIdentifier","src":"30837:11:24"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"30819:10:24","nodeType":"YulIdentifier","src":"30819:10:24"},{"kind":"number","nativeSrc":"30831:2:24","nodeType":"YulLiteral","src":"30831:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"30816:2:24","nodeType":"YulIdentifier","src":"30816:2:24"},"nativeSrc":"30816:18:24","nodeType":"YulFunctionCall","src":"30816:18:24"},"nativeSrc":"30813:49:24","nodeType":"YulIf","src":"30813:49:24"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"30904:11:24","nodeType":"YulIdentifier","src":"30904:11:24"},{"arguments":[{"name":"dataArea","nativeSrc":"30921:8:24","nodeType":"YulIdentifier","src":"30921:8:24"},{"arguments":[{"name":"len","nativeSrc":"30949:3:24","nodeType":"YulIdentifier","src":"30949:3:24"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"30931:17:24","nodeType":"YulIdentifier","src":"30931:17:24"},"nativeSrc":"30931:22:24","nodeType":"YulFunctionCall","src":"30931:22:24"}],"functionName":{"name":"add","nativeSrc":"30917:3:24","nodeType":"YulIdentifier","src":"30917:3:24"},"nativeSrc":"30917:37:24","nodeType":"YulFunctionCall","src":"30917:37:24"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"30875:28:24","nodeType":"YulIdentifier","src":"30875:28:24"},"nativeSrc":"30875:80:24","nodeType":"YulFunctionCall","src":"30875:80:24"},"nativeSrc":"30875:80:24","nodeType":"YulExpressionStatement","src":"30875:80:24"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"30525:3:24","nodeType":"YulIdentifier","src":"30525:3:24"},{"kind":"number","nativeSrc":"30530:2:24","nodeType":"YulLiteral","src":"30530:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"30522:2:24","nodeType":"YulIdentifier","src":"30522:2:24"},"nativeSrc":"30522:11:24","nodeType":"YulFunctionCall","src":"30522:11:24"},"nativeSrc":"30519:446:24","nodeType":"YulIf","src":"30519:446:24"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"30429:543:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"30484:5:24","nodeType":"YulTypedName","src":"30484:5:24","type":""},{"name":"len","nativeSrc":"30491:3:24","nodeType":"YulTypedName","src":"30491:3:24","type":""},{"name":"startIndex","nativeSrc":"30496:10:24","nodeType":"YulTypedName","src":"30496:10:24","type":""}],"src":"30429:543:24"},{"body":{"nativeSrc":"31041:54:24","nodeType":"YulBlock","src":"31041:54:24","statements":[{"nativeSrc":"31051:37:24","nodeType":"YulAssignment","src":"31051:37:24","value":{"arguments":[{"name":"bits","nativeSrc":"31076:4:24","nodeType":"YulIdentifier","src":"31076:4:24"},{"name":"value","nativeSrc":"31082:5:24","nodeType":"YulIdentifier","src":"31082:5:24"}],"functionName":{"name":"shr","nativeSrc":"31072:3:24","nodeType":"YulIdentifier","src":"31072:3:24"},"nativeSrc":"31072:16:24","nodeType":"YulFunctionCall","src":"31072:16:24"},"variableNames":[{"name":"newValue","nativeSrc":"31051:8:24","nodeType":"YulIdentifier","src":"31051:8:24"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"30978:117:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"31016:4:24","nodeType":"YulTypedName","src":"31016:4:24","type":""},{"name":"value","nativeSrc":"31022:5:24","nodeType":"YulTypedName","src":"31022:5:24","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"31032:8:24","nodeType":"YulTypedName","src":"31032:8:24","type":""}],"src":"30978:117:24"},{"body":{"nativeSrc":"31152:118:24","nodeType":"YulBlock","src":"31152:118:24","statements":[{"nativeSrc":"31162:68:24","nodeType":"YulVariableDeclaration","src":"31162:68:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"31211:1:24","nodeType":"YulLiteral","src":"31211:1:24","type":"","value":"8"},{"name":"bytes","nativeSrc":"31214:5:24","nodeType":"YulIdentifier","src":"31214:5:24"}],"functionName":{"name":"mul","nativeSrc":"31207:3:24","nodeType":"YulIdentifier","src":"31207:3:24"},"nativeSrc":"31207:13:24","nodeType":"YulFunctionCall","src":"31207:13:24"},{"arguments":[{"kind":"number","nativeSrc":"31226:1:24","nodeType":"YulLiteral","src":"31226:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"31222:3:24","nodeType":"YulIdentifier","src":"31222:3:24"},"nativeSrc":"31222:6:24","nodeType":"YulFunctionCall","src":"31222:6:24"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"31178:28:24","nodeType":"YulIdentifier","src":"31178:28:24"},"nativeSrc":"31178:51:24","nodeType":"YulFunctionCall","src":"31178:51:24"}],"functionName":{"name":"not","nativeSrc":"31174:3:24","nodeType":"YulIdentifier","src":"31174:3:24"},"nativeSrc":"31174:56:24","nodeType":"YulFunctionCall","src":"31174:56:24"},"variables":[{"name":"mask","nativeSrc":"31166:4:24","nodeType":"YulTypedName","src":"31166:4:24","type":""}]},{"nativeSrc":"31239:25:24","nodeType":"YulAssignment","src":"31239:25:24","value":{"arguments":[{"name":"data","nativeSrc":"31253:4:24","nodeType":"YulIdentifier","src":"31253:4:24"},{"name":"mask","nativeSrc":"31259:4:24","nodeType":"YulIdentifier","src":"31259:4:24"}],"functionName":{"name":"and","nativeSrc":"31249:3:24","nodeType":"YulIdentifier","src":"31249:3:24"},"nativeSrc":"31249:15:24","nodeType":"YulFunctionCall","src":"31249:15:24"},"variableNames":[{"name":"result","nativeSrc":"31239:6:24","nodeType":"YulIdentifier","src":"31239:6:24"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"31101:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31129:4:24","nodeType":"YulTypedName","src":"31129:4:24","type":""},{"name":"bytes","nativeSrc":"31135:5:24","nodeType":"YulTypedName","src":"31135:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"31145:6:24","nodeType":"YulTypedName","src":"31145:6:24","type":""}],"src":"31101:169:24"},{"body":{"nativeSrc":"31356:214:24","nodeType":"YulBlock","src":"31356:214:24","statements":[{"nativeSrc":"31489:37:24","nodeType":"YulAssignment","src":"31489:37:24","value":{"arguments":[{"name":"data","nativeSrc":"31516:4:24","nodeType":"YulIdentifier","src":"31516:4:24"},{"name":"len","nativeSrc":"31522:3:24","nodeType":"YulIdentifier","src":"31522:3:24"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"31497:18:24","nodeType":"YulIdentifier","src":"31497:18:24"},"nativeSrc":"31497:29:24","nodeType":"YulFunctionCall","src":"31497:29:24"},"variableNames":[{"name":"data","nativeSrc":"31489:4:24","nodeType":"YulIdentifier","src":"31489:4:24"}]},{"nativeSrc":"31535:29:24","nodeType":"YulAssignment","src":"31535:29:24","value":{"arguments":[{"name":"data","nativeSrc":"31546:4:24","nodeType":"YulIdentifier","src":"31546:4:24"},{"arguments":[{"kind":"number","nativeSrc":"31556:1:24","nodeType":"YulLiteral","src":"31556:1:24","type":"","value":"2"},{"name":"len","nativeSrc":"31559:3:24","nodeType":"YulIdentifier","src":"31559:3:24"}],"functionName":{"name":"mul","nativeSrc":"31552:3:24","nodeType":"YulIdentifier","src":"31552:3:24"},"nativeSrc":"31552:11:24","nodeType":"YulFunctionCall","src":"31552:11:24"}],"functionName":{"name":"or","nativeSrc":"31543:2:24","nodeType":"YulIdentifier","src":"31543:2:24"},"nativeSrc":"31543:21:24","nodeType":"YulFunctionCall","src":"31543:21:24"},"variableNames":[{"name":"used","nativeSrc":"31535:4:24","nodeType":"YulIdentifier","src":"31535:4:24"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"31275:295:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31337:4:24","nodeType":"YulTypedName","src":"31337:4:24","type":""},{"name":"len","nativeSrc":"31343:3:24","nodeType":"YulTypedName","src":"31343:3:24","type":""}],"returnVariables":[{"name":"used","nativeSrc":"31351:4:24","nodeType":"YulTypedName","src":"31351:4:24","type":""}],"src":"31275:295:24"},{"body":{"nativeSrc":"31667:1303:24","nodeType":"YulBlock","src":"31667:1303:24","statements":[{"nativeSrc":"31678:51:24","nodeType":"YulVariableDeclaration","src":"31678:51:24","value":{"arguments":[{"name":"src","nativeSrc":"31725:3:24","nodeType":"YulIdentifier","src":"31725:3:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"31692:32:24","nodeType":"YulIdentifier","src":"31692:32:24"},"nativeSrc":"31692:37:24","nodeType":"YulFunctionCall","src":"31692:37:24"},"variables":[{"name":"newLen","nativeSrc":"31682:6:24","nodeType":"YulTypedName","src":"31682:6:24","type":""}]},{"body":{"nativeSrc":"31814:22:24","nodeType":"YulBlock","src":"31814:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"31816:16:24","nodeType":"YulIdentifier","src":"31816:16:24"},"nativeSrc":"31816:18:24","nodeType":"YulFunctionCall","src":"31816:18:24"},"nativeSrc":"31816:18:24","nodeType":"YulExpressionStatement","src":"31816:18:24"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"31786:6:24","nodeType":"YulIdentifier","src":"31786:6:24"},{"kind":"number","nativeSrc":"31794:18:24","nodeType":"YulLiteral","src":"31794:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"31783:2:24","nodeType":"YulIdentifier","src":"31783:2:24"},"nativeSrc":"31783:30:24","nodeType":"YulFunctionCall","src":"31783:30:24"},"nativeSrc":"31780:56:24","nodeType":"YulIf","src":"31780:56:24"},{"nativeSrc":"31846:52:24","nodeType":"YulVariableDeclaration","src":"31846:52:24","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"31892:4:24","nodeType":"YulIdentifier","src":"31892:4:24"}],"functionName":{"name":"sload","nativeSrc":"31886:5:24","nodeType":"YulIdentifier","src":"31886:5:24"},"nativeSrc":"31886:11:24","nodeType":"YulFunctionCall","src":"31886:11:24"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"31860:25:24","nodeType":"YulIdentifier","src":"31860:25:24"},"nativeSrc":"31860:38:24","nodeType":"YulFunctionCall","src":"31860:38:24"},"variables":[{"name":"oldLen","nativeSrc":"31850:6:24","nodeType":"YulTypedName","src":"31850:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"31991:4:24","nodeType":"YulIdentifier","src":"31991:4:24"},{"name":"oldLen","nativeSrc":"31997:6:24","nodeType":"YulIdentifier","src":"31997:6:24"},{"name":"newLen","nativeSrc":"32005:6:24","nodeType":"YulIdentifier","src":"32005:6:24"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"31945:45:24","nodeType":"YulIdentifier","src":"31945:45:24"},"nativeSrc":"31945:67:24","nodeType":"YulFunctionCall","src":"31945:67:24"},"nativeSrc":"31945:67:24","nodeType":"YulExpressionStatement","src":"31945:67:24"},{"nativeSrc":"32022:18:24","nodeType":"YulVariableDeclaration","src":"32022:18:24","value":{"kind":"number","nativeSrc":"32039:1:24","nodeType":"YulLiteral","src":"32039:1:24","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"32026:9:24","nodeType":"YulTypedName","src":"32026:9:24","type":""}]},{"nativeSrc":"32050:17:24","nodeType":"YulAssignment","src":"32050:17:24","value":{"kind":"number","nativeSrc":"32063:4:24","nodeType":"YulLiteral","src":"32063:4:24","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"32050:9:24","nodeType":"YulIdentifier","src":"32050:9:24"}]},{"cases":[{"body":{"nativeSrc":"32114:611:24","nodeType":"YulBlock","src":"32114:611:24","statements":[{"nativeSrc":"32128:37:24","nodeType":"YulVariableDeclaration","src":"32128:37:24","value":{"arguments":[{"name":"newLen","nativeSrc":"32147:6:24","nodeType":"YulIdentifier","src":"32147:6:24"},{"arguments":[{"kind":"number","nativeSrc":"32159:4:24","nodeType":"YulLiteral","src":"32159:4:24","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"32155:3:24","nodeType":"YulIdentifier","src":"32155:3:24"},"nativeSrc":"32155:9:24","nodeType":"YulFunctionCall","src":"32155:9:24"}],"functionName":{"name":"and","nativeSrc":"32143:3:24","nodeType":"YulIdentifier","src":"32143:3:24"},"nativeSrc":"32143:22:24","nodeType":"YulFunctionCall","src":"32143:22:24"},"variables":[{"name":"loopEnd","nativeSrc":"32132:7:24","nodeType":"YulTypedName","src":"32132:7:24","type":""}]},{"nativeSrc":"32179:51:24","nodeType":"YulVariableDeclaration","src":"32179:51:24","value":{"arguments":[{"name":"slot","nativeSrc":"32225:4:24","nodeType":"YulIdentifier","src":"32225:4:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"32193:31:24","nodeType":"YulIdentifier","src":"32193:31:24"},"nativeSrc":"32193:37:24","nodeType":"YulFunctionCall","src":"32193:37:24"},"variables":[{"name":"dstPtr","nativeSrc":"32183:6:24","nodeType":"YulTypedName","src":"32183:6:24","type":""}]},{"nativeSrc":"32243:10:24","nodeType":"YulVariableDeclaration","src":"32243:10:24","value":{"kind":"number","nativeSrc":"32252:1:24","nodeType":"YulLiteral","src":"32252:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"32247:1:24","nodeType":"YulTypedName","src":"32247:1:24","type":""}]},{"body":{"nativeSrc":"32311:163:24","nodeType":"YulBlock","src":"32311:163:24","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32336:6:24","nodeType":"YulIdentifier","src":"32336:6:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32354:3:24","nodeType":"YulIdentifier","src":"32354:3:24"},{"name":"srcOffset","nativeSrc":"32359:9:24","nodeType":"YulIdentifier","src":"32359:9:24"}],"functionName":{"name":"add","nativeSrc":"32350:3:24","nodeType":"YulIdentifier","src":"32350:3:24"},"nativeSrc":"32350:19:24","nodeType":"YulFunctionCall","src":"32350:19:24"}],"functionName":{"name":"mload","nativeSrc":"32344:5:24","nodeType":"YulIdentifier","src":"32344:5:24"},"nativeSrc":"32344:26:24","nodeType":"YulFunctionCall","src":"32344:26:24"}],"functionName":{"name":"sstore","nativeSrc":"32329:6:24","nodeType":"YulIdentifier","src":"32329:6:24"},"nativeSrc":"32329:42:24","nodeType":"YulFunctionCall","src":"32329:42:24"},"nativeSrc":"32329:42:24","nodeType":"YulExpressionStatement","src":"32329:42:24"},{"nativeSrc":"32388:24:24","nodeType":"YulAssignment","src":"32388:24:24","value":{"arguments":[{"name":"dstPtr","nativeSrc":"32402:6:24","nodeType":"YulIdentifier","src":"32402:6:24"},{"kind":"number","nativeSrc":"32410:1:24","nodeType":"YulLiteral","src":"32410:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"32398:3:24","nodeType":"YulIdentifier","src":"32398:3:24"},"nativeSrc":"32398:14:24","nodeType":"YulFunctionCall","src":"32398:14:24"},"variableNames":[{"name":"dstPtr","nativeSrc":"32388:6:24","nodeType":"YulIdentifier","src":"32388:6:24"}]},{"nativeSrc":"32429:31:24","nodeType":"YulAssignment","src":"32429:31:24","value":{"arguments":[{"name":"srcOffset","nativeSrc":"32446:9:24","nodeType":"YulIdentifier","src":"32446:9:24"},{"kind":"number","nativeSrc":"32457:2:24","nodeType":"YulLiteral","src":"32457:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32442:3:24","nodeType":"YulIdentifier","src":"32442:3:24"},"nativeSrc":"32442:18:24","nodeType":"YulFunctionCall","src":"32442:18:24"},"variableNames":[{"name":"srcOffset","nativeSrc":"32429:9:24","nodeType":"YulIdentifier","src":"32429:9:24"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"32277:1:24","nodeType":"YulIdentifier","src":"32277:1:24"},{"name":"loopEnd","nativeSrc":"32280:7:24","nodeType":"YulIdentifier","src":"32280:7:24"}],"functionName":{"name":"lt","nativeSrc":"32274:2:24","nodeType":"YulIdentifier","src":"32274:2:24"},"nativeSrc":"32274:14:24","nodeType":"YulFunctionCall","src":"32274:14:24"},"nativeSrc":"32266:208:24","nodeType":"YulForLoop","post":{"nativeSrc":"32289:21:24","nodeType":"YulBlock","src":"32289:21:24","statements":[{"nativeSrc":"32291:17:24","nodeType":"YulAssignment","src":"32291:17:24","value":{"arguments":[{"name":"i","nativeSrc":"32300:1:24","nodeType":"YulIdentifier","src":"32300:1:24"},{"kind":"number","nativeSrc":"32303:4:24","nodeType":"YulLiteral","src":"32303:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"32296:3:24","nodeType":"YulIdentifier","src":"32296:3:24"},"nativeSrc":"32296:12:24","nodeType":"YulFunctionCall","src":"32296:12:24"},"variableNames":[{"name":"i","nativeSrc":"32291:1:24","nodeType":"YulIdentifier","src":"32291:1:24"}]}]},"pre":{"nativeSrc":"32270:3:24","nodeType":"YulBlock","src":"32270:3:24","statements":[]},"src":"32266:208:24"},{"body":{"nativeSrc":"32510:156:24","nodeType":"YulBlock","src":"32510:156:24","statements":[{"nativeSrc":"32528:43:24","nodeType":"YulVariableDeclaration","src":"32528:43:24","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32555:3:24","nodeType":"YulIdentifier","src":"32555:3:24"},{"name":"srcOffset","nativeSrc":"32560:9:24","nodeType":"YulIdentifier","src":"32560:9:24"}],"functionName":{"name":"add","nativeSrc":"32551:3:24","nodeType":"YulIdentifier","src":"32551:3:24"},"nativeSrc":"32551:19:24","nodeType":"YulFunctionCall","src":"32551:19:24"}],"functionName":{"name":"mload","nativeSrc":"32545:5:24","nodeType":"YulIdentifier","src":"32545:5:24"},"nativeSrc":"32545:26:24","nodeType":"YulFunctionCall","src":"32545:26:24"},"variables":[{"name":"lastValue","nativeSrc":"32532:9:24","nodeType":"YulTypedName","src":"32532:9:24","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32595:6:24","nodeType":"YulIdentifier","src":"32595:6:24"},{"arguments":[{"name":"lastValue","nativeSrc":"32622:9:24","nodeType":"YulIdentifier","src":"32622:9:24"},{"arguments":[{"name":"newLen","nativeSrc":"32637:6:24","nodeType":"YulIdentifier","src":"32637:6:24"},{"kind":"number","nativeSrc":"32645:4:24","nodeType":"YulLiteral","src":"32645:4:24","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"32633:3:24","nodeType":"YulIdentifier","src":"32633:3:24"},"nativeSrc":"32633:17:24","nodeType":"YulFunctionCall","src":"32633:17:24"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"32603:18:24","nodeType":"YulIdentifier","src":"32603:18:24"},"nativeSrc":"32603:48:24","nodeType":"YulFunctionCall","src":"32603:48:24"}],"functionName":{"name":"sstore","nativeSrc":"32588:6:24","nodeType":"YulIdentifier","src":"32588:6:24"},"nativeSrc":"32588:64:24","nodeType":"YulFunctionCall","src":"32588:64:24"},"nativeSrc":"32588:64:24","nodeType":"YulExpressionStatement","src":"32588:64:24"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"32493:7:24","nodeType":"YulIdentifier","src":"32493:7:24"},{"name":"newLen","nativeSrc":"32502:6:24","nodeType":"YulIdentifier","src":"32502:6:24"}],"functionName":{"name":"lt","nativeSrc":"32490:2:24","nodeType":"YulIdentifier","src":"32490:2:24"},"nativeSrc":"32490:19:24","nodeType":"YulFunctionCall","src":"32490:19:24"},"nativeSrc":"32487:179:24","nodeType":"YulIf","src":"32487:179:24"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32686:4:24","nodeType":"YulIdentifier","src":"32686:4:24"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"32700:6:24","nodeType":"YulIdentifier","src":"32700:6:24"},{"kind":"number","nativeSrc":"32708:1:24","nodeType":"YulLiteral","src":"32708:1:24","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"32696:3:24","nodeType":"YulIdentifier","src":"32696:3:24"},"nativeSrc":"32696:14:24","nodeType":"YulFunctionCall","src":"32696:14:24"},{"kind":"number","nativeSrc":"32712:1:24","nodeType":"YulLiteral","src":"32712:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"32692:3:24","nodeType":"YulIdentifier","src":"32692:3:24"},"nativeSrc":"32692:22:24","nodeType":"YulFunctionCall","src":"32692:22:24"}],"functionName":{"name":"sstore","nativeSrc":"32679:6:24","nodeType":"YulIdentifier","src":"32679:6:24"},"nativeSrc":"32679:36:24","nodeType":"YulFunctionCall","src":"32679:36:24"},"nativeSrc":"32679:36:24","nodeType":"YulExpressionStatement","src":"32679:36:24"}]},"nativeSrc":"32107:618:24","nodeType":"YulCase","src":"32107:618:24","value":{"kind":"number","nativeSrc":"32112:1:24","nodeType":"YulLiteral","src":"32112:1:24","type":"","value":"1"}},{"body":{"nativeSrc":"32742:222:24","nodeType":"YulBlock","src":"32742:222:24","statements":[{"nativeSrc":"32756:14:24","nodeType":"YulVariableDeclaration","src":"32756:14:24","value":{"kind":"number","nativeSrc":"32769:1:24","nodeType":"YulLiteral","src":"32769:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"32760:5:24","nodeType":"YulTypedName","src":"32760:5:24","type":""}]},{"body":{"nativeSrc":"32793:67:24","nodeType":"YulBlock","src":"32793:67:24","statements":[{"nativeSrc":"32811:35:24","nodeType":"YulAssignment","src":"32811:35:24","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32830:3:24","nodeType":"YulIdentifier","src":"32830:3:24"},{"name":"srcOffset","nativeSrc":"32835:9:24","nodeType":"YulIdentifier","src":"32835:9:24"}],"functionName":{"name":"add","nativeSrc":"32826:3:24","nodeType":"YulIdentifier","src":"32826:3:24"},"nativeSrc":"32826:19:24","nodeType":"YulFunctionCall","src":"32826:19:24"}],"functionName":{"name":"mload","nativeSrc":"32820:5:24","nodeType":"YulIdentifier","src":"32820:5:24"},"nativeSrc":"32820:26:24","nodeType":"YulFunctionCall","src":"32820:26:24"},"variableNames":[{"name":"value","nativeSrc":"32811:5:24","nodeType":"YulIdentifier","src":"32811:5:24"}]}]},"condition":{"name":"newLen","nativeSrc":"32786:6:24","nodeType":"YulIdentifier","src":"32786:6:24"},"nativeSrc":"32783:77:24","nodeType":"YulIf","src":"32783:77:24"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32880:4:24","nodeType":"YulIdentifier","src":"32880:4:24"},{"arguments":[{"name":"value","nativeSrc":"32939:5:24","nodeType":"YulIdentifier","src":"32939:5:24"},{"name":"newLen","nativeSrc":"32946:6:24","nodeType":"YulIdentifier","src":"32946:6:24"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"32886:52:24","nodeType":"YulIdentifier","src":"32886:52:24"},"nativeSrc":"32886:67:24","nodeType":"YulFunctionCall","src":"32886:67:24"}],"functionName":{"name":"sstore","nativeSrc":"32873:6:24","nodeType":"YulIdentifier","src":"32873:6:24"},"nativeSrc":"32873:81:24","nodeType":"YulFunctionCall","src":"32873:81:24"},"nativeSrc":"32873:81:24","nodeType":"YulExpressionStatement","src":"32873:81:24"}]},"nativeSrc":"32734:230:24","nodeType":"YulCase","src":"32734:230:24","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"32087:6:24","nodeType":"YulIdentifier","src":"32087:6:24"},{"kind":"number","nativeSrc":"32095:2:24","nodeType":"YulLiteral","src":"32095:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"32084:2:24","nodeType":"YulIdentifier","src":"32084:2:24"},"nativeSrc":"32084:14:24","nodeType":"YulFunctionCall","src":"32084:14:24"},"nativeSrc":"32077:887:24","nodeType":"YulSwitch","src":"32077:887:24"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"31575:1395:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"31656:4:24","nodeType":"YulTypedName","src":"31656:4:24","type":""},{"name":"src","nativeSrc":"31662:3:24","nodeType":"YulTypedName","src":"31662:3:24","type":""}],"src":"31575:1395:24"},{"body":{"nativeSrc":"33004:152:24","nodeType":"YulBlock","src":"33004:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"33021:1:24","nodeType":"YulLiteral","src":"33021:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"33024:77:24","nodeType":"YulLiteral","src":"33024:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"33014:6:24","nodeType":"YulIdentifier","src":"33014:6:24"},"nativeSrc":"33014:88:24","nodeType":"YulFunctionCall","src":"33014:88:24"},"nativeSrc":"33014:88:24","nodeType":"YulExpressionStatement","src":"33014:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"33118:1:24","nodeType":"YulLiteral","src":"33118:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"33121:4:24","nodeType":"YulLiteral","src":"33121:4:24","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"33111:6:24","nodeType":"YulIdentifier","src":"33111:6:24"},"nativeSrc":"33111:15:24","nodeType":"YulFunctionCall","src":"33111:15:24"},"nativeSrc":"33111:15:24","nodeType":"YulExpressionStatement","src":"33111:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"33142:1:24","nodeType":"YulLiteral","src":"33142:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"33145:4:24","nodeType":"YulLiteral","src":"33145:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"33135:6:24","nodeType":"YulIdentifier","src":"33135:6:24"},"nativeSrc":"33135:15:24","nodeType":"YulFunctionCall","src":"33135:15:24"},"nativeSrc":"33135:15:24","nodeType":"YulExpressionStatement","src":"33135:15:24"}]},"name":"panic_error_0x12","nativeSrc":"32976:180:24","nodeType":"YulFunctionDefinition","src":"32976:180:24"},{"body":{"nativeSrc":"33260:124:24","nodeType":"YulBlock","src":"33260:124:24","statements":[{"nativeSrc":"33270:26:24","nodeType":"YulAssignment","src":"33270:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"33282:9:24","nodeType":"YulIdentifier","src":"33282:9:24"},{"kind":"number","nativeSrc":"33293:2:24","nodeType":"YulLiteral","src":"33293:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33278:3:24","nodeType":"YulIdentifier","src":"33278:3:24"},"nativeSrc":"33278:18:24","nodeType":"YulFunctionCall","src":"33278:18:24"},"variableNames":[{"name":"tail","nativeSrc":"33270:4:24","nodeType":"YulIdentifier","src":"33270:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33350:6:24","nodeType":"YulIdentifier","src":"33350:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"33363:9:24","nodeType":"YulIdentifier","src":"33363:9:24"},{"kind":"number","nativeSrc":"33374:1:24","nodeType":"YulLiteral","src":"33374:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33359:3:24","nodeType":"YulIdentifier","src":"33359:3:24"},"nativeSrc":"33359:17:24","nodeType":"YulFunctionCall","src":"33359:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"33306:43:24","nodeType":"YulIdentifier","src":"33306:43:24"},"nativeSrc":"33306:71:24","nodeType":"YulFunctionCall","src":"33306:71:24"},"nativeSrc":"33306:71:24","nodeType":"YulExpressionStatement","src":"33306:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"33162:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33232:9:24","nodeType":"YulTypedName","src":"33232:9:24","type":""},{"name":"value0","nativeSrc":"33244:6:24","nodeType":"YulTypedName","src":"33244:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33255:4:24","nodeType":"YulTypedName","src":"33255:4:24","type":""}],"src":"33162:222:24"},{"body":{"nativeSrc":"33516:206:24","nodeType":"YulBlock","src":"33516:206:24","statements":[{"nativeSrc":"33526:26:24","nodeType":"YulAssignment","src":"33526:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"33538:9:24","nodeType":"YulIdentifier","src":"33538:9:24"},{"kind":"number","nativeSrc":"33549:2:24","nodeType":"YulLiteral","src":"33549:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"33534:3:24","nodeType":"YulIdentifier","src":"33534:3:24"},"nativeSrc":"33534:18:24","nodeType":"YulFunctionCall","src":"33534:18:24"},"variableNames":[{"name":"tail","nativeSrc":"33526:4:24","nodeType":"YulIdentifier","src":"33526:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33606:6:24","nodeType":"YulIdentifier","src":"33606:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"33619:9:24","nodeType":"YulIdentifier","src":"33619:9:24"},{"kind":"number","nativeSrc":"33630:1:24","nodeType":"YulLiteral","src":"33630:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33615:3:24","nodeType":"YulIdentifier","src":"33615:3:24"},"nativeSrc":"33615:17:24","nodeType":"YulFunctionCall","src":"33615:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"33562:43:24","nodeType":"YulIdentifier","src":"33562:43:24"},"nativeSrc":"33562:71:24","nodeType":"YulFunctionCall","src":"33562:71:24"},"nativeSrc":"33562:71:24","nodeType":"YulExpressionStatement","src":"33562:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"33687:6:24","nodeType":"YulIdentifier","src":"33687:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"33700:9:24","nodeType":"YulIdentifier","src":"33700:9:24"},{"kind":"number","nativeSrc":"33711:2:24","nodeType":"YulLiteral","src":"33711:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33696:3:24","nodeType":"YulIdentifier","src":"33696:3:24"},"nativeSrc":"33696:18:24","nodeType":"YulFunctionCall","src":"33696:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"33643:43:24","nodeType":"YulIdentifier","src":"33643:43:24"},"nativeSrc":"33643:72:24","nodeType":"YulFunctionCall","src":"33643:72:24"},"nativeSrc":"33643:72:24","nodeType":"YulExpressionStatement","src":"33643:72:24"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"33390:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33480:9:24","nodeType":"YulTypedName","src":"33480:9:24","type":""},{"name":"value1","nativeSrc":"33492:6:24","nodeType":"YulTypedName","src":"33492:6:24","type":""},{"name":"value0","nativeSrc":"33500:6:24","nodeType":"YulTypedName","src":"33500:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33511:4:24","nodeType":"YulTypedName","src":"33511:4:24","type":""}],"src":"33390:332:24"},{"body":{"nativeSrc":"33786:40:24","nodeType":"YulBlock","src":"33786:40:24","statements":[{"nativeSrc":"33797:22:24","nodeType":"YulAssignment","src":"33797:22:24","value":{"arguments":[{"name":"value","nativeSrc":"33813:5:24","nodeType":"YulIdentifier","src":"33813:5:24"}],"functionName":{"name":"mload","nativeSrc":"33807:5:24","nodeType":"YulIdentifier","src":"33807:5:24"},"nativeSrc":"33807:12:24","nodeType":"YulFunctionCall","src":"33807:12:24"},"variableNames":[{"name":"length","nativeSrc":"33797:6:24","nodeType":"YulIdentifier","src":"33797:6:24"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"33728:98:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33769:5:24","nodeType":"YulTypedName","src":"33769:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"33779:6:24","nodeType":"YulTypedName","src":"33779:6:24","type":""}],"src":"33728:98:24"},{"body":{"nativeSrc":"33927:73:24","nodeType":"YulBlock","src":"33927:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"33944:3:24","nodeType":"YulIdentifier","src":"33944:3:24"},{"name":"length","nativeSrc":"33949:6:24","nodeType":"YulIdentifier","src":"33949:6:24"}],"functionName":{"name":"mstore","nativeSrc":"33937:6:24","nodeType":"YulIdentifier","src":"33937:6:24"},"nativeSrc":"33937:19:24","nodeType":"YulFunctionCall","src":"33937:19:24"},"nativeSrc":"33937:19:24","nodeType":"YulExpressionStatement","src":"33937:19:24"},{"nativeSrc":"33965:29:24","nodeType":"YulAssignment","src":"33965:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"33984:3:24","nodeType":"YulIdentifier","src":"33984:3:24"},{"kind":"number","nativeSrc":"33989:4:24","nodeType":"YulLiteral","src":"33989:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"33980:3:24","nodeType":"YulIdentifier","src":"33980:3:24"},"nativeSrc":"33980:14:24","nodeType":"YulFunctionCall","src":"33980:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"33965:11:24","nodeType":"YulIdentifier","src":"33965:11:24"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"33832:168:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33899:3:24","nodeType":"YulTypedName","src":"33899:3:24","type":""},{"name":"length","nativeSrc":"33904:6:24","nodeType":"YulTypedName","src":"33904:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"33915:11:24","nodeType":"YulTypedName","src":"33915:11:24","type":""}],"src":"33832:168:24"},{"body":{"nativeSrc":"34096:283:24","nodeType":"YulBlock","src":"34096:283:24","statements":[{"nativeSrc":"34106:52:24","nodeType":"YulVariableDeclaration","src":"34106:52:24","value":{"arguments":[{"name":"value","nativeSrc":"34152:5:24","nodeType":"YulIdentifier","src":"34152:5:24"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"34120:31:24","nodeType":"YulIdentifier","src":"34120:31:24"},"nativeSrc":"34120:38:24","nodeType":"YulFunctionCall","src":"34120:38:24"},"variables":[{"name":"length","nativeSrc":"34110:6:24","nodeType":"YulTypedName","src":"34110:6:24","type":""}]},{"nativeSrc":"34167:77:24","nodeType":"YulAssignment","src":"34167:77:24","value":{"arguments":[{"name":"pos","nativeSrc":"34232:3:24","nodeType":"YulIdentifier","src":"34232:3:24"},{"name":"length","nativeSrc":"34237:6:24","nodeType":"YulIdentifier","src":"34237:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"34174:57:24","nodeType":"YulIdentifier","src":"34174:57:24"},"nativeSrc":"34174:70:24","nodeType":"YulFunctionCall","src":"34174:70:24"},"variableNames":[{"name":"pos","nativeSrc":"34167:3:24","nodeType":"YulIdentifier","src":"34167:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"34292:5:24","nodeType":"YulIdentifier","src":"34292:5:24"},{"kind":"number","nativeSrc":"34299:4:24","nodeType":"YulLiteral","src":"34299:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"34288:3:24","nodeType":"YulIdentifier","src":"34288:3:24"},"nativeSrc":"34288:16:24","nodeType":"YulFunctionCall","src":"34288:16:24"},{"name":"pos","nativeSrc":"34306:3:24","nodeType":"YulIdentifier","src":"34306:3:24"},{"name":"length","nativeSrc":"34311:6:24","nodeType":"YulIdentifier","src":"34311:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"34253:34:24","nodeType":"YulIdentifier","src":"34253:34:24"},"nativeSrc":"34253:65:24","nodeType":"YulFunctionCall","src":"34253:65:24"},"nativeSrc":"34253:65:24","nodeType":"YulExpressionStatement","src":"34253:65:24"},{"nativeSrc":"34327:46:24","nodeType":"YulAssignment","src":"34327:46:24","value":{"arguments":[{"name":"pos","nativeSrc":"34338:3:24","nodeType":"YulIdentifier","src":"34338:3:24"},{"arguments":[{"name":"length","nativeSrc":"34365:6:24","nodeType":"YulIdentifier","src":"34365:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"34343:21:24","nodeType":"YulIdentifier","src":"34343:21:24"},"nativeSrc":"34343:29:24","nodeType":"YulFunctionCall","src":"34343:29:24"}],"functionName":{"name":"add","nativeSrc":"34334:3:24","nodeType":"YulIdentifier","src":"34334:3:24"},"nativeSrc":"34334:39:24","nodeType":"YulFunctionCall","src":"34334:39:24"},"variableNames":[{"name":"end","nativeSrc":"34327:3:24","nodeType":"YulIdentifier","src":"34327:3:24"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"34006:373:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34077:5:24","nodeType":"YulTypedName","src":"34077:5:24","type":""},{"name":"pos","nativeSrc":"34084:3:24","nodeType":"YulTypedName","src":"34084:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34092:3:24","nodeType":"YulTypedName","src":"34092:3:24","type":""}],"src":"34006:373:24"},{"body":{"nativeSrc":"34613:523:24","nodeType":"YulBlock","src":"34613:523:24","statements":[{"nativeSrc":"34623:27:24","nodeType":"YulAssignment","src":"34623:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"34635:9:24","nodeType":"YulIdentifier","src":"34635:9:24"},{"kind":"number","nativeSrc":"34646:3:24","nodeType":"YulLiteral","src":"34646:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"34631:3:24","nodeType":"YulIdentifier","src":"34631:3:24"},"nativeSrc":"34631:19:24","nodeType":"YulFunctionCall","src":"34631:19:24"},"variableNames":[{"name":"tail","nativeSrc":"34623:4:24","nodeType":"YulIdentifier","src":"34623:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"34704:6:24","nodeType":"YulIdentifier","src":"34704:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"34717:9:24","nodeType":"YulIdentifier","src":"34717:9:24"},{"kind":"number","nativeSrc":"34728:1:24","nodeType":"YulLiteral","src":"34728:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34713:3:24","nodeType":"YulIdentifier","src":"34713:3:24"},"nativeSrc":"34713:17:24","nodeType":"YulFunctionCall","src":"34713:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"34660:43:24","nodeType":"YulIdentifier","src":"34660:43:24"},"nativeSrc":"34660:71:24","nodeType":"YulFunctionCall","src":"34660:71:24"},"nativeSrc":"34660:71:24","nodeType":"YulExpressionStatement","src":"34660:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"34785:6:24","nodeType":"YulIdentifier","src":"34785:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"34798:9:24","nodeType":"YulIdentifier","src":"34798:9:24"},{"kind":"number","nativeSrc":"34809:2:24","nodeType":"YulLiteral","src":"34809:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34794:3:24","nodeType":"YulIdentifier","src":"34794:3:24"},"nativeSrc":"34794:18:24","nodeType":"YulFunctionCall","src":"34794:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"34741:43:24","nodeType":"YulIdentifier","src":"34741:43:24"},"nativeSrc":"34741:72:24","nodeType":"YulFunctionCall","src":"34741:72:24"},"nativeSrc":"34741:72:24","nodeType":"YulExpressionStatement","src":"34741:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"34867:6:24","nodeType":"YulIdentifier","src":"34867:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"34880:9:24","nodeType":"YulIdentifier","src":"34880:9:24"},{"kind":"number","nativeSrc":"34891:2:24","nodeType":"YulLiteral","src":"34891:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"34876:3:24","nodeType":"YulIdentifier","src":"34876:3:24"},"nativeSrc":"34876:18:24","nodeType":"YulFunctionCall","src":"34876:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"34823:43:24","nodeType":"YulIdentifier","src":"34823:43:24"},"nativeSrc":"34823:72:24","nodeType":"YulFunctionCall","src":"34823:72:24"},"nativeSrc":"34823:72:24","nodeType":"YulExpressionStatement","src":"34823:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"34949:6:24","nodeType":"YulIdentifier","src":"34949:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"34962:9:24","nodeType":"YulIdentifier","src":"34962:9:24"},{"kind":"number","nativeSrc":"34973:2:24","nodeType":"YulLiteral","src":"34973:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"34958:3:24","nodeType":"YulIdentifier","src":"34958:3:24"},"nativeSrc":"34958:18:24","nodeType":"YulFunctionCall","src":"34958:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"34905:43:24","nodeType":"YulIdentifier","src":"34905:43:24"},"nativeSrc":"34905:72:24","nodeType":"YulFunctionCall","src":"34905:72:24"},"nativeSrc":"34905:72:24","nodeType":"YulExpressionStatement","src":"34905:72:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34998:9:24","nodeType":"YulIdentifier","src":"34998:9:24"},{"kind":"number","nativeSrc":"35009:3:24","nodeType":"YulLiteral","src":"35009:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"34994:3:24","nodeType":"YulIdentifier","src":"34994:3:24"},"nativeSrc":"34994:19:24","nodeType":"YulFunctionCall","src":"34994:19:24"},{"arguments":[{"name":"tail","nativeSrc":"35019:4:24","nodeType":"YulIdentifier","src":"35019:4:24"},{"name":"headStart","nativeSrc":"35025:9:24","nodeType":"YulIdentifier","src":"35025:9:24"}],"functionName":{"name":"sub","nativeSrc":"35015:3:24","nodeType":"YulIdentifier","src":"35015:3:24"},"nativeSrc":"35015:20:24","nodeType":"YulFunctionCall","src":"35015:20:24"}],"functionName":{"name":"mstore","nativeSrc":"34987:6:24","nodeType":"YulIdentifier","src":"34987:6:24"},"nativeSrc":"34987:49:24","nodeType":"YulFunctionCall","src":"34987:49:24"},"nativeSrc":"34987:49:24","nodeType":"YulExpressionStatement","src":"34987:49:24"},{"nativeSrc":"35045:84:24","nodeType":"YulAssignment","src":"35045:84:24","value":{"arguments":[{"name":"value4","nativeSrc":"35115:6:24","nodeType":"YulIdentifier","src":"35115:6:24"},{"name":"tail","nativeSrc":"35124:4:24","nodeType":"YulIdentifier","src":"35124:4:24"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"35053:61:24","nodeType":"YulIdentifier","src":"35053:61:24"},"nativeSrc":"35053:76:24","nodeType":"YulFunctionCall","src":"35053:76:24"},"variableNames":[{"name":"tail","nativeSrc":"35045:4:24","nodeType":"YulIdentifier","src":"35045:4:24"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"34385:751:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"34553:9:24","nodeType":"YulTypedName","src":"34553:9:24","type":""},{"name":"value4","nativeSrc":"34565:6:24","nodeType":"YulTypedName","src":"34565:6:24","type":""},{"name":"value3","nativeSrc":"34573:6:24","nodeType":"YulTypedName","src":"34573:6:24","type":""},{"name":"value2","nativeSrc":"34581:6:24","nodeType":"YulTypedName","src":"34581:6:24","type":""},{"name":"value1","nativeSrc":"34589:6:24","nodeType":"YulTypedName","src":"34589:6:24","type":""},{"name":"value0","nativeSrc":"34597:6:24","nodeType":"YulTypedName","src":"34597:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"34608:4:24","nodeType":"YulTypedName","src":"34608:4:24","type":""}],"src":"34385:751:24"},{"body":{"nativeSrc":"35204:79:24","nodeType":"YulBlock","src":"35204:79:24","statements":[{"nativeSrc":"35214:22:24","nodeType":"YulAssignment","src":"35214:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"35229:6:24","nodeType":"YulIdentifier","src":"35229:6:24"}],"functionName":{"name":"mload","nativeSrc":"35223:5:24","nodeType":"YulIdentifier","src":"35223:5:24"},"nativeSrc":"35223:13:24","nodeType":"YulFunctionCall","src":"35223:13:24"},"variableNames":[{"name":"value","nativeSrc":"35214:5:24","nodeType":"YulIdentifier","src":"35214:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"35271:5:24","nodeType":"YulIdentifier","src":"35271:5:24"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"35245:25:24","nodeType":"YulIdentifier","src":"35245:25:24"},"nativeSrc":"35245:32:24","nodeType":"YulFunctionCall","src":"35245:32:24"},"nativeSrc":"35245:32:24","nodeType":"YulExpressionStatement","src":"35245:32:24"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"35142:141:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"35182:6:24","nodeType":"YulTypedName","src":"35182:6:24","type":""},{"name":"end","nativeSrc":"35190:3:24","nodeType":"YulTypedName","src":"35190:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"35198:5:24","nodeType":"YulTypedName","src":"35198:5:24","type":""}],"src":"35142:141:24"},{"body":{"nativeSrc":"35365:273:24","nodeType":"YulBlock","src":"35365:273:24","statements":[{"body":{"nativeSrc":"35411:83:24","nodeType":"YulBlock","src":"35411:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"35413:77:24","nodeType":"YulIdentifier","src":"35413:77:24"},"nativeSrc":"35413:79:24","nodeType":"YulFunctionCall","src":"35413:79:24"},"nativeSrc":"35413:79:24","nodeType":"YulExpressionStatement","src":"35413:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"35386:7:24","nodeType":"YulIdentifier","src":"35386:7:24"},{"name":"headStart","nativeSrc":"35395:9:24","nodeType":"YulIdentifier","src":"35395:9:24"}],"functionName":{"name":"sub","nativeSrc":"35382:3:24","nodeType":"YulIdentifier","src":"35382:3:24"},"nativeSrc":"35382:23:24","nodeType":"YulFunctionCall","src":"35382:23:24"},{"kind":"number","nativeSrc":"35407:2:24","nodeType":"YulLiteral","src":"35407:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"35378:3:24","nodeType":"YulIdentifier","src":"35378:3:24"},"nativeSrc":"35378:32:24","nodeType":"YulFunctionCall","src":"35378:32:24"},"nativeSrc":"35375:119:24","nodeType":"YulIf","src":"35375:119:24"},{"nativeSrc":"35504:127:24","nodeType":"YulBlock","src":"35504:127:24","statements":[{"nativeSrc":"35519:15:24","nodeType":"YulVariableDeclaration","src":"35519:15:24","value":{"kind":"number","nativeSrc":"35533:1:24","nodeType":"YulLiteral","src":"35533:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"35523:6:24","nodeType":"YulTypedName","src":"35523:6:24","type":""}]},{"nativeSrc":"35548:73:24","nodeType":"YulAssignment","src":"35548:73:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35593:9:24","nodeType":"YulIdentifier","src":"35593:9:24"},{"name":"offset","nativeSrc":"35604:6:24","nodeType":"YulIdentifier","src":"35604:6:24"}],"functionName":{"name":"add","nativeSrc":"35589:3:24","nodeType":"YulIdentifier","src":"35589:3:24"},"nativeSrc":"35589:22:24","nodeType":"YulFunctionCall","src":"35589:22:24"},{"name":"dataEnd","nativeSrc":"35613:7:24","nodeType":"YulIdentifier","src":"35613:7:24"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"35558:30:24","nodeType":"YulIdentifier","src":"35558:30:24"},"nativeSrc":"35558:63:24","nodeType":"YulFunctionCall","src":"35558:63:24"},"variableNames":[{"name":"value0","nativeSrc":"35548:6:24","nodeType":"YulIdentifier","src":"35548:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"35289:349:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35335:9:24","nodeType":"YulTypedName","src":"35335:9:24","type":""},{"name":"dataEnd","nativeSrc":"35346:7:24","nodeType":"YulTypedName","src":"35346:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"35358:6:24","nodeType":"YulTypedName","src":"35358:6:24","type":""}],"src":"35289:349:24"},{"body":{"nativeSrc":"35972:725:24","nodeType":"YulBlock","src":"35972:725:24","statements":[{"nativeSrc":"35982:27:24","nodeType":"YulAssignment","src":"35982:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"35994:9:24","nodeType":"YulIdentifier","src":"35994:9:24"},{"kind":"number","nativeSrc":"36005:3:24","nodeType":"YulLiteral","src":"36005:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"35990:3:24","nodeType":"YulIdentifier","src":"35990:3:24"},"nativeSrc":"35990:19:24","nodeType":"YulFunctionCall","src":"35990:19:24"},"variableNames":[{"name":"tail","nativeSrc":"35982:4:24","nodeType":"YulIdentifier","src":"35982:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36063:6:24","nodeType":"YulIdentifier","src":"36063:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"36076:9:24","nodeType":"YulIdentifier","src":"36076:9:24"},{"kind":"number","nativeSrc":"36087:1:24","nodeType":"YulLiteral","src":"36087:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36072:3:24","nodeType":"YulIdentifier","src":"36072:3:24"},"nativeSrc":"36072:17:24","nodeType":"YulFunctionCall","src":"36072:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"36019:43:24","nodeType":"YulIdentifier","src":"36019:43:24"},"nativeSrc":"36019:71:24","nodeType":"YulFunctionCall","src":"36019:71:24"},"nativeSrc":"36019:71:24","nodeType":"YulExpressionStatement","src":"36019:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"36144:6:24","nodeType":"YulIdentifier","src":"36144:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"36157:9:24","nodeType":"YulIdentifier","src":"36157:9:24"},{"kind":"number","nativeSrc":"36168:2:24","nodeType":"YulLiteral","src":"36168:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36153:3:24","nodeType":"YulIdentifier","src":"36153:3:24"},"nativeSrc":"36153:18:24","nodeType":"YulFunctionCall","src":"36153:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"36100:43:24","nodeType":"YulIdentifier","src":"36100:43:24"},"nativeSrc":"36100:72:24","nodeType":"YulFunctionCall","src":"36100:72:24"},"nativeSrc":"36100:72:24","nodeType":"YulExpressionStatement","src":"36100:72:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36193:9:24","nodeType":"YulIdentifier","src":"36193:9:24"},{"kind":"number","nativeSrc":"36204:2:24","nodeType":"YulLiteral","src":"36204:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"36189:3:24","nodeType":"YulIdentifier","src":"36189:3:24"},"nativeSrc":"36189:18:24","nodeType":"YulFunctionCall","src":"36189:18:24"},{"arguments":[{"name":"tail","nativeSrc":"36213:4:24","nodeType":"YulIdentifier","src":"36213:4:24"},{"name":"headStart","nativeSrc":"36219:9:24","nodeType":"YulIdentifier","src":"36219:9:24"}],"functionName":{"name":"sub","nativeSrc":"36209:3:24","nodeType":"YulIdentifier","src":"36209:3:24"},"nativeSrc":"36209:20:24","nodeType":"YulFunctionCall","src":"36209:20:24"}],"functionName":{"name":"mstore","nativeSrc":"36182:6:24","nodeType":"YulIdentifier","src":"36182:6:24"},"nativeSrc":"36182:48:24","nodeType":"YulFunctionCall","src":"36182:48:24"},"nativeSrc":"36182:48:24","nodeType":"YulExpressionStatement","src":"36182:48:24"},{"nativeSrc":"36239:116:24","nodeType":"YulAssignment","src":"36239:116:24","value":{"arguments":[{"name":"value2","nativeSrc":"36341:6:24","nodeType":"YulIdentifier","src":"36341:6:24"},{"name":"tail","nativeSrc":"36350:4:24","nodeType":"YulIdentifier","src":"36350:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"36247:93:24","nodeType":"YulIdentifier","src":"36247:93:24"},"nativeSrc":"36247:108:24","nodeType":"YulFunctionCall","src":"36247:108:24"},"variableNames":[{"name":"tail","nativeSrc":"36239:4:24","nodeType":"YulIdentifier","src":"36239:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36376:9:24","nodeType":"YulIdentifier","src":"36376:9:24"},{"kind":"number","nativeSrc":"36387:2:24","nodeType":"YulLiteral","src":"36387:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"36372:3:24","nodeType":"YulIdentifier","src":"36372:3:24"},"nativeSrc":"36372:18:24","nodeType":"YulFunctionCall","src":"36372:18:24"},{"arguments":[{"name":"tail","nativeSrc":"36396:4:24","nodeType":"YulIdentifier","src":"36396:4:24"},{"name":"headStart","nativeSrc":"36402:9:24","nodeType":"YulIdentifier","src":"36402:9:24"}],"functionName":{"name":"sub","nativeSrc":"36392:3:24","nodeType":"YulIdentifier","src":"36392:3:24"},"nativeSrc":"36392:20:24","nodeType":"YulFunctionCall","src":"36392:20:24"}],"functionName":{"name":"mstore","nativeSrc":"36365:6:24","nodeType":"YulIdentifier","src":"36365:6:24"},"nativeSrc":"36365:48:24","nodeType":"YulFunctionCall","src":"36365:48:24"},"nativeSrc":"36365:48:24","nodeType":"YulExpressionStatement","src":"36365:48:24"},{"nativeSrc":"36422:116:24","nodeType":"YulAssignment","src":"36422:116:24","value":{"arguments":[{"name":"value3","nativeSrc":"36524:6:24","nodeType":"YulIdentifier","src":"36524:6:24"},{"name":"tail","nativeSrc":"36533:4:24","nodeType":"YulIdentifier","src":"36533:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"36430:93:24","nodeType":"YulIdentifier","src":"36430:93:24"},"nativeSrc":"36430:108:24","nodeType":"YulFunctionCall","src":"36430:108:24"},"variableNames":[{"name":"tail","nativeSrc":"36422:4:24","nodeType":"YulIdentifier","src":"36422:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36559:9:24","nodeType":"YulIdentifier","src":"36559:9:24"},{"kind":"number","nativeSrc":"36570:3:24","nodeType":"YulLiteral","src":"36570:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"36555:3:24","nodeType":"YulIdentifier","src":"36555:3:24"},"nativeSrc":"36555:19:24","nodeType":"YulFunctionCall","src":"36555:19:24"},{"arguments":[{"name":"tail","nativeSrc":"36580:4:24","nodeType":"YulIdentifier","src":"36580:4:24"},{"name":"headStart","nativeSrc":"36586:9:24","nodeType":"YulIdentifier","src":"36586:9:24"}],"functionName":{"name":"sub","nativeSrc":"36576:3:24","nodeType":"YulIdentifier","src":"36576:3:24"},"nativeSrc":"36576:20:24","nodeType":"YulFunctionCall","src":"36576:20:24"}],"functionName":{"name":"mstore","nativeSrc":"36548:6:24","nodeType":"YulIdentifier","src":"36548:6:24"},"nativeSrc":"36548:49:24","nodeType":"YulFunctionCall","src":"36548:49:24"},"nativeSrc":"36548:49:24","nodeType":"YulExpressionStatement","src":"36548:49:24"},{"nativeSrc":"36606:84:24","nodeType":"YulAssignment","src":"36606:84:24","value":{"arguments":[{"name":"value4","nativeSrc":"36676:6:24","nodeType":"YulIdentifier","src":"36676:6:24"},{"name":"tail","nativeSrc":"36685:4:24","nodeType":"YulIdentifier","src":"36685:4:24"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"36614:61:24","nodeType":"YulIdentifier","src":"36614:61:24"},"nativeSrc":"36614:76:24","nodeType":"YulFunctionCall","src":"36614:76:24"},"variableNames":[{"name":"tail","nativeSrc":"36606:4:24","nodeType":"YulIdentifier","src":"36606:4:24"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"35644:1053:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35912:9:24","nodeType":"YulTypedName","src":"35912:9:24","type":""},{"name":"value4","nativeSrc":"35924:6:24","nodeType":"YulTypedName","src":"35924:6:24","type":""},{"name":"value3","nativeSrc":"35932:6:24","nodeType":"YulTypedName","src":"35932:6:24","type":""},{"name":"value2","nativeSrc":"35940:6:24","nodeType":"YulTypedName","src":"35940:6:24","type":""},{"name":"value1","nativeSrc":"35948:6:24","nodeType":"YulTypedName","src":"35948:6:24","type":""},{"name":"value0","nativeSrc":"35956:6:24","nodeType":"YulTypedName","src":"35956:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35967:4:24","nodeType":"YulTypedName","src":"35967:4:24","type":""}],"src":"35644:1053:24"},{"body":{"nativeSrc":"36885:371:24","nodeType":"YulBlock","src":"36885:371:24","statements":[{"nativeSrc":"36895:27:24","nodeType":"YulAssignment","src":"36895:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"36907:9:24","nodeType":"YulIdentifier","src":"36907:9:24"},{"kind":"number","nativeSrc":"36918:3:24","nodeType":"YulLiteral","src":"36918:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"36903:3:24","nodeType":"YulIdentifier","src":"36903:3:24"},"nativeSrc":"36903:19:24","nodeType":"YulFunctionCall","src":"36903:19:24"},"variableNames":[{"name":"tail","nativeSrc":"36895:4:24","nodeType":"YulIdentifier","src":"36895:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36976:6:24","nodeType":"YulIdentifier","src":"36976:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"36989:9:24","nodeType":"YulIdentifier","src":"36989:9:24"},{"kind":"number","nativeSrc":"37000:1:24","nodeType":"YulLiteral","src":"37000:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36985:3:24","nodeType":"YulIdentifier","src":"36985:3:24"},"nativeSrc":"36985:17:24","nodeType":"YulFunctionCall","src":"36985:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"36932:43:24","nodeType":"YulIdentifier","src":"36932:43:24"},"nativeSrc":"36932:71:24","nodeType":"YulFunctionCall","src":"36932:71:24"},"nativeSrc":"36932:71:24","nodeType":"YulExpressionStatement","src":"36932:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"37057:6:24","nodeType":"YulIdentifier","src":"37057:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"37070:9:24","nodeType":"YulIdentifier","src":"37070:9:24"},{"kind":"number","nativeSrc":"37081:2:24","nodeType":"YulLiteral","src":"37081:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37066:3:24","nodeType":"YulIdentifier","src":"37066:3:24"},"nativeSrc":"37066:18:24","nodeType":"YulFunctionCall","src":"37066:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37013:43:24","nodeType":"YulIdentifier","src":"37013:43:24"},"nativeSrc":"37013:72:24","nodeType":"YulFunctionCall","src":"37013:72:24"},"nativeSrc":"37013:72:24","nodeType":"YulExpressionStatement","src":"37013:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"37139:6:24","nodeType":"YulIdentifier","src":"37139:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"37152:9:24","nodeType":"YulIdentifier","src":"37152:9:24"},{"kind":"number","nativeSrc":"37163:2:24","nodeType":"YulLiteral","src":"37163:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37148:3:24","nodeType":"YulIdentifier","src":"37148:3:24"},"nativeSrc":"37148:18:24","nodeType":"YulFunctionCall","src":"37148:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37095:43:24","nodeType":"YulIdentifier","src":"37095:43:24"},"nativeSrc":"37095:72:24","nodeType":"YulFunctionCall","src":"37095:72:24"},"nativeSrc":"37095:72:24","nodeType":"YulExpressionStatement","src":"37095:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"37221:6:24","nodeType":"YulIdentifier","src":"37221:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"37234:9:24","nodeType":"YulIdentifier","src":"37234:9:24"},{"kind":"number","nativeSrc":"37245:2:24","nodeType":"YulLiteral","src":"37245:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"37230:3:24","nodeType":"YulIdentifier","src":"37230:3:24"},"nativeSrc":"37230:18:24","nodeType":"YulFunctionCall","src":"37230:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37177:43:24","nodeType":"YulIdentifier","src":"37177:43:24"},"nativeSrc":"37177:72:24","nodeType":"YulFunctionCall","src":"37177:72:24"},"nativeSrc":"37177:72:24","nodeType":"YulExpressionStatement","src":"37177:72:24"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"36703:553:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36833:9:24","nodeType":"YulTypedName","src":"36833:9:24","type":""},{"name":"value3","nativeSrc":"36845:6:24","nodeType":"YulTypedName","src":"36845:6:24","type":""},{"name":"value2","nativeSrc":"36853:6:24","nodeType":"YulTypedName","src":"36853:6:24","type":""},{"name":"value1","nativeSrc":"36861:6:24","nodeType":"YulTypedName","src":"36861:6:24","type":""},{"name":"value0","nativeSrc":"36869:6:24","nodeType":"YulTypedName","src":"36869:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36880:4:24","nodeType":"YulTypedName","src":"36880:4:24","type":""}],"src":"36703:553:24"},{"body":{"nativeSrc":"37290:152:24","nodeType":"YulBlock","src":"37290:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"37307:1:24","nodeType":"YulLiteral","src":"37307:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"37310:77:24","nodeType":"YulLiteral","src":"37310:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"37300:6:24","nodeType":"YulIdentifier","src":"37300:6:24"},"nativeSrc":"37300:88:24","nodeType":"YulFunctionCall","src":"37300:88:24"},"nativeSrc":"37300:88:24","nodeType":"YulExpressionStatement","src":"37300:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"37404:1:24","nodeType":"YulLiteral","src":"37404:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"37407:4:24","nodeType":"YulLiteral","src":"37407:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"37397:6:24","nodeType":"YulIdentifier","src":"37397:6:24"},"nativeSrc":"37397:15:24","nodeType":"YulFunctionCall","src":"37397:15:24"},"nativeSrc":"37397:15:24","nodeType":"YulExpressionStatement","src":"37397:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"37428:1:24","nodeType":"YulLiteral","src":"37428:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"37431:4:24","nodeType":"YulLiteral","src":"37431:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"37421:6:24","nodeType":"YulIdentifier","src":"37421:6:24"},"nativeSrc":"37421:15:24","nodeType":"YulFunctionCall","src":"37421:15:24"},"nativeSrc":"37421:15:24","nodeType":"YulExpressionStatement","src":"37421:15:24"}]},"name":"panic_error_0x11","nativeSrc":"37262:180:24","nodeType":"YulFunctionDefinition","src":"37262:180:24"},{"body":{"nativeSrc":"37492:147:24","nodeType":"YulBlock","src":"37492:147:24","statements":[{"nativeSrc":"37502:25:24","nodeType":"YulAssignment","src":"37502:25:24","value":{"arguments":[{"name":"x","nativeSrc":"37525:1:24","nodeType":"YulIdentifier","src":"37525:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"37507:17:24","nodeType":"YulIdentifier","src":"37507:17:24"},"nativeSrc":"37507:20:24","nodeType":"YulFunctionCall","src":"37507:20:24"},"variableNames":[{"name":"x","nativeSrc":"37502:1:24","nodeType":"YulIdentifier","src":"37502:1:24"}]},{"nativeSrc":"37536:25:24","nodeType":"YulAssignment","src":"37536:25:24","value":{"arguments":[{"name":"y","nativeSrc":"37559:1:24","nodeType":"YulIdentifier","src":"37559:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"37541:17:24","nodeType":"YulIdentifier","src":"37541:17:24"},"nativeSrc":"37541:20:24","nodeType":"YulFunctionCall","src":"37541:20:24"},"variableNames":[{"name":"y","nativeSrc":"37536:1:24","nodeType":"YulIdentifier","src":"37536:1:24"}]},{"nativeSrc":"37570:16:24","nodeType":"YulAssignment","src":"37570:16:24","value":{"arguments":[{"name":"x","nativeSrc":"37581:1:24","nodeType":"YulIdentifier","src":"37581:1:24"},{"name":"y","nativeSrc":"37584:1:24","nodeType":"YulIdentifier","src":"37584:1:24"}],"functionName":{"name":"add","nativeSrc":"37577:3:24","nodeType":"YulIdentifier","src":"37577:3:24"},"nativeSrc":"37577:9:24","nodeType":"YulFunctionCall","src":"37577:9:24"},"variableNames":[{"name":"sum","nativeSrc":"37570:3:24","nodeType":"YulIdentifier","src":"37570:3:24"}]},{"body":{"nativeSrc":"37610:22:24","nodeType":"YulBlock","src":"37610:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"37612:16:24","nodeType":"YulIdentifier","src":"37612:16:24"},"nativeSrc":"37612:18:24","nodeType":"YulFunctionCall","src":"37612:18:24"},"nativeSrc":"37612:18:24","nodeType":"YulExpressionStatement","src":"37612:18:24"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"37602:1:24","nodeType":"YulIdentifier","src":"37602:1:24"},{"name":"sum","nativeSrc":"37605:3:24","nodeType":"YulIdentifier","src":"37605:3:24"}],"functionName":{"name":"gt","nativeSrc":"37599:2:24","nodeType":"YulIdentifier","src":"37599:2:24"},"nativeSrc":"37599:10:24","nodeType":"YulFunctionCall","src":"37599:10:24"},"nativeSrc":"37596:36:24","nodeType":"YulIf","src":"37596:36:24"}]},"name":"checked_add_t_uint256","nativeSrc":"37448:191:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"37479:1:24","nodeType":"YulTypedName","src":"37479:1:24","type":""},{"name":"y","nativeSrc":"37482:1:24","nodeType":"YulTypedName","src":"37482:1:24","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"37488:3:24","nodeType":"YulTypedName","src":"37488:3:24","type":""}],"src":"37448:191:24"},{"body":{"nativeSrc":"37871:408:24","nodeType":"YulBlock","src":"37871:408:24","statements":[{"nativeSrc":"37881:26:24","nodeType":"YulAssignment","src":"37881:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"37893:9:24","nodeType":"YulIdentifier","src":"37893:9:24"},{"kind":"number","nativeSrc":"37904:2:24","nodeType":"YulLiteral","src":"37904:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37889:3:24","nodeType":"YulIdentifier","src":"37889:3:24"},"nativeSrc":"37889:18:24","nodeType":"YulFunctionCall","src":"37889:18:24"},"variableNames":[{"name":"tail","nativeSrc":"37881:4:24","nodeType":"YulIdentifier","src":"37881:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37928:9:24","nodeType":"YulIdentifier","src":"37928:9:24"},{"kind":"number","nativeSrc":"37939:1:24","nodeType":"YulLiteral","src":"37939:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37924:3:24","nodeType":"YulIdentifier","src":"37924:3:24"},"nativeSrc":"37924:17:24","nodeType":"YulFunctionCall","src":"37924:17:24"},{"arguments":[{"name":"tail","nativeSrc":"37947:4:24","nodeType":"YulIdentifier","src":"37947:4:24"},{"name":"headStart","nativeSrc":"37953:9:24","nodeType":"YulIdentifier","src":"37953:9:24"}],"functionName":{"name":"sub","nativeSrc":"37943:3:24","nodeType":"YulIdentifier","src":"37943:3:24"},"nativeSrc":"37943:20:24","nodeType":"YulFunctionCall","src":"37943:20:24"}],"functionName":{"name":"mstore","nativeSrc":"37917:6:24","nodeType":"YulIdentifier","src":"37917:6:24"},"nativeSrc":"37917:47:24","nodeType":"YulFunctionCall","src":"37917:47:24"},"nativeSrc":"37917:47:24","nodeType":"YulExpressionStatement","src":"37917:47:24"},{"nativeSrc":"37973:116:24","nodeType":"YulAssignment","src":"37973:116:24","value":{"arguments":[{"name":"value0","nativeSrc":"38075:6:24","nodeType":"YulIdentifier","src":"38075:6:24"},{"name":"tail","nativeSrc":"38084:4:24","nodeType":"YulIdentifier","src":"38084:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"37981:93:24","nodeType":"YulIdentifier","src":"37981:93:24"},"nativeSrc":"37981:108:24","nodeType":"YulFunctionCall","src":"37981:108:24"},"variableNames":[{"name":"tail","nativeSrc":"37973:4:24","nodeType":"YulIdentifier","src":"37973:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38110:9:24","nodeType":"YulIdentifier","src":"38110:9:24"},{"kind":"number","nativeSrc":"38121:2:24","nodeType":"YulLiteral","src":"38121:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38106:3:24","nodeType":"YulIdentifier","src":"38106:3:24"},"nativeSrc":"38106:18:24","nodeType":"YulFunctionCall","src":"38106:18:24"},{"arguments":[{"name":"tail","nativeSrc":"38130:4:24","nodeType":"YulIdentifier","src":"38130:4:24"},{"name":"headStart","nativeSrc":"38136:9:24","nodeType":"YulIdentifier","src":"38136:9:24"}],"functionName":{"name":"sub","nativeSrc":"38126:3:24","nodeType":"YulIdentifier","src":"38126:3:24"},"nativeSrc":"38126:20:24","nodeType":"YulFunctionCall","src":"38126:20:24"}],"functionName":{"name":"mstore","nativeSrc":"38099:6:24","nodeType":"YulIdentifier","src":"38099:6:24"},"nativeSrc":"38099:48:24","nodeType":"YulFunctionCall","src":"38099:48:24"},"nativeSrc":"38099:48:24","nodeType":"YulExpressionStatement","src":"38099:48:24"},{"nativeSrc":"38156:116:24","nodeType":"YulAssignment","src":"38156:116:24","value":{"arguments":[{"name":"value1","nativeSrc":"38258:6:24","nodeType":"YulIdentifier","src":"38258:6:24"},{"name":"tail","nativeSrc":"38267:4:24","nodeType":"YulIdentifier","src":"38267:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"38164:93:24","nodeType":"YulIdentifier","src":"38164:93:24"},"nativeSrc":"38164:108:24","nodeType":"YulFunctionCall","src":"38164:108:24"},"variableNames":[{"name":"tail","nativeSrc":"38156:4:24","nodeType":"YulIdentifier","src":"38156:4:24"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"37645:634:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37835:9:24","nodeType":"YulTypedName","src":"37835:9:24","type":""},{"name":"value1","nativeSrc":"37847:6:24","nodeType":"YulTypedName","src":"37847:6:24","type":""},{"name":"value0","nativeSrc":"37855:6:24","nodeType":"YulTypedName","src":"37855:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37866:4:24","nodeType":"YulTypedName","src":"37866:4:24","type":""}],"src":"37645:634:24"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101a85760003560e01c80635c975abb116100f9578063a22cb46511610097578063e63ab1e911610071578063e63ab1e9146104a1578063e985e9c5146104bf578063f242432a146104ef578063f5298aca1461050b576101a8565b8063a22cb4651461044b578063d539139314610467578063d547741f14610485576101a8565b80637f345710116100d35780637f345710146103d55780638456cb59146103f357806391d14854146103fd578063a217fddf1461042d576101a8565b80635c975abb1461037f5780636b20c4541461039d578063731133e9146103b9576101a8565b80632e240ade1161016657806336568abe1161014057806336568abe1461030d5780633f4ba83a146103295780634e1273f414610333578063503a28bd14610363576101a8565b80632e240ade146102a55780632eb2c2d6146102d55780632f2ff15d146102f1576101a8565b8062fdd58e146101ad57806301ffc9a7146101dd57806302fe53051461020d5780630e89341c146102295780631f7fdffa14610259578063248a9ca314610275575b600080fd5b6101c760048036038101906101c29190612558565b610527565b6040516101d491906125a7565b60405180910390f35b6101f760048036038101906101f2919061261a565b610581565b6040516102049190612662565b60405180910390f35b610227600480360381019061022291906127c3565b610593565b005b610243600480360381019061023e919061280c565b6105ca565b60405161025091906128b8565b60405180910390f35b610273600480360381019061026e9190612a43565b61060b565b005b61028f600480360381019061028a9190612b34565b610648565b60405161029c9190612b70565b60405180910390f35b6102bf60048036038101906102ba9190612b8b565b610668565b6040516102cc9190612ca5565b60405180910390f35b6102ef60048036038101906102ea9190612cc7565b61071d565b005b61030b60048036038101906103069190612d96565b6107c5565b005b61032760048036038101906103229190612d96565b6107e7565b005b610331610862565b005b61034d60048036038101906103489190612e99565b610897565b60405161035a9190612ca5565b60405180910390f35b61037d60048036038101906103789190612f11565b6109a0565b005b610387610a43565b6040516103949190612662565b60405180910390f35b6103b760048036038101906103b29190612fe8565b610a5a565b005b6103d360048036038101906103ce9190613073565b610b06565b005b6103dd610b43565b6040516103ea9190612b70565b60405180910390f35b6103fb610b67565b005b61041760048036038101906104129190612d96565b610b9c565b6040516104249190612662565b60405180910390f35b610435610c07565b6040516104429190612b70565b60405180910390f35b61046560048036038101906104609190613122565b610c0e565b005b61046f610c24565b60405161047c9190612b70565b60405180910390f35b61049f600480360381019061049a9190612d96565b610c48565b005b6104a9610c6a565b6040516104b69190612b70565b60405180910390f35b6104d960048036038101906104d49190613162565b610c8e565b6040516104e69190612662565b60405180910390f35b610509600480360381019061050491906131a2565b610d22565b005b61052560048036038101906105209190613239565b610dca565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061058c82610e76565b9050919050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c6105bd81610ef0565b6105c682610f04565b5050565b606060006105d783610f17565b9050806105e384610fab565b6040516020016105f49291906132c8565b604051602081830303815290604052915050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661063581610ef0565b61064185858585611079565b5050505050565b600060036000838152602001908152602001600020600101549050919050565b60606000825167ffffffffffffffff81111561068757610686612698565b5b6040519080825280602002602001820160405280156106b55781602001602082028036833780820191505090505b50905060005b8351811015610712576106e8858583815181106106db576106da6132ec565b5b6020026020010151610527565b8282815181106106fb576106fa6132ec565b5b6020026020010181815250508060010190506106bb565b508091505092915050565b60006107276110ff565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561076c575061076a8682610c8e565b155b156107b05780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107a792919061332a565b60405180910390fd5b6107bd8686868686611107565b505050505050565b6107ce82610648565b6107d781610ef0565b6107e183836111ff565b50505050565b6107ef6110ff565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610853576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085d82826112f1565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61088c81610ef0565b6108946113e4565b50565b606081518351146108e357815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016108da929190613353565b60405180910390fd5b6000835167ffffffffffffffff811115610900576108ff612698565b5b60405190808252806020026020018201604052801561092e5781602001602082028036833780820191505090505b50905060005b84518110156109955761096b610953828761144790919063ffffffff16565b610966838761145b90919063ffffffff16565b610527565b82828151811061097e5761097d6132ec565b5b602002602001018181525050806001019050610934565b508091505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109ca81610ef0565b60005b8551811015610a3b57610a308682815181106109ec576109eb6132ec565b5b6020026020010151868381518110610a0757610a066132ec565b5b6020026020010151868481518110610a2257610a216132ec565b5b60200260200101518661146f565b8060010190506109cd565b505050505050565b6000600460009054906101000a900460ff16905090565b610a626110ff565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610aab5750610aa983610aa46110ff565b610c8e565b155b15610af657610ab86110ff565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610aed92919061332a565b60405180910390fd5b610b01838383611508565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b3081610ef0565b610b3c8585858561146f565b5050505050565b7f7804d923f43a17d325d77e781528e0793b2edd9890ab45fc64efd7b4b427744c81565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b9181610ef0565b610b9961159c565b50565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b610c20610c196110ff565b83836115ff565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c5182610648565b610c5a81610ef0565b610c6483836112f1565b50505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610d2c6110ff565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610d715750610d6f8682610c8e565b155b15610db55780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610dac92919061332a565b60405180910390fd5b610dc2868686868661176f565b505050505050565b610dd26110ff565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e1b5750610e1983610e146110ff565b610c8e565b155b15610e6657610e286110ff565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610e5d92919061332a565b60405180910390fd5b610e7183838361187a565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ee95750610ee882611921565b5b9050919050565b610f0181610efc6110ff565b611a03565b50565b8060029081610f139190613588565b5050565b606060028054610f26906133ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610f52906133ab565b8015610f9f5780601f10610f7457610100808354040283529160200191610f9f565b820191906000526020600020905b815481529060010190602001808311610f8257829003601f168201915b50505050509050919050565b606060006001610fba84611a54565b01905060008167ffffffffffffffff811115610fd957610fd8612698565b5b6040519080825280601f01601f19166020018201604052801561100b5781602001600182028036833780820191505090505b509050600082602001820190505b60011561106e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110625761106161365a565b5b04945060008503611019575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110eb5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110e29190613689565b60405180910390fd5b6110f9600085858585611ba7565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111795760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111709190613689565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111eb5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016111e29190613689565b60405180910390fd5b6111f88585858585611ba7565b5050505050565b600061120b8383610b9c565b6112e65760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112836110ff565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506112eb565b600090505b92915050565b60006112fd8383610b9c565b156113d95760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506113766110ff565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506113de565b600090505b92915050565b6113ec611c59565b6000600460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6114306110ff565b60405161143d9190613689565b60405180910390a1565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114e15760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114d89190613689565b60405180910390fd5b6000806114ee8585611c99565b91509150611500600087848487611ba7565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361157a5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016115719190613689565b60405180910390fd5b611597836000848460405180602001604052806000815250611ba7565b505050565b6115a4611cc9565b6001600460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115e86110ff565b6040516115f59190613689565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116715760006040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016116689190613689565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117629190612662565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117e15760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117d89190613689565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036118535760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161184a9190613689565b60405180910390fd5b6000806118608585611c99565b915091506118718787848487611ba7565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118ec5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016118e39190613689565b60405180910390fd5b6000806118f98484611c99565b9150915061191a856000848460405180602001604052806000815250611ba7565b5050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806119ec57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806119fc57506119fb82611d0a565b5b9050919050565b611a0d8282610b9c565b611a505780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611a479291906136a4565b60405180910390fd5b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611ab2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611aa857611aa761365a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611aef576d04ee2d6d415b85acef81000000008381611ae557611ae461365a565b5b0492506020810190505b662386f26fc100008310611b1e57662386f26fc100008381611b1457611b1361365a565b5b0492506010810190505b6305f5e1008310611b47576305f5e1008381611b3d57611b3c61365a565b5b0492506008810190505b6127108310611b6c576127108381611b6257611b6161365a565b5b0492506004810190505b60648310611b8f5760648381611b8557611b8461365a565b5b0492506002810190505b600a8310611b9e576001810190505b80915050919050565b611bb385858585611d74565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611c52576000611bf16110ff565b90506001845103611c41576000611c1260008661145b90919063ffffffff16565b90506000611c2a60008661145b90919063ffffffff16565b9050611c3a838989858589611d86565b5050611c50565b611c4f818787878787611f3a565b5b505b5050505050565b611c61610a43565b611c97576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611cd1610a43565b15611d08576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611d80848484846120ee565b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611f32578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611de7959493929190613722565b6020604051808303816000875af1925050508015611e2357506040513d601f19601f82011682018060405250810190611e209190613791565b60015b611ea7573d8060008114611e53576040519150601f19603f3d011682016040523d82523d6000602084013e611e58565b606091505b506000815103611e9f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611e969190613689565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f3057846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611f279190613689565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156120e6578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611f9b9594939291906137be565b6020604051808303816000875af1925050508015611fd757506040513d601f19601f82011682018060405250810190611fd49190613791565b60015b61205b573d8060008114612007576040519150601f19603f3d011682016040523d82523d6000602084013e61200c565b606091505b50600081510361205357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161204a9190613689565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146120e457846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016120db9190613689565b60405180910390fd5b505b505050505050565b6120f6611cc9565b61210284848484612108565b50505050565b805182511461215257815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401612149929190613353565b60405180910390fd5b600061215c6110ff565b905060005b835181101561236b57600061217f828661145b90919063ffffffff16565b90506000612196838661145b90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146122c357600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561226b57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016122629493929190613826565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461235e578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612356919061389a565b925050819055505b5050806001019050612161565b50600183510361242a57600061238b60008561145b90919063ffffffff16565b905060006123a360008561145b90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161241b929190613353565b60405180910390a450506124a9565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516124a09291906138ce565b60405180910390a45b5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124ef826124c4565b9050919050565b6124ff816124e4565b811461250a57600080fd5b50565b60008135905061251c816124f6565b92915050565b6000819050919050565b61253581612522565b811461254057600080fd5b50565b6000813590506125528161252c565b92915050565b6000806040838503121561256f5761256e6124ba565b5b600061257d8582860161250d565b925050602061258e85828601612543565b9150509250929050565b6125a181612522565b82525050565b60006020820190506125bc6000830184612598565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6125f7816125c2565b811461260257600080fd5b50565b600081359050612614816125ee565b92915050565b6000602082840312156126305761262f6124ba565b5b600061263e84828501612605565b91505092915050565b60008115159050919050565b61265c81612647565b82525050565b60006020820190506126776000830184612653565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126d082612687565b810181811067ffffffffffffffff821117156126ef576126ee612698565b5b80604052505050565b60006127026124b0565b905061270e82826126c7565b919050565b600067ffffffffffffffff82111561272e5761272d612698565b5b61273782612687565b9050602081019050919050565b82818337600083830152505050565b600061276661276184612713565b6126f8565b90508281526020810184848401111561278257612781612682565b5b61278d848285612744565b509392505050565b600082601f8301126127aa576127a961267d565b5b81356127ba848260208601612753565b91505092915050565b6000602082840312156127d9576127d86124ba565b5b600082013567ffffffffffffffff8111156127f7576127f66124bf565b5b61280384828501612795565b91505092915050565b600060208284031215612822576128216124ba565b5b600061283084828501612543565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612873578082015181840152602081019050612858565b60008484015250505050565b600061288a82612839565b6128948185612844565b93506128a4818560208601612855565b6128ad81612687565b840191505092915050565b600060208201905081810360008301526128d2818461287f565b905092915050565b600067ffffffffffffffff8211156128f5576128f4612698565b5b602082029050602081019050919050565b600080fd5b600061291e612919846128da565b6126f8565b9050808382526020820190506020840283018581111561294157612940612906565b5b835b8181101561296a57806129568882612543565b845260208401935050602081019050612943565b5050509392505050565b600082601f8301126129895761298861267d565b5b813561299984826020860161290b565b91505092915050565b600067ffffffffffffffff8211156129bd576129bc612698565b5b6129c682612687565b9050602081019050919050565b60006129e66129e1846129a2565b6126f8565b905082815260208101848484011115612a0257612a01612682565b5b612a0d848285612744565b509392505050565b600082601f830112612a2a57612a2961267d565b5b8135612a3a8482602086016129d3565b91505092915050565b60008060008060808587031215612a5d57612a5c6124ba565b5b6000612a6b8782880161250d565b945050602085013567ffffffffffffffff811115612a8c57612a8b6124bf565b5b612a9887828801612974565b935050604085013567ffffffffffffffff811115612ab957612ab86124bf565b5b612ac587828801612974565b925050606085013567ffffffffffffffff811115612ae657612ae56124bf565b5b612af287828801612a15565b91505092959194509250565b6000819050919050565b612b1181612afe565b8114612b1c57600080fd5b50565b600081359050612b2e81612b08565b92915050565b600060208284031215612b4a57612b496124ba565b5b6000612b5884828501612b1f565b91505092915050565b612b6a81612afe565b82525050565b6000602082019050612b856000830184612b61565b92915050565b60008060408385031215612ba257612ba16124ba565b5b6000612bb08582860161250d565b925050602083013567ffffffffffffffff811115612bd157612bd06124bf565b5b612bdd85828601612974565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612c1c81612522565b82525050565b6000612c2e8383612c13565b60208301905092915050565b6000602082019050919050565b6000612c5282612be7565b612c5c8185612bf2565b9350612c6783612c03565b8060005b83811015612c98578151612c7f8882612c22565b9750612c8a83612c3a565b925050600181019050612c6b565b5085935050505092915050565b60006020820190508181036000830152612cbf8184612c47565b905092915050565b600080600080600060a08688031215612ce357612ce26124ba565b5b6000612cf18882890161250d565b9550506020612d028882890161250d565b945050604086013567ffffffffffffffff811115612d2357612d226124bf565b5b612d2f88828901612974565b935050606086013567ffffffffffffffff811115612d5057612d4f6124bf565b5b612d5c88828901612974565b925050608086013567ffffffffffffffff811115612d7d57612d7c6124bf565b5b612d8988828901612a15565b9150509295509295909350565b60008060408385031215612dad57612dac6124ba565b5b6000612dbb85828601612b1f565b9250506020612dcc8582860161250d565b9150509250929050565b600067ffffffffffffffff821115612df157612df0612698565b5b602082029050602081019050919050565b6000612e15612e1084612dd6565b6126f8565b90508083825260208201905060208402830185811115612e3857612e37612906565b5b835b81811015612e615780612e4d888261250d565b845260208401935050602081019050612e3a565b5050509392505050565b600082601f830112612e8057612e7f61267d565b5b8135612e90848260208601612e02565b91505092915050565b60008060408385031215612eb057612eaf6124ba565b5b600083013567ffffffffffffffff811115612ece57612ecd6124bf565b5b612eda85828601612e6b565b925050602083013567ffffffffffffffff811115612efb57612efa6124bf565b5b612f0785828601612974565b9150509250929050565b60008060008060808587031215612f2b57612f2a6124ba565b5b600085013567ffffffffffffffff811115612f4957612f486124bf565b5b612f5587828801612e6b565b945050602085013567ffffffffffffffff811115612f7657612f756124bf565b5b612f8287828801612974565b935050604085013567ffffffffffffffff811115612fa357612fa26124bf565b5b612faf87828801612974565b925050606085013567ffffffffffffffff811115612fd057612fcf6124bf565b5b612fdc87828801612a15565b91505092959194509250565b600080600060608486031215613001576130006124ba565b5b600061300f8682870161250d565b935050602084013567ffffffffffffffff8111156130305761302f6124bf565b5b61303c86828701612974565b925050604084013567ffffffffffffffff81111561305d5761305c6124bf565b5b61306986828701612974565b9150509250925092565b6000806000806080858703121561308d5761308c6124ba565b5b600061309b8782880161250d565b94505060206130ac87828801612543565b93505060406130bd87828801612543565b925050606085013567ffffffffffffffff8111156130de576130dd6124bf565b5b6130ea87828801612a15565b91505092959194509250565b6130ff81612647565b811461310a57600080fd5b50565b60008135905061311c816130f6565b92915050565b60008060408385031215613139576131386124ba565b5b60006131478582860161250d565b92505060206131588582860161310d565b9150509250929050565b60008060408385031215613179576131786124ba565b5b60006131878582860161250d565b92505060206131988582860161250d565b9150509250929050565b600080600080600060a086880312156131be576131bd6124ba565b5b60006131cc8882890161250d565b95505060206131dd8882890161250d565b94505060406131ee88828901612543565b93505060606131ff88828901612543565b925050608086013567ffffffffffffffff8111156132205761321f6124bf565b5b61322c88828901612a15565b9150509295509295909350565b600080600060608486031215613252576132516124ba565b5b60006132608682870161250d565b935050602061327186828701612543565b925050604061328286828701612543565b9150509250925092565b600081905092915050565b60006132a282612839565b6132ac818561328c565b93506132bc818560208601612855565b80840191505092915050565b60006132d48285613297565b91506132e08284613297565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b613324816124e4565b82525050565b600060408201905061333f600083018561331b565b61334c602083018461331b565b9392505050565b60006040820190506133686000830185612598565b6133756020830184612598565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806133c357607f821691505b6020821081036133d6576133d561337c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261343e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613401565b6134488683613401565b95508019841693508086168417925050509392505050565b6000819050919050565b600061348561348061347b84612522565b613460565b612522565b9050919050565b6000819050919050565b61349f8361346a565b6134b36134ab8261348c565b84845461340e565b825550505050565b600090565b6134c86134bb565b6134d3818484613496565b505050565b5b818110156134f7576134ec6000826134c0565b6001810190506134d9565b5050565b601f82111561353c5761350d816133dc565b613516846133f1565b81016020851015613525578190505b613539613531856133f1565b8301826134d8565b50505b505050565b600082821c905092915050565b600061355f60001984600802613541565b1980831691505092915050565b6000613578838361354e565b9150826002028217905092915050565b61359182612839565b67ffffffffffffffff8111156135aa576135a9612698565b5b6135b482546133ab565b6135bf8282856134fb565b600060209050601f8311600181146135f257600084156135e0578287015190505b6135ea858261356c565b865550613652565b601f198416613600866133dc565b60005b8281101561362857848901518255600182019150602085019450602081019050613603565b868310156136455784890151613641601f89168261354e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060208201905061369e600083018461331b565b92915050565b60006040820190506136b9600083018561331b565b6136c66020830184612b61565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006136f4826136cd565b6136fe81856136d8565b935061370e818560208601612855565b61371781612687565b840191505092915050565b600060a082019050613737600083018861331b565b613744602083018761331b565b6137516040830186612598565b61375e6060830185612598565b818103608083015261377081846136e9565b90509695505050505050565b60008151905061378b816125ee565b92915050565b6000602082840312156137a7576137a66124ba565b5b60006137b58482850161377c565b91505092915050565b600060a0820190506137d3600083018861331b565b6137e0602083018761331b565b81810360408301526137f28186612c47565b905081810360608301526138068185612c47565b9050818103608083015261381a81846136e9565b90509695505050505050565b600060808201905061383b600083018761331b565b6138486020830186612598565b6138556040830185612598565b6138626060830184612598565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138a582612522565b91506138b083612522565b92508282019050808211156138c8576138c761386b565b5b92915050565b600060408201905081810360008301526138e88185612c47565b905081810360208301526138fc8184612c47565b9050939250505056fea26469706673582212208f20f8c33d714f1774160ce14da404406f3187464dbdd62044f55d913f8e3e7364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x50B JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x485 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x7F345710 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7F345710 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x42D JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x3B9 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x2E240ADE GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x503A28BD EQ PUSH2 0x363 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x2E240ADE EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F1 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x275 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x2A43 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2F11 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2FE8 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0xB67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x3122 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A9 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x3162 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP3 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C PUSH2 0x5BD DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x5C6 DUP3 PUSH2 0xF04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5D7 DUP4 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5E3 DUP5 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F4 SWAP3 SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x635 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x641 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1079 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x687 JUMPI PUSH2 0x686 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH2 0x6E8 DUP6 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x527 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x6BB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x727 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH2 0x76A DUP7 DUP3 PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7B0 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BD DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CE DUP3 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x7E1 DUP4 DUP4 PUSH2 0x11FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D DUP3 DUP3 PUSH2 0x12F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x88C DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x13E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8E3 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x8FF PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x92E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x995 JUMPI PUSH2 0x96B PUSH2 0x953 DUP3 DUP8 PUSH2 0x1447 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x966 DUP4 DUP8 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x934 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x9CA DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA30 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9EC JUMPI PUSH2 0x9EB PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0x32EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x146F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x9CD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA62 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI POP PUSH2 0xAA9 DUP4 PUSH2 0xAA4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAF6 JUMPI PUSH2 0xAB8 PUSH2 0x10FF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAED SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB01 DUP4 DUP4 DUP4 PUSH2 0x1508 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xB30 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0xB3C DUP6 DUP6 DUP6 DUP6 PUSH2 0x146F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7804D923F43A17D325D77E781528E0793B2EDD9890AB45FC64EFD7B4B427744C DUP2 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB91 DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0xB99 PUSH2 0x159C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0xC19 PUSH2 0x10FF JUMP JUMPDEST DUP4 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC51 DUP3 PUSH2 0x648 JUMP JUMPDEST PUSH2 0xC5A DUP2 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0xC64 DUP4 DUP4 PUSH2 0x12F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2C PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI POP PUSH2 0xD6F DUP7 DUP3 PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xDB5 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x176F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDD2 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xE1B JUMPI POP PUSH2 0xE19 DUP4 PUSH2 0xE14 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE66 JUMPI PUSH2 0xE28 PUSH2 0x10FF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP3 SWAP2 SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE71 DUP4 DUP4 DUP4 PUSH2 0x187A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xEE9 JUMPI POP PUSH2 0xEE8 DUP3 PUSH2 0x1921 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF01 DUP2 PUSH2 0xEFC PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x3588 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xF26 SWAP1 PUSH2 0x33AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF52 SWAP1 PUSH2 0x33AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF9F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF74 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF9F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF82 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xFBA DUP5 PUSH2 0x1A54 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x100B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x106E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1062 JUMPI PUSH2 0x1061 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1019 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F9 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1179 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x12E6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1283 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FD DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1376 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1430 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14EE DUP6 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1500 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x157A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1597 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15A4 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x15E8 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1671 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1668 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1762 SWAP2 SWAP1 PUSH2 0x2662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D8 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1853 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1860 DUP6 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1871 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E3 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18F9 DUP5 DUP5 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x191A DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BA7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x19EC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x19FC JUMPI POP PUSH2 0x19FB DUP3 PUSH2 0x1D0A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP3 DUP3 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x1A50 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A47 SWAP3 SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1AB2 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1AA8 JUMPI PUSH2 0x1AA7 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1AEF JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1AE5 JUMPI PUSH2 0x1AE4 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1B1E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B47 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B6C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1B62 JUMPI PUSH2 0x1B61 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B8F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B85 JUMPI PUSH2 0x1B84 PUSH2 0x365A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1B9E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB3 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C52 JUMPI PUSH1 0x0 PUSH2 0x1BF1 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1C41 JUMPI PUSH1 0x0 PUSH2 0x1C12 PUSH1 0x0 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C2A PUSH1 0x0 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C3A DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1D86 JUMP JUMPDEST POP POP PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x1C4F DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1F3A JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C61 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x1C97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD1 PUSH2 0xA43 JUMP JUMPDEST ISZERO PUSH2 0x1D08 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D80 DUP5 DUP5 DUP5 DUP5 PUSH2 0x20EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1F32 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E23 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E20 SWAP2 SWAP1 PUSH2 0x3791 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1EA7 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E53 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1E9F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E96 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1F30 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F27 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x20E6 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1FD7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD4 SWAP2 SWAP1 PUSH2 0x3791 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x205B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2007 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x200C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2053 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204A SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x20E4 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20F6 PUSH2 0x1CC9 JUMP JUMPDEST PUSH2 0x2102 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2108 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x2152 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2149 SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x215C PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x236B JUMPI PUSH1 0x0 PUSH2 0x217F DUP3 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2196 DUP4 DUP7 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x226B JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2262 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x235E JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2356 SWAP2 SWAP1 PUSH2 0x389A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2161 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x242A JUMPI PUSH1 0x0 PUSH2 0x238B PUSH1 0x0 DUP6 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23A3 PUSH1 0x0 DUP6 PUSH2 0x145B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x241B SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x24A9 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x24A0 SWAP3 SWAP2 SWAP1 PUSH2 0x38CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EF DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x250A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x251C DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2535 DUP2 PUSH2 0x2522 JUMP JUMPDEST DUP2 EQ PUSH2 0x2540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2552 DUP2 PUSH2 0x252C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x256F JUMPI PUSH2 0x256E PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257D DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x258E DUP6 DUP3 DUP7 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25A1 DUP2 PUSH2 0x2522 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x25C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2614 DUP2 PUSH2 0x25EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH2 0x262F PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x263E DUP5 DUP3 DUP6 ADD PUSH2 0x2605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265C DUP2 PUSH2 0x2647 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2677 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26D0 DUP3 PUSH2 0x2687 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26EF JUMPI PUSH2 0x26EE PUSH2 0x2698 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2702 PUSH2 0x24B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x270E DUP3 DUP3 PUSH2 0x26C7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x272E JUMPI PUSH2 0x272D PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH2 0x2737 DUP3 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2766 PUSH2 0x2761 DUP5 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST PUSH2 0x278D DUP5 DUP3 DUP6 PUSH2 0x2744 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27AA JUMPI PUSH2 0x27A9 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2753 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27F6 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2803 DUP5 DUP3 DUP6 ADD PUSH2 0x2795 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2822 JUMPI PUSH2 0x2821 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2830 DUP5 DUP3 DUP6 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2873 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288A DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x2894 DUP2 DUP6 PUSH2 0x2844 JUMP JUMPDEST SWAP4 POP PUSH2 0x28A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x28AD DUP2 PUSH2 0x2687 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D2 DUP2 DUP5 PUSH2 0x287F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28F5 JUMPI PUSH2 0x28F4 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x291E PUSH2 0x2919 DUP5 PUSH2 0x28DA JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2941 JUMPI PUSH2 0x2940 PUSH2 0x2906 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x296A JUMPI DUP1 PUSH2 0x2956 DUP9 DUP3 PUSH2 0x2543 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2943 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2989 JUMPI PUSH2 0x2988 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2999 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29BD JUMPI PUSH2 0x29BC PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH2 0x29C6 DUP3 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E6 PUSH2 0x29E1 DUP5 PUSH2 0x29A2 JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A02 JUMPI PUSH2 0x2A01 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST PUSH2 0x2A0D DUP5 DUP3 DUP6 PUSH2 0x2744 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A2A JUMPI PUSH2 0x2A29 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A3A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x29D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A5D JUMPI PUSH2 0x2A5C PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A6B DUP8 DUP3 DUP9 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A8C JUMPI PUSH2 0x2A8B PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2A98 DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AB9 JUMPI PUSH2 0x2AB8 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2AC5 DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AE6 JUMPI PUSH2 0x2AE5 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2AF2 DUP8 DUP3 DUP9 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B11 DUP2 PUSH2 0x2AFE JUMP JUMPDEST DUP2 EQ PUSH2 0x2B1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2E DUP2 PUSH2 0x2B08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B4A JUMPI PUSH2 0x2B49 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B58 DUP5 DUP3 DUP6 ADD PUSH2 0x2B1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B6A DUP2 PUSH2 0x2AFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BA2 JUMPI PUSH2 0x2BA1 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BB0 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BD1 JUMPI PUSH2 0x2BD0 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2BDD DUP6 DUP3 DUP7 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2522 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2E DUP4 DUP4 PUSH2 0x2C13 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C52 DUP3 PUSH2 0x2BE7 JUMP JUMPDEST PUSH2 0x2C5C DUP2 DUP6 PUSH2 0x2BF2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C67 DUP4 PUSH2 0x2C03 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C98 JUMPI DUP2 MLOAD PUSH2 0x2C7F DUP9 DUP3 PUSH2 0x2C22 JUMP JUMPDEST SWAP8 POP PUSH2 0x2C8A DUP4 PUSH2 0x2C3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C6B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBF DUP2 DUP5 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2CE3 JUMPI PUSH2 0x2CE2 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CF1 DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2D02 DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2D2F DUP9 DUP3 DUP10 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D50 JUMPI PUSH2 0x2D4F PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2D5C DUP9 DUP3 DUP10 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D7D JUMPI PUSH2 0x2D7C PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2D89 DUP9 DUP3 DUP10 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DBB DUP6 DUP3 DUP7 ADD PUSH2 0x2B1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DCC DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DF1 JUMPI PUSH2 0x2DF0 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E15 PUSH2 0x2E10 DUP5 PUSH2 0x2DD6 JUMP JUMPDEST PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2E38 JUMPI PUSH2 0x2E37 PUSH2 0x2906 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E61 JUMPI DUP1 PUSH2 0x2E4D DUP9 DUP3 PUSH2 0x250D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E3A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E80 JUMPI PUSH2 0x2E7F PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E90 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2EAF PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ECE JUMPI PUSH2 0x2ECD PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2EDA DUP6 DUP3 DUP7 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EFB JUMPI PUSH2 0x2EFA PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2F07 DUP6 DUP3 DUP7 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F2B JUMPI PUSH2 0x2F2A PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F49 JUMPI PUSH2 0x2F48 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2F55 DUP8 DUP3 DUP9 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F76 JUMPI PUSH2 0x2F75 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2F82 DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FA3 JUMPI PUSH2 0x2FA2 PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2FAF DUP8 DUP3 DUP9 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FD0 JUMPI PUSH2 0x2FCF PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x2FDC DUP8 DUP3 DUP9 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3001 JUMPI PUSH2 0x3000 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300F DUP7 DUP3 DUP8 ADD PUSH2 0x250D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3030 JUMPI PUSH2 0x302F PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x303C DUP7 DUP3 DUP8 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x305D JUMPI PUSH2 0x305C PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x3069 DUP7 DUP3 DUP8 ADD PUSH2 0x2974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x308D JUMPI PUSH2 0x308C PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309B DUP8 DUP3 DUP9 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x30AC DUP8 DUP3 DUP9 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x30BD DUP8 DUP3 DUP9 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30DE JUMPI PUSH2 0x30DD PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x30EA DUP8 DUP3 DUP9 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x30FF DUP2 PUSH2 0x2647 JUMP JUMPDEST DUP2 EQ PUSH2 0x310A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x311C DUP2 PUSH2 0x30F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3139 JUMPI PUSH2 0x3138 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3147 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3158 DUP6 DUP3 DUP7 ADD PUSH2 0x310D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3179 JUMPI PUSH2 0x3178 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3187 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3198 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x31BE JUMPI PUSH2 0x31BD PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31CC DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x31DD DUP9 DUP3 DUP10 ADD PUSH2 0x250D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x31EE DUP9 DUP3 DUP10 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x31FF DUP9 DUP3 DUP10 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3220 JUMPI PUSH2 0x321F PUSH2 0x24BF JUMP JUMPDEST JUMPDEST PUSH2 0x322C DUP9 DUP3 DUP10 ADD PUSH2 0x2A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH2 0x3251 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3260 DUP7 DUP3 DUP8 ADD PUSH2 0x250D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3271 DUP7 DUP3 DUP8 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3282 DUP7 DUP3 DUP8 ADD PUSH2 0x2543 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A2 DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x32AC DUP2 DUP6 PUSH2 0x328C JUMP JUMPDEST SWAP4 POP PUSH2 0x32BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2855 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D4 DUP3 DUP6 PUSH2 0x3297 JUMP JUMPDEST SWAP2 POP PUSH2 0x32E0 DUP3 DUP5 PUSH2 0x3297 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3324 DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x333F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x334C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x331B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3368 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3375 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2598 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x33C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x33D6 JUMPI PUSH2 0x33D5 PUSH2 0x337C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x343E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x3448 DUP7 DUP4 PUSH2 0x3401 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3485 PUSH2 0x3480 PUSH2 0x347B DUP5 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x3460 JUMP JUMPDEST PUSH2 0x2522 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349F DUP4 PUSH2 0x346A JUMP JUMPDEST PUSH2 0x34B3 PUSH2 0x34AB DUP3 PUSH2 0x348C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x340E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x34C8 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x34D3 DUP2 DUP5 DUP5 PUSH2 0x3496 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34F7 JUMPI PUSH2 0x34EC PUSH1 0x0 DUP3 PUSH2 0x34C0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x353C JUMPI PUSH2 0x350D DUP2 PUSH2 0x33DC JUMP JUMPDEST PUSH2 0x3516 DUP5 PUSH2 0x33F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3525 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3539 PUSH2 0x3531 DUP6 PUSH2 0x33F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x34D8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3541 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 DUP4 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3591 DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35AA JUMPI PUSH2 0x35A9 PUSH2 0x2698 JUMP JUMPDEST JUMPDEST PUSH2 0x35B4 DUP3 SLOAD PUSH2 0x33AB JUMP JUMPDEST PUSH2 0x35BF DUP3 DUP3 DUP6 PUSH2 0x34FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35F2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x35E0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35EA DUP6 DUP3 PUSH2 0x356C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3600 DUP7 PUSH2 0x33DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3628 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3603 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3645 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3641 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x354E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x369E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x331B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36B9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x36C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F4 DUP3 PUSH2 0x36CD JUMP JUMPDEST PUSH2 0x36FE DUP2 DUP6 PUSH2 0x36D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x370E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x3717 DUP2 PUSH2 0x2687 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3737 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x3744 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x3751 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x375E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2598 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3770 DUP2 DUP5 PUSH2 0x36E9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x378B DUP2 PUSH2 0x25EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A7 JUMPI PUSH2 0x37A6 PUSH2 0x24BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B5 DUP5 DUP3 DUP6 ADD PUSH2 0x377C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x37D3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x37E0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x331B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x37F2 DUP2 DUP7 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3806 DUP2 DUP6 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x381A DUP2 DUP5 PUSH2 0x36E9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x383B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x331B JUMP JUMPDEST PUSH2 0x3848 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3855 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3862 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2598 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38A5 DUP3 PUSH2 0x2522 JUMP JUMPDEST SWAP2 POP PUSH2 0x38B0 DUP4 PUSH2 0x2522 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x38C8 JUMPI PUSH2 0x38C7 PUSH2 0x386B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38E8 DUP2 DUP6 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x38FC DUP2 DUP5 PUSH2 0x2C47 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 KECCAK256 0xF8 0xC3 RETURNDATASIZE PUSH18 0x4F1774160CE14DA404406F3187464DBDD620 PREVRANDAO CREATE2 TSTORE SWAP2 EXTCODEHASH DUP15 RETURNDATACOPY PUSH20 0x64736F6C634300081C0033000000000000000000 ","sourceMap":"520:2298:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2655:161:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1468:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1964:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1053:310:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4012:429:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1737:69:23;;;:::i;:::-;;2534:552:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2140:261:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1810:150:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;605:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:65;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:144:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;745:62:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;679:62:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:157:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2245:132:3;2322:7;2348:9;:13;2358:2;2348:13;;;;;;;;;;;:22;2362:7;2348:22;;;;;;;;;;;;;;;;2341:29;;2245:132;;;;:::o;2655:161:23:-;2756:4;2775:36;2799:11;2775:23;:36::i;:::-;2768:43;;2655:161;;;:::o;1367:97::-;647:28;2464:16:0;2475:4;2464:10;:16::i;:::-;1444:15:23::1;1452:6;1444:7;:15::i;:::-;1367:97:::0;;:::o;1468:196::-;1528:13;1549:21;1573:20;1585:7;1573:11;:20::i;:::-;1549:44;;1630:7;1639:18;:7;:16;:18::i;:::-;1613:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1599:60;;;1468:196;;;:::o;1964:172::-;783:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2097:34:23::1;2108:2;2112:3;2117:7;2126:4;2097:10;:34::i;:::-;1964:172:::0;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;1053:310:23:-;1144:16;1168:30;1215:3;:10;1201:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1168:58;;1237:9;1232:101;1256:3;:10;1252:1;:14;1232:101;;;1300:26;1310:7;1319:3;1323:1;1319:6;;;;;;;;:::i;:::-;;;;;;;;1300:9;:26::i;:::-;1281:13;1295:1;1281:16;;;;;;;;:::i;:::-;;;;;;;:45;;;;;1268:3;;;;;1232:101;;;;1345:13;1338:20;;;1053:310;;;;:::o;4012:429:3:-;4206:14;4223:12;:10;:12::i;:::-;4206:29;;4257:6;4249:14;;:4;:14;;;;:49;;;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4350:6;4358:4;4321:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1737:69:23:-;717:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1791:10:23::1;:8;:10::i;:::-;1737:69:::0;:::o;2534:552:3:-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:3;:10;2780:8;:15;2742:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2686:121;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;2970:68;2980:30;3008:1;2980:8;:27;;:30;;;;:::i;:::-;3012:25;3035:1;3012:3;:22;;:25;;;;:::i;:::-;2970:9;:68::i;:::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2932:3;;;;;2891:158;;;;3066:13;3059:20;;;2534:552;;;;:::o;2140:261:23:-;783:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2297:9:23::1;2292:105;2316:8;:15;2312:1;:19;2292:105;;;2346:44;2352:8;2361:1;2352:11;;;;;;;;:::i;:::-;;;;;;;;2365:3;2369:1;2365:6;;;;;;;;:::i;:::-;;;;;;;;2373:7;2381:1;2373:10;;;;;;;;:::i;:::-;;;;;;;;2385:4;2346:5;:44::i;:::-;2333:3;;;;;2292:105;;;;2140:261:::0;;;;;:::o;1850:84:14:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;681:313:6:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;1810:150:23:-;783:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1923:32:23::1;1929:7;1938:2;1942:6;1950:4;1923:5;:32::i;:::-;1810:150:::0;;;;;:::o;605:70::-;647:28;605:70;:::o;1668:65::-;717:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1720:8:23::1;:6;:8::i;:::-;1668:65:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;3154:144:3:-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3154:144;;:::o;745:62:23:-;783:24;745:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;679:62:23:-;717:24;679:62;:::o;3365:157:3:-;3455:4;3478:18;:27;3497:7;3478:27;;;;;;;;;;;;;;;:37;3506:8;3478:37;;;;;;;;;;;;;;;;;;;;;;;;;3471:44;;3365:157;;;;:::o;3589:351::-;3712:14;3729:12;:10;:12::i;:::-;3712:29;;3763:6;3755:14;;:4;:14;;;;:49;;;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3856:6;3864:4;3827:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3751:129;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;:::-;3702:238;3589:351;;;;;:::o;394:281:6:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;2565:202:0:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;10290:86:3:-;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;2082:103::-;2142:13;2174:4;2167:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:103;;;:::o;637:632:17:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;11531:282:3:-;11666:1;11652:16;;:2;:16;;;11648:88;;11722:1;11691:34;;;;;;;;;;;:::i;:::-;;;;;;;;11648:88;11745:61;11780:1;11784:2;11788:3;11793:6;11801:4;11745:26;:61::i;:::-;11531:282;;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;9023:445:3:-;9230:1;9216:16;;:2;:16;;;9212:88;;9286:1;9255:34;;;;;;;;;;;:::i;:::-;;;;;;;;9212:88;9329:1;9313:18;;:4;:18;;;9309:88;;9383:1;9354:32;;;;;;;;;;;:::i;:::-;;;;;;;;9309:88;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2710:117:14:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;16128:197:10:-;16214:11;16302:4;16297:3;16293:14;16286:4;16281:3;16277:14;16273:35;16267:42;16260:49;;16128:197;;;;:::o;16926:::-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;10754:346:3:-;10864:1;10850:16;;:2;:16;;;10846:88;;10920:1;10889:34;;;;;;;;;;;:::i;:::-;;;;;;;;10846:88;10944:20;10966:23;10993:29;11012:2;11016:5;10993:18;:29::i;:::-;10943:79;;;;11032:61;11067:1;11071:2;11075:3;11080:6;11088:4;11032:26;:61::i;:::-;10836:264;;10754:346;;;;:::o;12792:265::-;12912:1;12896:18;;:4;:18;;;12892:88;;12966:1;12937:32;;;;;;;;;;;:::i;:::-;;;;;;;;12892:88;12989:61;13016:4;13030:1;13034:3;13039:6;12989:61;;;;;;;;;;;;:26;:61::i;:::-;12792:265;;;:::o;2463:115:14:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;13276:315:3:-;13403:1;13383:22;;:8;:22;;;13379:94;;13459:1;13428:34;;;;;;;;;;;:::i;:::-;;;;;;;;13379:94;13520:8;13482:18;:25;13501:5;13482:25;;;;;;;;;;;;;;;:35;13508:8;13482:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13565:8;13543:41;;13558:5;13543:41;;;13575:8;13543:41;;;;;;:::i;:::-;;;;;;;;13276:315;;;:::o;8159:463::-;8295:1;8281:16;;:2;:16;;;8277:88;;8351:1;8320:34;;;;;;;;;;;:::i;:::-;;;;;;;;8277:88;8394:1;8378:18;;:4;:18;;;8374:88;;8448:1;8419:32;;;;;;;;;;;:::i;:::-;;;;;;;;8374:88;8472:20;8494:23;8521:29;8540:2;8544:5;8521:18;:29::i;:::-;8471:79;;;;8560:55;8587:4;8593:2;8597:3;8602:6;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;12107:329::-;12202:1;12186:18;;:4;:18;;;12182:88;;12256:1;12227:32;;;;;;;;;;;:::i;:::-;;;;;;;;12182:88;12280:20;12302:23;12329:29;12348:2;12352:5;12329:18;:29::i;:::-;12279:79;;;;12368:61;12395:4;12409:1;12413:3;12418:6;12368:61;;;;;;;;;;;;:26;:61::i;:::-;12172:264;;12107:329;;;:::o;1378:305::-;1480:4;1530:26;1515:41;;;:11;:41;;;;:109;;;;1587:37;1572:52;;;:11;:52;;;;1515:109;:161;;;;1640:36;1664:11;1640:23;:36::i;:::-;1515:161;1496:180;;1378:305;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;25316:916:20:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;7002:700:3:-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;7261:1;7247:16;;:2;:16;;;7243:453;;7279:16;7298:12;:10;:12::i;:::-;7279:31;;7342:1;7328:3;:10;:15;7324:362;;7363:10;7376:25;7399:1;7376:3;:22;;:25;;;;:::i;:::-;7363:38;;7419:13;7435:28;7461:1;7435:6;:25;;:28;;;;:::i;:::-;7419:44;;7481:72;7517:8;7527:4;7533:2;7537;7541:5;7548:4;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;:::-;7324:362;7265:431;7243:453;7002:700;;;;;:::o;2202:126:14:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;13707:822:3:-;13815:23;13840;13974:4;13968:11;13958:21;;14044:1;14036:6;14029:17;14182:8;14175:4;14167:6;14163:17;14156:35;14304:4;14296:6;14292:17;14282:27;;14337:1;14329:6;14322:17;14378:8;14371:4;14363:6;14359:17;14352:35;14507:4;14499:6;14495:17;14489:4;14482:31;13707:822;;;;;:::o;2002:128:14:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;763:146:18:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;2470:181:23:-;2610:36;2624:4;2630:2;2634:3;2639:6;2610:13;:36::i;:::-;2470:181;;;;:::o;998:959:9:-;1214:1;1197:2;:14;;;:18;1193:758;;;1252:2;1235:38;;;1274:8;1284:4;1290:2;1294:5;1301:4;1235:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:1;1605:6;:13;:18;1601:326;;1748:2;1710:41;;;;;;;;;;;:::i;:::-;;;;;;;;1601:326;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;1367:43;;;1355:55;;;:8;:55;;;;1351:189;;1518:2;1480:41;;;;;;;;;;;:::i;:::-;;;;;;;;1351:189;1307:247;1193:758;998:959;;;;;;:::o;2505:1026::-;2746:1;2729:2;:14;;;:18;2725:800;;;2784:2;2767:43;;;2811:8;2821:4;2827:3;2832:6;2840:4;2767:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1;3179:6;:13;:18;3175:326;;3322:2;3284:41;;;;;;;;;;;:::i;:::-;;;;;;;;3175:326;3453:6;3447:13;3438:6;3434:2;3430:15;3423:38;2763:752;2936:48;;;2924:60;;;:8;:60;;;;2920:194;;3092:2;3054:41;;;;;;;;;;;:::i;:::-;;;;;;;;2920:194;2846:282;2725:800;2505:1026;;;;;;:::o;1129:221:7:-;1474:19:14;:17;:19::i;:::-;1307:36:7::1;1321:4;1327:2;1331:3;1336:6;1307:13;:36::i;:::-;1129:221:::0;;;;:::o;5142:1281:3:-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:3;:10;5351:6;:13;5313:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5259:117;5386:16;5405:12;:10;:12::i;:::-;5386:31;;5433:9;5428:691;5452:3;:10;5448:1;:14;5428:691;;;5483:10;5496:25;5519:1;5496:3;:22;;:25;;;;:::i;:::-;5483:38;;5535:13;5551:28;5577:1;5551:6;:25;;:28;;;;:::i;:::-;5535:44;;5614:1;5598:18;;:4;:18;;;5594:420;;5636:19;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:19;5672:4;5658:19;;;;;;;;;;;;;;;;5636:41;;5713:5;5699:11;:19;5695:129;;;5776:4;5782:11;5795:5;5802:2;5749:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5695:129;5976:5;5962:11;:19;5940:9;:13;5950:2;5940:13;;;;;;;;;;;:19;5954:4;5940:19;;;;;;;;;;;;;;;:41;;;;5618:396;5594:420;6046:1;6032:16;;:2;:16;;;6028:81;;6089:5;6068:9;:13;6078:2;6068:13;;;;;;;;;;;:17;6082:2;6068:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6028:81;5469:650;;5464:3;;;;;5428:691;;;;6147:1;6133:3;:10;:15;6129:288;;6164:10;6177:25;6200:1;6177:3;:22;;:25;;;;:::i;:::-;6164:38;;6216:13;6232:28;6258:1;6232:6;:25;;:28;;;;:::i;:::-;6216:44;;6310:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;;:::i;:::-;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;6129:288;5249:1174;5142:1281;;;;:::o;7:75:24:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:148::-;4587:6;4582:3;4577;4564:30;4628:1;4619:6;4614:3;4610:16;4603:27;4489:148;;;:::o;4643:425::-;4721:5;4746:66;4762:49;4804:6;4762:49;:::i;:::-;4746:66;:::i;:::-;4737:75;;4835:6;4828:5;4821:21;4873:4;4866:5;4862:16;4911:3;4902:6;4897:3;4893:16;4890:25;4887:112;;;4918:79;;:::i;:::-;4887:112;5008:54;5055:6;5050:3;5045;5008:54;:::i;:::-;4727:341;4643:425;;;;;:::o;5088:340::-;5144:5;5193:3;5186:4;5178:6;5174:17;5170:27;5160:122;;5201:79;;:::i;:::-;5160:122;5318:6;5305:20;5343:79;5418:3;5410:6;5403:4;5395:6;5391:17;5343:79;:::i;:::-;5334:88;;5150:278;5088:340;;;;:::o;5434:509::-;5503:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5706:1;5695:9;5691:17;5678:31;5736:18;5728:6;5725:30;5722:117;;;5758:79;;:::i;:::-;5722:117;5863:63;5918:7;5909:6;5898:9;5894:22;5863:63;:::i;:::-;5853:73;;5649:287;5434:509;;;;:::o;5949:329::-;6008:6;6057:2;6045:9;6036:7;6032:23;6028:32;6025:119;;;6063:79;;:::i;:::-;6025:119;6183:1;6208:53;6253:7;6244:6;6233:9;6229:22;6208:53;:::i;:::-;6198:63;;6154:117;5949:329;;;;:::o;6284:99::-;6336:6;6370:5;6364:12;6354:22;;6284:99;;;:::o;6389:169::-;6473:11;6507:6;6502:3;6495:19;6547:4;6542:3;6538:14;6523:29;;6389:169;;;;:::o;6564:248::-;6646:1;6656:113;6670:6;6667:1;6664:13;6656:113;;;6755:1;6750:3;6746:11;6740:18;6736:1;6731:3;6727:11;6720:39;6692:2;6689:1;6685:10;6680:15;;6656:113;;;6803:1;6794:6;6789:3;6785:16;6778:27;6626:186;6564:248;;;:::o;6818:377::-;6906:3;6934:39;6967:5;6934:39;:::i;:::-;6989:71;7053:6;7048:3;6989:71;:::i;:::-;6982:78;;7069:65;7127:6;7122:3;7115:4;7108:5;7104:16;7069:65;:::i;:::-;7159:29;7181:6;7159:29;:::i;:::-;7154:3;7150:39;7143:46;;6910:285;6818:377;;;;:::o;7201:313::-;7314:4;7352:2;7341:9;7337:18;7329:26;;7401:9;7395:4;7391:20;7387:1;7376:9;7372:17;7365:47;7429:78;7502:4;7493:6;7429:78;:::i;:::-;7421:86;;7201:313;;;;:::o;7520:311::-;7597:4;7687:18;7679:6;7676:30;7673:56;;;7709:18;;:::i;:::-;7673:56;7759:4;7751:6;7747:17;7739:25;;7819:4;7813;7809:15;7801:23;;7520:311;;;:::o;7837:117::-;7946:1;7943;7936:12;7977:710;8073:5;8098:81;8114:64;8171:6;8114:64;:::i;:::-;8098:81;:::i;:::-;8089:90;;8199:5;8228:6;8221:5;8214:21;8262:4;8255:5;8251:16;8244:23;;8315:4;8307:6;8303:17;8295:6;8291:30;8344:3;8336:6;8333:15;8330:122;;;8363:79;;:::i;:::-;8330:122;8478:6;8461:220;8495:6;8490:3;8487:15;8461:220;;;8570:3;8599:37;8632:3;8620:10;8599:37;:::i;:::-;8594:3;8587:50;8666:4;8661:3;8657:14;8650:21;;8537:144;8521:4;8516:3;8512:14;8505:21;;8461:220;;;8465:21;8079:608;;7977:710;;;;;:::o;8710:370::-;8781:5;8830:3;8823:4;8815:6;8811:17;8807:27;8797:122;;8838:79;;:::i;:::-;8797:122;8955:6;8942:20;8980:94;9070:3;9062:6;9055:4;9047:6;9043:17;8980:94;:::i;:::-;8971:103;;8787:293;8710:370;;;;:::o;9086:307::-;9147:4;9237:18;9229:6;9226:30;9223:56;;;9259:18;;:::i;:::-;9223:56;9297:29;9319:6;9297:29;:::i;:::-;9289:37;;9381:4;9375;9371:15;9363:23;;9086:307;;;:::o;9399:423::-;9476:5;9501:65;9517:48;9558:6;9517:48;:::i;:::-;9501:65;:::i;:::-;9492:74;;9589:6;9582:5;9575:21;9627:4;9620:5;9616:16;9665:3;9656:6;9651:3;9647:16;9644:25;9641:112;;;9672:79;;:::i;:::-;9641:112;9762:54;9809:6;9804:3;9799;9762:54;:::i;:::-;9482:340;9399:423;;;;;:::o;9841:338::-;9896:5;9945:3;9938:4;9930:6;9926:17;9922:27;9912:122;;9953:79;;:::i;:::-;9912:122;10070:6;10057:20;10095:78;10169:3;10161:6;10154:4;10146:6;10142:17;10095:78;:::i;:::-;10086:87;;9902:277;9841:338;;;;:::o;10185:1363::-;10330:6;10338;10346;10354;10403:3;10391:9;10382:7;10378:23;10374:33;10371:120;;;10410:79;;:::i;:::-;10371:120;10530:1;10555:53;10600:7;10591:6;10580:9;10576:22;10555:53;:::i;:::-;10545:63;;10501:117;10685:2;10674:9;10670:18;10657:32;10716:18;10708:6;10705:30;10702:117;;;10738:79;;:::i;:::-;10702:117;10843:78;10913:7;10904:6;10893:9;10889:22;10843:78;:::i;:::-;10833:88;;10628:303;10998:2;10987:9;10983:18;10970:32;11029:18;11021:6;11018:30;11015:117;;;11051:79;;:::i;:::-;11015:117;11156:78;11226:7;11217:6;11206:9;11202:22;11156:78;:::i;:::-;11146:88;;10941:303;11311:2;11300:9;11296:18;11283:32;11342:18;11334:6;11331:30;11328:117;;;11364:79;;:::i;:::-;11328:117;11469:62;11523:7;11514:6;11503:9;11499:22;11469:62;:::i;:::-;11459:72;;11254:287;10185:1363;;;;;;;:::o;11554:77::-;11591:7;11620:5;11609:16;;11554:77;;;:::o;11637:122::-;11710:24;11728:5;11710:24;:::i;:::-;11703:5;11700:35;11690:63;;11749:1;11746;11739:12;11690:63;11637:122;:::o;11765:139::-;11811:5;11849:6;11836:20;11827:29;;11865:33;11892:5;11865:33;:::i;:::-;11765:139;;;;:::o;11910:329::-;11969:6;12018:2;12006:9;11997:7;11993:23;11989:32;11986:119;;;12024:79;;:::i;:::-;11986:119;12144:1;12169:53;12214:7;12205:6;12194:9;12190:22;12169:53;:::i;:::-;12159:63;;12115:117;11910:329;;;;:::o;12245:118::-;12332:24;12350:5;12332:24;:::i;:::-;12327:3;12320:37;12245:118;;:::o;12369:222::-;12462:4;12500:2;12489:9;12485:18;12477:26;;12513:71;12581:1;12570:9;12566:17;12557:6;12513:71;:::i;:::-;12369:222;;;;:::o;12597:684::-;12690:6;12698;12747:2;12735:9;12726:7;12722:23;12718:32;12715:119;;;12753:79;;:::i;:::-;12715:119;12873:1;12898:53;12943:7;12934:6;12923:9;12919:22;12898:53;:::i;:::-;12888:63;;12844:117;13028:2;13017:9;13013:18;13000:32;13059:18;13051:6;13048:30;13045:117;;;13081:79;;:::i;:::-;13045:117;13186:78;13256:7;13247:6;13236:9;13232:22;13186:78;:::i;:::-;13176:88;;12971:303;12597:684;;;;;:::o;13287:114::-;13354:6;13388:5;13382:12;13372:22;;13287:114;;;:::o;13407:184::-;13506:11;13540:6;13535:3;13528:19;13580:4;13575:3;13571:14;13556:29;;13407:184;;;;:::o;13597:132::-;13664:4;13687:3;13679:11;;13717:4;13712:3;13708:14;13700:22;;13597:132;;;:::o;13735:108::-;13812:24;13830:5;13812:24;:::i;:::-;13807:3;13800:37;13735:108;;:::o;13849:179::-;13918:10;13939:46;13981:3;13973:6;13939:46;:::i;:::-;14017:4;14012:3;14008:14;13994:28;;13849:179;;;;:::o;14034:113::-;14104:4;14136;14131:3;14127:14;14119:22;;14034:113;;;:::o;14183:732::-;14302:3;14331:54;14379:5;14331:54;:::i;:::-;14401:86;14480:6;14475:3;14401:86;:::i;:::-;14394:93;;14511:56;14561:5;14511:56;:::i;:::-;14590:7;14621:1;14606:284;14631:6;14628:1;14625:13;14606:284;;;14707:6;14701:13;14734:63;14793:3;14778:13;14734:63;:::i;:::-;14727:70;;14820:60;14873:6;14820:60;:::i;:::-;14810:70;;14666:224;14653:1;14650;14646:9;14641:14;;14606:284;;;14610:14;14906:3;14899:10;;14307:608;;;14183:732;;;;:::o;14921:373::-;15064:4;15102:2;15091:9;15087:18;15079:26;;15151:9;15145:4;15141:20;15137:1;15126:9;15122:17;15115:47;15179:108;15282:4;15273:6;15179:108;:::i;:::-;15171:116;;14921:373;;;;:::o;15300:1509::-;15454:6;15462;15470;15478;15486;15535:3;15523:9;15514:7;15510:23;15506:33;15503:120;;;15542:79;;:::i;:::-;15503:120;15662:1;15687:53;15732:7;15723:6;15712:9;15708:22;15687:53;:::i;:::-;15677:63;;15633:117;15789:2;15815:53;15860:7;15851:6;15840:9;15836:22;15815:53;:::i;:::-;15805:63;;15760:118;15945:2;15934:9;15930:18;15917:32;15976:18;15968:6;15965:30;15962:117;;;15998:79;;:::i;:::-;15962:117;16103:78;16173:7;16164:6;16153:9;16149:22;16103:78;:::i;:::-;16093:88;;15888:303;16258:2;16247:9;16243:18;16230:32;16289:18;16281:6;16278:30;16275:117;;;16311:79;;:::i;:::-;16275:117;16416:78;16486:7;16477:6;16466:9;16462:22;16416:78;:::i;:::-;16406:88;;16201:303;16571:3;16560:9;16556:19;16543:33;16603:18;16595:6;16592:30;16589:117;;;16625:79;;:::i;:::-;16589:117;16730:62;16784:7;16775:6;16764:9;16760:22;16730:62;:::i;:::-;16720:72;;16514:288;15300:1509;;;;;;;;:::o;16815:474::-;16883:6;16891;16940:2;16928:9;16919:7;16915:23;16911:32;16908:119;;;16946:79;;:::i;:::-;16908:119;17066:1;17091:53;17136:7;17127:6;17116:9;17112:22;17091:53;:::i;:::-;17081:63;;17037:117;17193:2;17219:53;17264:7;17255:6;17244:9;17240:22;17219:53;:::i;:::-;17209:63;;17164:118;16815:474;;;;;:::o;17295:311::-;17372:4;17462:18;17454:6;17451:30;17448:56;;;17484:18;;:::i;:::-;17448:56;17534:4;17526:6;17522:17;17514:25;;17594:4;17588;17584:15;17576:23;;17295:311;;;:::o;17629:710::-;17725:5;17750:81;17766:64;17823:6;17766:64;:::i;:::-;17750:81;:::i;:::-;17741:90;;17851:5;17880:6;17873:5;17866:21;17914:4;17907:5;17903:16;17896:23;;17967:4;17959:6;17955:17;17947:6;17943:30;17996:3;17988:6;17985:15;17982:122;;;18015:79;;:::i;:::-;17982:122;18130:6;18113:220;18147:6;18142:3;18139:15;18113:220;;;18222:3;18251:37;18284:3;18272:10;18251:37;:::i;:::-;18246:3;18239:50;18318:4;18313:3;18309:14;18302:21;;18189:144;18173:4;18168:3;18164:14;18157:21;;18113:220;;;18117:21;17731:608;;17629:710;;;;;:::o;18362:370::-;18433:5;18482:3;18475:4;18467:6;18463:17;18459:27;18449:122;;18490:79;;:::i;:::-;18449:122;18607:6;18594:20;18632:94;18722:3;18714:6;18707:4;18699:6;18695:17;18632:94;:::i;:::-;18623:103;;18439:293;18362:370;;;;:::o;18738:894::-;18856:6;18864;18913:2;18901:9;18892:7;18888:23;18884:32;18881:119;;;18919:79;;:::i;:::-;18881:119;19067:1;19056:9;19052:17;19039:31;19097:18;19089:6;19086:30;19083:117;;;19119:79;;:::i;:::-;19083:117;19224:78;19294:7;19285:6;19274:9;19270:22;19224:78;:::i;:::-;19214:88;;19010:302;19379:2;19368:9;19364:18;19351:32;19410:18;19402:6;19399:30;19396:117;;;19432:79;;:::i;:::-;19396:117;19537:78;19607:7;19598:6;19587:9;19583:22;19537:78;:::i;:::-;19527:88;;19322:303;18738:894;;;;;:::o;19638:1573::-;19808:6;19816;19824;19832;19881:3;19869:9;19860:7;19856:23;19852:33;19849:120;;;19888:79;;:::i;:::-;19849:120;20036:1;20025:9;20021:17;20008:31;20066:18;20058:6;20055:30;20052:117;;;20088:79;;:::i;:::-;20052:117;20193:78;20263:7;20254:6;20243:9;20239:22;20193:78;:::i;:::-;20183:88;;19979:302;20348:2;20337:9;20333:18;20320:32;20379:18;20371:6;20368:30;20365:117;;;20401:79;;:::i;:::-;20365:117;20506:78;20576:7;20567:6;20556:9;20552:22;20506:78;:::i;:::-;20496:88;;20291:303;20661:2;20650:9;20646:18;20633:32;20692:18;20684:6;20681:30;20678:117;;;20714:79;;:::i;:::-;20678:117;20819:78;20889:7;20880:6;20869:9;20865:22;20819:78;:::i;:::-;20809:88;;20604:303;20974:2;20963:9;20959:18;20946:32;21005:18;20997:6;20994:30;20991:117;;;21027:79;;:::i;:::-;20991:117;21132:62;21186:7;21177:6;21166:9;21162:22;21132:62;:::i;:::-;21122:72;;20917:287;19638:1573;;;;;;;:::o;21217:1039::-;21344:6;21352;21360;21409:2;21397:9;21388:7;21384:23;21380:32;21377:119;;;21415:79;;:::i;:::-;21377:119;21535:1;21560:53;21605:7;21596:6;21585:9;21581:22;21560:53;:::i;:::-;21550:63;;21506:117;21690:2;21679:9;21675:18;21662:32;21721:18;21713:6;21710:30;21707:117;;;21743:79;;:::i;:::-;21707:117;21848:78;21918:7;21909:6;21898:9;21894:22;21848:78;:::i;:::-;21838:88;;21633:303;22003:2;21992:9;21988:18;21975:32;22034:18;22026:6;22023:30;22020:117;;;22056:79;;:::i;:::-;22020:117;22161:78;22231:7;22222:6;22211:9;22207:22;22161:78;:::i;:::-;22151:88;;21946:303;21217:1039;;;;;:::o;22262:943::-;22357:6;22365;22373;22381;22430:3;22418:9;22409:7;22405:23;22401:33;22398:120;;;22437:79;;:::i;:::-;22398:120;22557:1;22582:53;22627:7;22618:6;22607:9;22603:22;22582:53;:::i;:::-;22572:63;;22528:117;22684:2;22710:53;22755:7;22746:6;22735:9;22731:22;22710:53;:::i;:::-;22700:63;;22655:118;22812:2;22838:53;22883:7;22874:6;22863:9;22859:22;22838:53;:::i;:::-;22828:63;;22783:118;22968:2;22957:9;22953:18;22940:32;22999:18;22991:6;22988:30;22985:117;;;23021:79;;:::i;:::-;22985:117;23126:62;23180:7;23171:6;23160:9;23156:22;23126:62;:::i;:::-;23116:72;;22911:287;22262:943;;;;;;;:::o;23211:116::-;23281:21;23296:5;23281:21;:::i;:::-;23274:5;23271:32;23261:60;;23317:1;23314;23307:12;23261:60;23211:116;:::o;23333:133::-;23376:5;23414:6;23401:20;23392:29;;23430:30;23454:5;23430:30;:::i;:::-;23333:133;;;;:::o;23472:468::-;23537:6;23545;23594:2;23582:9;23573:7;23569:23;23565:32;23562:119;;;23600:79;;:::i;:::-;23562:119;23720:1;23745:53;23790:7;23781:6;23770:9;23766:22;23745:53;:::i;:::-;23735:63;;23691:117;23847:2;23873:50;23915:7;23906:6;23895:9;23891:22;23873:50;:::i;:::-;23863:60;;23818:115;23472:468;;;;;:::o;23946:474::-;24014:6;24022;24071:2;24059:9;24050:7;24046:23;24042:32;24039:119;;;24077:79;;:::i;:::-;24039:119;24197:1;24222:53;24267:7;24258:6;24247:9;24243:22;24222:53;:::i;:::-;24212:63;;24168:117;24324:2;24350:53;24395:7;24386:6;24375:9;24371:22;24350:53;:::i;:::-;24340:63;;24295:118;23946:474;;;;;:::o;24426:1089::-;24530:6;24538;24546;24554;24562;24611:3;24599:9;24590:7;24586:23;24582:33;24579:120;;;24618:79;;:::i;:::-;24579:120;24738:1;24763:53;24808:7;24799:6;24788:9;24784:22;24763:53;:::i;:::-;24753:63;;24709:117;24865:2;24891:53;24936:7;24927:6;24916:9;24912:22;24891:53;:::i;:::-;24881:63;;24836:118;24993:2;25019:53;25064:7;25055:6;25044:9;25040:22;25019:53;:::i;:::-;25009:63;;24964:118;25121:2;25147:53;25192:7;25183:6;25172:9;25168:22;25147:53;:::i;:::-;25137:63;;25092:118;25277:3;25266:9;25262:19;25249:33;25309:18;25301:6;25298:30;25295:117;;;25331:79;;:::i;:::-;25295:117;25436:62;25490:7;25481:6;25470:9;25466:22;25436:62;:::i;:::-;25426:72;;25220:288;24426:1089;;;;;;;;:::o;25521:619::-;25598:6;25606;25614;25663:2;25651:9;25642:7;25638:23;25634:32;25631:119;;;25669:79;;:::i;:::-;25631:119;25789:1;25814:53;25859:7;25850:6;25839:9;25835:22;25814:53;:::i;:::-;25804:63;;25760:117;25916:2;25942:53;25987:7;25978:6;25967:9;25963:22;25942:53;:::i;:::-;25932:63;;25887:118;26044:2;26070:53;26115:7;26106:6;26095:9;26091:22;26070:53;:::i;:::-;26060:63;;26015:118;25521:619;;;;;:::o;26146:148::-;26248:11;26285:3;26270:18;;26146:148;;;;:::o;26300:390::-;26406:3;26434:39;26467:5;26434:39;:::i;:::-;26489:89;26571:6;26566:3;26489:89;:::i;:::-;26482:96;;26587:65;26645:6;26640:3;26633:4;26626:5;26622:16;26587:65;:::i;:::-;26677:6;26672:3;26668:16;26661:23;;26410:280;26300:390;;;;:::o;26696:435::-;26876:3;26898:95;26989:3;26980:6;26898:95;:::i;:::-;26891:102;;27010:95;27101:3;27092:6;27010:95;:::i;:::-;27003:102;;27122:3;27115:10;;26696:435;;;;;:::o;27137:180::-;27185:77;27182:1;27175:88;27282:4;27279:1;27272:15;27306:4;27303:1;27296:15;27323:118;27410:24;27428:5;27410:24;:::i;:::-;27405:3;27398:37;27323:118;;:::o;27447:332::-;27568:4;27606:2;27595:9;27591:18;27583:26;;27619:71;27687:1;27676:9;27672:17;27663:6;27619:71;:::i;:::-;27700:72;27768:2;27757:9;27753:18;27744:6;27700:72;:::i;:::-;27447:332;;;;;:::o;27785:::-;27906:4;27944:2;27933:9;27929:18;27921:26;;27957:71;28025:1;28014:9;28010:17;28001:6;27957:71;:::i;:::-;28038:72;28106:2;28095:9;28091:18;28082:6;28038:72;:::i;:::-;27785:332;;;;;:::o;28123:180::-;28171:77;28168:1;28161:88;28268:4;28265:1;28258:15;28292:4;28289:1;28282:15;28309:320;28353:6;28390:1;28384:4;28380:12;28370:22;;28437:1;28431:4;28427:12;28458:18;28448:81;;28514:4;28506:6;28502:17;28492:27;;28448:81;28576:2;28568:6;28565:14;28545:18;28542:38;28539:84;;28595:18;;:::i;:::-;28539:84;28360:269;28309:320;;;:::o;28635:141::-;28684:4;28707:3;28699:11;;28730:3;28727:1;28720:14;28764:4;28761:1;28751:18;28743:26;;28635:141;;;:::o;28782:93::-;28819:6;28866:2;28861;28854:5;28850:14;28846:23;28836:33;;28782:93;;;:::o;28881:107::-;28925:8;28975:5;28969:4;28965:16;28944:37;;28881:107;;;;:::o;28994:393::-;29063:6;29113:1;29101:10;29097:18;29136:97;29166:66;29155:9;29136:97;:::i;:::-;29254:39;29284:8;29273:9;29254:39;:::i;:::-;29242:51;;29326:4;29322:9;29315:5;29311:21;29302:30;;29375:4;29365:8;29361:19;29354:5;29351:30;29341:40;;29070:317;;28994:393;;;;;:::o;29393:60::-;29421:3;29442:5;29435:12;;29393:60;;;:::o;29459:142::-;29509:9;29542:53;29560:34;29569:24;29587:5;29569:24;:::i;:::-;29560:34;:::i;:::-;29542:53;:::i;:::-;29529:66;;29459:142;;;:::o;29607:75::-;29650:3;29671:5;29664:12;;29607:75;;;:::o;29688:269::-;29798:39;29829:7;29798:39;:::i;:::-;29859:91;29908:41;29932:16;29908:41;:::i;:::-;29900:6;29893:4;29887:11;29859:91;:::i;:::-;29853:4;29846:105;29764:193;29688:269;;;:::o;29963:73::-;30008:3;29963:73;:::o;30042:189::-;30119:32;;:::i;:::-;30160:65;30218:6;30210;30204:4;30160:65;:::i;:::-;30095:136;30042:189;;:::o;30237:186::-;30297:120;30314:3;30307:5;30304:14;30297:120;;;30368:39;30405:1;30398:5;30368:39;:::i;:::-;30341:1;30334:5;30330:13;30321:22;;30297:120;;;30237:186;;:::o;30429:543::-;30530:2;30525:3;30522:11;30519:446;;;30564:38;30596:5;30564:38;:::i;:::-;30648:29;30666:10;30648:29;:::i;:::-;30638:8;30634:44;30831:2;30819:10;30816:18;30813:49;;;30852:8;30837:23;;30813:49;30875:80;30931:22;30949:3;30931:22;:::i;:::-;30921:8;30917:37;30904:11;30875:80;:::i;:::-;30534:431;;30519:446;30429:543;;;:::o;30978:117::-;31032:8;31082:5;31076:4;31072:16;31051:37;;30978:117;;;;:::o;31101:169::-;31145:6;31178:51;31226:1;31222:6;31214:5;31211:1;31207:13;31178:51;:::i;:::-;31174:56;31259:4;31253;31249:15;31239:25;;31152:118;31101:169;;;;:::o;31275:295::-;31351:4;31497:29;31522:3;31516:4;31497:29;:::i;:::-;31489:37;;31559:3;31556:1;31552:11;31546:4;31543:21;31535:29;;31275:295;;;;:::o;31575:1395::-;31692:37;31725:3;31692:37;:::i;:::-;31794:18;31786:6;31783:30;31780:56;;;31816:18;;:::i;:::-;31780:56;31860:38;31892:4;31886:11;31860:38;:::i;:::-;31945:67;32005:6;31997;31991:4;31945:67;:::i;:::-;32039:1;32063:4;32050:17;;32095:2;32087:6;32084:14;32112:1;32107:618;;;;32769:1;32786:6;32783:77;;;32835:9;32830:3;32826:19;32820:26;32811:35;;32783:77;32886:67;32946:6;32939:5;32886:67;:::i;:::-;32880:4;32873:81;32742:222;32077:887;;32107:618;32159:4;32155:9;32147:6;32143:22;32193:37;32225:4;32193:37;:::i;:::-;32252:1;32266:208;32280:7;32277:1;32274:14;32266:208;;;32359:9;32354:3;32350:19;32344:26;32336:6;32329:42;32410:1;32402:6;32398:14;32388:24;;32457:2;32446:9;32442:18;32429:31;;32303:4;32300:1;32296:12;32291:17;;32266:208;;;32502:6;32493:7;32490:19;32487:179;;;32560:9;32555:3;32551:19;32545:26;32603:48;32645:4;32637:6;32633:17;32622:9;32603:48;:::i;:::-;32595:6;32588:64;32510:156;32487:179;32712:1;32708;32700:6;32696:14;32692:22;32686:4;32679:36;32114:611;;;32077:887;;31667:1303;;;31575:1395;;:::o;32976:180::-;33024:77;33021:1;33014:88;33121:4;33118:1;33111:15;33145:4;33142:1;33135:15;33162:222;33255:4;33293:2;33282:9;33278:18;33270:26;;33306:71;33374:1;33363:9;33359:17;33350:6;33306:71;:::i;:::-;33162:222;;;;:::o;33390:332::-;33511:4;33549:2;33538:9;33534:18;33526:26;;33562:71;33630:1;33619:9;33615:17;33606:6;33562:71;:::i;:::-;33643:72;33711:2;33700:9;33696:18;33687:6;33643:72;:::i;:::-;33390:332;;;;;:::o;33728:98::-;33779:6;33813:5;33807:12;33797:22;;33728:98;;;:::o;33832:168::-;33915:11;33949:6;33944:3;33937:19;33989:4;33984:3;33980:14;33965:29;;33832:168;;;;:::o;34006:373::-;34092:3;34120:38;34152:5;34120:38;:::i;:::-;34174:70;34237:6;34232:3;34174:70;:::i;:::-;34167:77;;34253:65;34311:6;34306:3;34299:4;34292:5;34288:16;34253:65;:::i;:::-;34343:29;34365:6;34343:29;:::i;:::-;34338:3;34334:39;34327:46;;34096:283;34006:373;;;;:::o;34385:751::-;34608:4;34646:3;34635:9;34631:19;34623:27;;34660:71;34728:1;34717:9;34713:17;34704:6;34660:71;:::i;:::-;34741:72;34809:2;34798:9;34794:18;34785:6;34741:72;:::i;:::-;34823;34891:2;34880:9;34876:18;34867:6;34823:72;:::i;:::-;34905;34973:2;34962:9;34958:18;34949:6;34905:72;:::i;:::-;35025:9;35019:4;35015:20;35009:3;34998:9;34994:19;34987:49;35053:76;35124:4;35115:6;35053:76;:::i;:::-;35045:84;;34385:751;;;;;;;;:::o;35142:141::-;35198:5;35229:6;35223:13;35214:22;;35245:32;35271:5;35245:32;:::i;:::-;35142:141;;;;:::o;35289:349::-;35358:6;35407:2;35395:9;35386:7;35382:23;35378:32;35375:119;;;35413:79;;:::i;:::-;35375:119;35533:1;35558:63;35613:7;35604:6;35593:9;35589:22;35558:63;:::i;:::-;35548:73;;35504:127;35289:349;;;;:::o;35644:1053::-;35967:4;36005:3;35994:9;35990:19;35982:27;;36019:71;36087:1;36076:9;36072:17;36063:6;36019:71;:::i;:::-;36100:72;36168:2;36157:9;36153:18;36144:6;36100:72;:::i;:::-;36219:9;36213:4;36209:20;36204:2;36193:9;36189:18;36182:48;36247:108;36350:4;36341:6;36247:108;:::i;:::-;36239:116;;36402:9;36396:4;36392:20;36387:2;36376:9;36372:18;36365:48;36430:108;36533:4;36524:6;36430:108;:::i;:::-;36422:116;;36586:9;36580:4;36576:20;36570:3;36559:9;36555:19;36548:49;36614:76;36685:4;36676:6;36614:76;:::i;:::-;36606:84;;35644:1053;;;;;;;;:::o;36703:553::-;36880:4;36918:3;36907:9;36903:19;36895:27;;36932:71;37000:1;36989:9;36985:17;36976:6;36932:71;:::i;:::-;37013:72;37081:2;37070:9;37066:18;37057:6;37013:72;:::i;:::-;37095;37163:2;37152:9;37148:18;37139:6;37095:72;:::i;:::-;37177;37245:2;37234:9;37230:18;37221:6;37177:72;:::i;:::-;36703:553;;;;;;;:::o;37262:180::-;37310:77;37307:1;37300:88;37407:4;37404:1;37397:15;37431:4;37428:1;37421:15;37448:191;37488:3;37507:20;37525:1;37507:20;:::i;:::-;37502:25;;37541:20;37559:1;37541:20;:::i;:::-;37536:25;;37584:1;37581;37577:9;37570:16;;37605:3;37602:1;37599:10;37596:36;;;37612:18;;:::i;:::-;37596:36;37448:191;;;;:::o;37645:634::-;37866:4;37904:2;37893:9;37889:18;37881:26;;37953:9;37947:4;37943:20;37939:1;37928:9;37924:17;37917:47;37981:108;38084:4;38075:6;37981:108;:::i;:::-;37973:116;;38136:9;38130:4;38126:20;38121:2;38110:9;38106:18;38099:48;38164:108;38267:4;38258:6;38164:108;:::i;:::-;38156:116;;37645:634;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","URI_SETTER_ROLE()":"7f345710","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","balanceOfBatchOneAddr(address,uint256[])":"2e240ade","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","mintBatchAddr(address[],uint256[],uint256[],bytes)":"503a28bd","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","unpause()":"3f4ba83a","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"URI_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatchOneAddr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatchAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RoguesItems.sol\":\"RoguesItems\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0x8caf50b64528a487bc45c6cf89b514adbbdaae20aaf6e98a834c5e74c914c660\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6408411bf7a72026f5fee578ff58f4fb0f6951e6ee7092776b81f563931dd704\",\"dweb:/ipfs/QmeFjtJxSKFRD5LjREUds1bptQzqHs7gwPtrHBdDfzumJC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/RoguesItems.sol\":{\"keccak256\":\"0xaf8fb1be90826604e805d5bed286bb071c48f21d8580207a2799403e6ed587ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a78d2e62492b74ce2c835df3fc0c1b8fd4215ff771de114a6c2573198a3f295\",\"dweb:/ipfs/QmatsJexUx2LW1p5xYkmaPKDhwwZXZ9K1dhVTLrHxGat6f\"]}},\"version\":1}"}}}}}